
kernel：     檔案格式 elf32-i386


Disassembly of section .text:

c0001500 <main>:
c0001500:	8d 4c 24 04          	lea    0x4(%esp),%ecx
c0001504:	83 e4 f0             	and    $0xfffffff0,%esp
c0001507:	ff 71 fc             	pushl  -0x4(%ecx)
c000150a:	55                   	push   %ebp
c000150b:	89 e5                	mov    %esp,%ebp
c000150d:	53                   	push   %ebx
c000150e:	51                   	push   %ecx
c000150f:	e8 c0 00 00 00       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0001514:	81 c3 ec 5a 00 00    	add    $0x5aec,%ebx
c000151a:	e8 75 00 00 00       	call   c0001594 <initialize_all>
c000151f:	83 ec 0c             	sub    $0xc,%esp
c0001522:	8d 83 9c d3 ff ff    	lea    -0x2c64(%ebx),%eax
c0001528:	50                   	push   %eax
c0001529:	e8 a6 01 00 00       	call   c00016d4 <put_str>
c000152e:	83 c4 10             	add    $0x10,%esp
c0001531:	c7 c0 8c 73 00 c0    	mov    $0xc000738c,%eax
c0001537:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c000153d:	83 ec 08             	sub    $0x8,%esp
c0001540:	8d 83 ad d3 ff ff    	lea    -0x2c53(%ebx),%eax
c0001546:	50                   	push   %eax
c0001547:	8d 83 85 a5 ff ff    	lea    -0x5a7b(%ebx),%eax
c000154d:	50                   	push   %eax
c000154e:	e8 8f 2d 00 00       	call   c00042e2 <process_execute>
c0001553:	83 c4 10             	add    $0x10,%esp
c0001556:	e8 11 0d 00 00       	call   c000226c <intopen>
c000155b:	eb fe                	jmp    c000155b <main+0x5b>

c000155d <k_thread>:
c000155d:	55                   	push   %ebp
c000155e:	89 e5                	mov    %esp,%ebp
c0001560:	53                   	push   %ebx
c0001561:	83 ec 04             	sub    $0x4,%esp
c0001564:	e8 6b 00 00 00       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0001569:	81 c3 97 5a 00 00    	add    $0x5a97,%ebx
c000156f:	c7 c0 8c 73 00 c0    	mov    $0xc000738c,%eax
c0001575:	8b 00                	mov    (%eax),%eax
c0001577:	83 ec 0c             	sub    $0xc,%esp
c000157a:	50                   	push   %eax
c000157b:	e8 0b 23 00 00       	call   c000388b <console_put_int>
c0001580:	83 c4 10             	add    $0x10,%esp
c0001583:	eb ea                	jmp    c000156f <k_thread+0x12>

c0001585 <p_thread>:
c0001585:	55                   	push   %ebp
c0001586:	89 e5                	mov    %esp,%ebp
c0001588:	e8 43 00 00 00       	call   c00015d0 <__x86.get_pc_thunk.ax>
c000158d:	05 73 5a 00 00       	add    $0x5a73,%eax
c0001592:	eb fe                	jmp    c0001592 <p_thread+0xd>

c0001594 <initialize_all>:
c0001594:	55                   	push   %ebp
c0001595:	89 e5                	mov    %esp,%ebp
c0001597:	53                   	push   %ebx
c0001598:	83 ec 04             	sub    $0x4,%esp
c000159b:	e8 34 00 00 00       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00015a0:	81 c3 60 5a 00 00    	add    $0x5a60,%ebx
c00015a6:	e8 51 0c 00 00       	call   c00021fc <idt_init>
c00015ab:	e8 d2 0e 00 00       	call   c0002482 <bitmap_init_all>
c00015b0:	e8 74 21 00 00       	call   c0003729 <timer_init>
c00015b5:	e8 06 1b 00 00       	call   c00030c0 <thread_init>
c00015ba:	e8 05 22 00 00       	call   c00037c4 <console_init>
c00015bf:	e8 6e 26 00 00       	call   c0003c32 <keyboard_init>
c00015c4:	e8 ca 29 00 00       	call   c0003f93 <tss_init>
c00015c9:	90                   	nop
c00015ca:	83 c4 04             	add    $0x4,%esp
c00015cd:	5b                   	pop    %ebx
c00015ce:	5d                   	pop    %ebp
c00015cf:	c3                   	ret    

c00015d0 <__x86.get_pc_thunk.ax>:
c00015d0:	8b 04 24             	mov    (%esp),%eax
c00015d3:	c3                   	ret    

c00015d4 <__x86.get_pc_thunk.bx>:
c00015d4:	8b 1c 24             	mov    (%esp),%ebx
c00015d7:	c3                   	ret    
c00015d8:	66 90                	xchg   %ax,%ax
c00015da:	66 90                	xchg   %ax,%ax
c00015dc:	66 90                	xchg   %ax,%ax
c00015de:	66 90                	xchg   %ax,%ax

c00015e0 <put_char>:
c00015e0:	60                   	pusha  
c00015e1:	66 b8 18 00          	mov    $0x18,%ax
c00015e5:	8e e8                	mov    %eax,%gs
c00015e7:	66 ba d4 03          	mov    $0x3d4,%dx
c00015eb:	b0 0e                	mov    $0xe,%al
c00015ed:	ee                   	out    %al,(%dx)
c00015ee:	66 ba d5 03          	mov    $0x3d5,%dx
c00015f2:	ec                   	in     (%dx),%al
c00015f3:	88 c4                	mov    %al,%ah
c00015f5:	66 ba d4 03          	mov    $0x3d4,%dx
c00015f9:	b0 0f                	mov    $0xf,%al
c00015fb:	ee                   	out    %al,(%dx)
c00015fc:	66 ba d5 03          	mov    $0x3d5,%dx
c0001600:	ec                   	in     (%dx),%al
c0001601:	66 89 c3             	mov    %ax,%bx
c0001604:	8a 44 24 24          	mov    0x24(%esp),%al
c0001608:	3c 0a                	cmp    $0xa,%al
c000160a:	74 0a                	je     c0001616 <put_char.is_enter>
c000160c:	3c 0d                	cmp    $0xd,%al
c000160e:	74 06                	je     c0001616 <put_char.is_enter>
c0001610:	3c 08                	cmp    $0x8,%al
c0001612:	74 18                	je     c000162c <put_char.is_backspace>
c0001614:	eb 34                	jmp    c000164a <put_char.normal_case>

c0001616 <put_char.is_enter>:
c0001616:	66 31 d2             	xor    %dx,%dx
c0001619:	66 89 d8             	mov    %bx,%ax
c000161c:	66 b9 50 00          	mov    $0x50,%cx
c0001620:	66 f7 f1             	div    %cx
c0001623:	66 29 d3             	sub    %dx,%bx
c0001626:	66 83 c3 50          	add    $0x50,%bx
c000162a:	eb 33                	jmp    c000165f <put_char.page_roll>

c000162c <put_char.is_backspace>:
c000162c:	66 83 fb 00          	cmp    $0x0,%bx
c0001630:	74 7f                	je     c00016b1 <put_char.putchar_end>
c0001632:	66 83 eb 01          	sub    $0x1,%bx
c0001636:	66 d1 e3             	shl    %bx
c0001639:	65 67 c6 07 00       	movb   $0x0,%gs:(%bx)
c000163e:	66 43                	inc    %bx
c0001640:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c0001645:	66 d1 eb             	shr    %bx
c0001648:	eb 15                	jmp    c000165f <put_char.page_roll>

c000164a <put_char.normal_case>:
c000164a:	66 d1 e3             	shl    %bx
c000164d:	65 67 88 07          	mov    %al,%gs:(%bx)
c0001651:	66 43                	inc    %bx
c0001653:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c0001658:	66 43                	inc    %bx
c000165a:	66 d1 eb             	shr    %bx
c000165d:	eb 00                	jmp    c000165f <put_char.page_roll>

c000165f <put_char.page_roll>:
c000165f:	66 81 fb d0 07       	cmp    $0x7d0,%bx
c0001664:	7c 2f                	jl     c0001695 <put_char.reset_cursor>
c0001666:	fc                   	cld    
c0001667:	b9 c0 03 00 00       	mov    $0x3c0,%ecx
c000166c:	be a0 80 0b c0       	mov    $0xc00b80a0,%esi
c0001671:	bf 00 80 0b c0       	mov    $0xc00b8000,%edi
c0001676:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
c0001678:	b9 50 00 00 00       	mov    $0x50,%ecx
c000167d:	66 bb 00 0f          	mov    $0xf00,%bx

c0001681 <put_char.clr>:
c0001681:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c0001686:	66 43                	inc    %bx
c0001688:	65 67 c6 07 20       	movb   $0x20,%gs:(%bx)
c000168d:	66 43                	inc    %bx
c000168f:	e2 f0                	loop   c0001681 <put_char.clr>
c0001691:	66 bb 80 07          	mov    $0x780,%bx

c0001695 <put_char.reset_cursor>:
c0001695:	66 ba d4 03          	mov    $0x3d4,%dx
c0001699:	b0 0e                	mov    $0xe,%al
c000169b:	ee                   	out    %al,(%dx)
c000169c:	66 ba d5 03          	mov    $0x3d5,%dx
c00016a0:	88 f8                	mov    %bh,%al
c00016a2:	ee                   	out    %al,(%dx)
c00016a3:	66 ba d4 03          	mov    $0x3d4,%dx
c00016a7:	b0 0f                	mov    $0xf,%al
c00016a9:	ee                   	out    %al,(%dx)
c00016aa:	66 ba d5 03          	mov    $0x3d5,%dx
c00016ae:	88 d8                	mov    %bl,%al
c00016b0:	ee                   	out    %al,(%dx)

c00016b1 <put_char.putchar_end>:
c00016b1:	61                   	popa   
c00016b2:	c3                   	ret    

c00016b3 <set_cursor>:
c00016b3:	8b 5c 24 04          	mov    0x4(%esp),%ebx
c00016b7:	66 ba d4 03          	mov    $0x3d4,%dx
c00016bb:	b0 0e                	mov    $0xe,%al
c00016bd:	ee                   	out    %al,(%dx)
c00016be:	66 ba d5 03          	mov    $0x3d5,%dx
c00016c2:	88 f8                	mov    %bh,%al
c00016c4:	ee                   	out    %al,(%dx)
c00016c5:	66 ba d4 03          	mov    $0x3d4,%dx
c00016c9:	b0 0f                	mov    $0xf,%al
c00016cb:	ee                   	out    %al,(%dx)
c00016cc:	66 ba d5 03          	mov    $0x3d5,%dx
c00016d0:	88 d8                	mov    %bl,%al
c00016d2:	ee                   	out    %al,(%dx)
c00016d3:	c3                   	ret    

c00016d4 <put_str>:
c00016d4:	55                   	push   %ebp
c00016d5:	89 e5                	mov    %esp,%ebp
c00016d7:	53                   	push   %ebx
c00016d8:	83 ec 14             	sub    $0x14,%esp
c00016db:	e8 f4 fe ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00016e0:	81 c3 20 59 00 00    	add    $0x5920,%ebx
c00016e6:	8b 45 08             	mov    0x8(%ebp),%eax
c00016e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00016ec:	eb 19                	jmp    c0001707 <put_str+0x33>
c00016ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00016f1:	0f b6 00             	movzbl (%eax),%eax
c00016f4:	0f b6 c0             	movzbl %al,%eax
c00016f7:	83 ec 0c             	sub    $0xc,%esp
c00016fa:	50                   	push   %eax
c00016fb:	e8 e0 fe ff ff       	call   c00015e0 <put_char>
c0001700:	83 c4 10             	add    $0x10,%esp
c0001703:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001707:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000170a:	0f b6 00             	movzbl (%eax),%eax
c000170d:	84 c0                	test   %al,%al
c000170f:	75 dd                	jne    c00016ee <put_str+0x1a>
c0001711:	90                   	nop
c0001712:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001715:	c9                   	leave  
c0001716:	c3                   	ret    

c0001717 <put_int>:
c0001717:	55                   	push   %ebp
c0001718:	89 e5                	mov    %esp,%ebp
c000171a:	53                   	push   %ebx
c000171b:	83 ec 14             	sub    $0x14,%esp
c000171e:	e8 b1 fe ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0001723:	81 c3 dd 58 00 00    	add    $0x58dd,%ebx
c0001729:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c000172d:	75 0d                	jne    c000173c <put_int+0x25>
c000172f:	83 ec 0c             	sub    $0xc,%esp
c0001732:	6a 30                	push   $0x30
c0001734:	e8 a7 fe ff ff       	call   c00015e0 <put_char>
c0001739:	83 c4 10             	add    $0x10,%esp
c000173c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001743:	eb 44                	jmp    c0001789 <put_int+0x72>
c0001745:	8b 45 08             	mov    0x8(%ebp),%eax
c0001748:	83 e0 0f             	and    $0xf,%eax
c000174b:	83 f8 09             	cmp    $0x9,%eax
c000174e:	76 17                	jbe    c0001767 <put_int+0x50>
c0001750:	8b 45 08             	mov    0x8(%ebp),%eax
c0001753:	83 e0 0f             	and    $0xf,%eax
c0001756:	8d 50 57             	lea    0x57(%eax),%edx
c0001759:	b8 07 00 00 00       	mov    $0x7,%eax
c000175e:	2b 45 f4             	sub    -0xc(%ebp),%eax
c0001761:	88 54 05 ec          	mov    %dl,-0x14(%ebp,%eax,1)
c0001765:	eb 15                	jmp    c000177c <put_int+0x65>
c0001767:	8b 45 08             	mov    0x8(%ebp),%eax
c000176a:	83 e0 0f             	and    $0xf,%eax
c000176d:	8d 50 30             	lea    0x30(%eax),%edx
c0001770:	b8 07 00 00 00       	mov    $0x7,%eax
c0001775:	2b 45 f4             	sub    -0xc(%ebp),%eax
c0001778:	88 54 05 ec          	mov    %dl,-0x14(%ebp,%eax,1)
c000177c:	8b 45 08             	mov    0x8(%ebp),%eax
c000177f:	c1 e8 04             	shr    $0x4,%eax
c0001782:	89 45 08             	mov    %eax,0x8(%ebp)
c0001785:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001789:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)
c000178d:	7e b6                	jle    c0001745 <put_int+0x2e>
c000178f:	83 ec 0c             	sub    $0xc,%esp
c0001792:	6a 30                	push   $0x30
c0001794:	e8 47 fe ff ff       	call   c00015e0 <put_char>
c0001799:	83 c4 10             	add    $0x10,%esp
c000179c:	83 ec 0c             	sub    $0xc,%esp
c000179f:	6a 78                	push   $0x78
c00017a1:	e8 3a fe ff ff       	call   c00015e0 <put_char>
c00017a6:	83 c4 10             	add    $0x10,%esp
c00017a9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c00017b0:	eb 1e                	jmp    c00017d0 <put_int+0xb9>
c00017b2:	8d 55 ec             	lea    -0x14(%ebp),%edx
c00017b5:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00017b8:	01 d0                	add    %edx,%eax
c00017ba:	0f b6 00             	movzbl (%eax),%eax
c00017bd:	0f b6 c0             	movzbl %al,%eax
c00017c0:	83 ec 0c             	sub    $0xc,%esp
c00017c3:	50                   	push   %eax
c00017c4:	e8 17 fe ff ff       	call   c00015e0 <put_char>
c00017c9:	83 c4 10             	add    $0x10,%esp
c00017cc:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c00017d0:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)
c00017d4:	7e dc                	jle    c00017b2 <put_int+0x9b>
c00017d6:	90                   	nop
c00017d7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00017da:	c9                   	leave  
c00017db:	c3                   	ret    
c00017dc:	66 90                	xchg   %ax,%ax
c00017de:	66 90                	xchg   %ax,%ax

c00017e0 <intr0x0entry>:
c00017e0:	6a 00                	push   $0x0
c00017e2:	1e                   	push   %ds
c00017e3:	06                   	push   %es
c00017e4:	0f a0                	push   %fs
c00017e6:	0f a8                	push   %gs
c00017e8:	60                   	pusha  
c00017e9:	b0 20                	mov    $0x20,%al
c00017eb:	e6 a0                	out    %al,$0xa0
c00017ed:	e6 20                	out    %al,$0x20
c00017ef:	6a 00                	push   $0x0
c00017f1:	ff 15 60 74 00 c0    	call   *0xc0007460
c00017f7:	e9 24 58 00 00       	jmp    c0007020 <intr_exit>

c00017fc <intr1entry>:
c00017fc:	6a 00                	push   $0x0
c00017fe:	1e                   	push   %ds
c00017ff:	06                   	push   %es
c0001800:	0f a0                	push   %fs
c0001802:	0f a8                	push   %gs
c0001804:	60                   	pusha  
c0001805:	b0 20                	mov    $0x20,%al
c0001807:	e6 a0                	out    %al,$0xa0
c0001809:	e6 20                	out    %al,$0x20
c000180b:	6a 01                	push   $0x1
c000180d:	ff 15 64 74 00 c0    	call   *0xc0007464
c0001813:	e9 08 58 00 00       	jmp    c0007020 <intr_exit>

c0001818 <intr2entry>:
c0001818:	6a 00                	push   $0x0
c000181a:	1e                   	push   %ds
c000181b:	06                   	push   %es
c000181c:	0f a0                	push   %fs
c000181e:	0f a8                	push   %gs
c0001820:	60                   	pusha  
c0001821:	b0 20                	mov    $0x20,%al
c0001823:	e6 a0                	out    %al,$0xa0
c0001825:	e6 20                	out    %al,$0x20
c0001827:	6a 02                	push   $0x2
c0001829:	ff 15 68 74 00 c0    	call   *0xc0007468
c000182f:	e9 ec 57 00 00       	jmp    c0007020 <intr_exit>

c0001834 <intr3entry>:
c0001834:	6a 00                	push   $0x0
c0001836:	1e                   	push   %ds
c0001837:	06                   	push   %es
c0001838:	0f a0                	push   %fs
c000183a:	0f a8                	push   %gs
c000183c:	60                   	pusha  
c000183d:	b0 20                	mov    $0x20,%al
c000183f:	e6 a0                	out    %al,$0xa0
c0001841:	e6 20                	out    %al,$0x20
c0001843:	6a 03                	push   $0x3
c0001845:	ff 15 6c 74 00 c0    	call   *0xc000746c
c000184b:	e9 d0 57 00 00       	jmp    c0007020 <intr_exit>

c0001850 <intr4entry>:
c0001850:	6a 00                	push   $0x0
c0001852:	1e                   	push   %ds
c0001853:	06                   	push   %es
c0001854:	0f a0                	push   %fs
c0001856:	0f a8                	push   %gs
c0001858:	60                   	pusha  
c0001859:	b0 20                	mov    $0x20,%al
c000185b:	e6 a0                	out    %al,$0xa0
c000185d:	e6 20                	out    %al,$0x20
c000185f:	6a 04                	push   $0x4
c0001861:	ff 15 70 74 00 c0    	call   *0xc0007470
c0001867:	e9 b4 57 00 00       	jmp    c0007020 <intr_exit>

c000186c <intr5entry>:
c000186c:	6a 00                	push   $0x0
c000186e:	1e                   	push   %ds
c000186f:	06                   	push   %es
c0001870:	0f a0                	push   %fs
c0001872:	0f a8                	push   %gs
c0001874:	60                   	pusha  
c0001875:	b0 20                	mov    $0x20,%al
c0001877:	e6 a0                	out    %al,$0xa0
c0001879:	e6 20                	out    %al,$0x20
c000187b:	6a 05                	push   $0x5
c000187d:	ff 15 74 74 00 c0    	call   *0xc0007474
c0001883:	e9 98 57 00 00       	jmp    c0007020 <intr_exit>

c0001888 <intr6entry>:
c0001888:	6a 00                	push   $0x0
c000188a:	1e                   	push   %ds
c000188b:	06                   	push   %es
c000188c:	0f a0                	push   %fs
c000188e:	0f a8                	push   %gs
c0001890:	60                   	pusha  
c0001891:	b0 20                	mov    $0x20,%al
c0001893:	e6 a0                	out    %al,$0xa0
c0001895:	e6 20                	out    %al,$0x20
c0001897:	6a 06                	push   $0x6
c0001899:	ff 15 78 74 00 c0    	call   *0xc0007478
c000189f:	e9 7c 57 00 00       	jmp    c0007020 <intr_exit>

c00018a4 <intr7entry>:
c00018a4:	6a 00                	push   $0x0
c00018a6:	1e                   	push   %ds
c00018a7:	06                   	push   %es
c00018a8:	0f a0                	push   %fs
c00018aa:	0f a8                	push   %gs
c00018ac:	60                   	pusha  
c00018ad:	b0 20                	mov    $0x20,%al
c00018af:	e6 a0                	out    %al,$0xa0
c00018b1:	e6 20                	out    %al,$0x20
c00018b3:	6a 07                	push   $0x7
c00018b5:	ff 15 7c 74 00 c0    	call   *0xc000747c
c00018bb:	e9 60 57 00 00       	jmp    c0007020 <intr_exit>

c00018c0 <intr8entry>:
c00018c0:	6a 00                	push   $0x0
c00018c2:	1e                   	push   %ds
c00018c3:	06                   	push   %es
c00018c4:	0f a0                	push   %fs
c00018c6:	0f a8                	push   %gs
c00018c8:	60                   	pusha  
c00018c9:	b0 20                	mov    $0x20,%al
c00018cb:	e6 a0                	out    %al,$0xa0
c00018cd:	e6 20                	out    %al,$0x20
c00018cf:	6a 08                	push   $0x8
c00018d1:	ff 15 80 74 00 c0    	call   *0xc0007480
c00018d7:	e9 44 57 00 00       	jmp    c0007020 <intr_exit>

c00018dc <intr9entry>:
c00018dc:	6a 00                	push   $0x0
c00018de:	1e                   	push   %ds
c00018df:	06                   	push   %es
c00018e0:	0f a0                	push   %fs
c00018e2:	0f a8                	push   %gs
c00018e4:	60                   	pusha  
c00018e5:	b0 20                	mov    $0x20,%al
c00018e7:	e6 a0                	out    %al,$0xa0
c00018e9:	e6 20                	out    %al,$0x20
c00018eb:	6a 09                	push   $0x9
c00018ed:	ff 15 84 74 00 c0    	call   *0xc0007484
c00018f3:	e9 28 57 00 00       	jmp    c0007020 <intr_exit>

c00018f8 <intr10entry>:
c00018f8:	6a 00                	push   $0x0
c00018fa:	1e                   	push   %ds
c00018fb:	06                   	push   %es
c00018fc:	0f a0                	push   %fs
c00018fe:	0f a8                	push   %gs
c0001900:	60                   	pusha  
c0001901:	b0 20                	mov    $0x20,%al
c0001903:	e6 a0                	out    %al,$0xa0
c0001905:	e6 20                	out    %al,$0x20
c0001907:	6a 0a                	push   $0xa
c0001909:	ff 15 88 74 00 c0    	call   *0xc0007488
c000190f:	e9 0c 57 00 00       	jmp    c0007020 <intr_exit>

c0001914 <intr11entry>:
c0001914:	6a 00                	push   $0x0
c0001916:	1e                   	push   %ds
c0001917:	06                   	push   %es
c0001918:	0f a0                	push   %fs
c000191a:	0f a8                	push   %gs
c000191c:	60                   	pusha  
c000191d:	b0 20                	mov    $0x20,%al
c000191f:	e6 a0                	out    %al,$0xa0
c0001921:	e6 20                	out    %al,$0x20
c0001923:	6a 0b                	push   $0xb
c0001925:	ff 15 8c 74 00 c0    	call   *0xc000748c
c000192b:	e9 f0 56 00 00       	jmp    c0007020 <intr_exit>

c0001930 <intr12entry>:
c0001930:	6a 00                	push   $0x0
c0001932:	1e                   	push   %ds
c0001933:	06                   	push   %es
c0001934:	0f a0                	push   %fs
c0001936:	0f a8                	push   %gs
c0001938:	60                   	pusha  
c0001939:	b0 20                	mov    $0x20,%al
c000193b:	e6 a0                	out    %al,$0xa0
c000193d:	e6 20                	out    %al,$0x20
c000193f:	6a 0c                	push   $0xc
c0001941:	ff 15 90 74 00 c0    	call   *0xc0007490
c0001947:	e9 d4 56 00 00       	jmp    c0007020 <intr_exit>

c000194c <intr13entry>:
c000194c:	6a 00                	push   $0x0
c000194e:	1e                   	push   %ds
c000194f:	06                   	push   %es
c0001950:	0f a0                	push   %fs
c0001952:	0f a8                	push   %gs
c0001954:	60                   	pusha  
c0001955:	b0 20                	mov    $0x20,%al
c0001957:	e6 a0                	out    %al,$0xa0
c0001959:	e6 20                	out    %al,$0x20
c000195b:	6a 0d                	push   $0xd
c000195d:	ff 15 94 74 00 c0    	call   *0xc0007494
c0001963:	e9 b8 56 00 00       	jmp    c0007020 <intr_exit>

c0001968 <intr14entry>:
c0001968:	6a 00                	push   $0x0
c000196a:	1e                   	push   %ds
c000196b:	06                   	push   %es
c000196c:	0f a0                	push   %fs
c000196e:	0f a8                	push   %gs
c0001970:	60                   	pusha  
c0001971:	b0 20                	mov    $0x20,%al
c0001973:	e6 a0                	out    %al,$0xa0
c0001975:	e6 20                	out    %al,$0x20
c0001977:	6a 0e                	push   $0xe
c0001979:	ff 15 98 74 00 c0    	call   *0xc0007498
c000197f:	e9 9c 56 00 00       	jmp    c0007020 <intr_exit>

c0001984 <intr15entry>:
c0001984:	6a 00                	push   $0x0
c0001986:	1e                   	push   %ds
c0001987:	06                   	push   %es
c0001988:	0f a0                	push   %fs
c000198a:	0f a8                	push   %gs
c000198c:	60                   	pusha  
c000198d:	b0 20                	mov    $0x20,%al
c000198f:	e6 a0                	out    %al,$0xa0
c0001991:	e6 20                	out    %al,$0x20
c0001993:	6a 0f                	push   $0xf
c0001995:	ff 15 9c 74 00 c0    	call   *0xc000749c
c000199b:	e9 80 56 00 00       	jmp    c0007020 <intr_exit>

c00019a0 <intr16entry>:
c00019a0:	6a 00                	push   $0x0
c00019a2:	1e                   	push   %ds
c00019a3:	06                   	push   %es
c00019a4:	0f a0                	push   %fs
c00019a6:	0f a8                	push   %gs
c00019a8:	60                   	pusha  
c00019a9:	b0 20                	mov    $0x20,%al
c00019ab:	e6 a0                	out    %al,$0xa0
c00019ad:	e6 20                	out    %al,$0x20
c00019af:	6a 10                	push   $0x10
c00019b1:	ff 15 a0 74 00 c0    	call   *0xc00074a0
c00019b7:	e9 64 56 00 00       	jmp    c0007020 <intr_exit>

c00019bc <intr17entry>:
c00019bc:	6a 00                	push   $0x0
c00019be:	1e                   	push   %ds
c00019bf:	06                   	push   %es
c00019c0:	0f a0                	push   %fs
c00019c2:	0f a8                	push   %gs
c00019c4:	60                   	pusha  
c00019c5:	b0 20                	mov    $0x20,%al
c00019c7:	e6 a0                	out    %al,$0xa0
c00019c9:	e6 20                	out    %al,$0x20
c00019cb:	6a 11                	push   $0x11
c00019cd:	ff 15 a4 74 00 c0    	call   *0xc00074a4
c00019d3:	e9 48 56 00 00       	jmp    c0007020 <intr_exit>

c00019d8 <intr18entry>:
c00019d8:	6a 00                	push   $0x0
c00019da:	1e                   	push   %ds
c00019db:	06                   	push   %es
c00019dc:	0f a0                	push   %fs
c00019de:	0f a8                	push   %gs
c00019e0:	60                   	pusha  
c00019e1:	b0 20                	mov    $0x20,%al
c00019e3:	e6 a0                	out    %al,$0xa0
c00019e5:	e6 20                	out    %al,$0x20
c00019e7:	6a 12                	push   $0x12
c00019e9:	ff 15 a8 74 00 c0    	call   *0xc00074a8
c00019ef:	e9 2c 56 00 00       	jmp    c0007020 <intr_exit>

c00019f4 <intr19entry>:
c00019f4:	6a 00                	push   $0x0
c00019f6:	1e                   	push   %ds
c00019f7:	06                   	push   %es
c00019f8:	0f a0                	push   %fs
c00019fa:	0f a8                	push   %gs
c00019fc:	60                   	pusha  
c00019fd:	b0 20                	mov    $0x20,%al
c00019ff:	e6 a0                	out    %al,$0xa0
c0001a01:	e6 20                	out    %al,$0x20
c0001a03:	6a 13                	push   $0x13
c0001a05:	ff 15 ac 74 00 c0    	call   *0xc00074ac
c0001a0b:	e9 10 56 00 00       	jmp    c0007020 <intr_exit>

c0001a10 <intr20entry>:
c0001a10:	6a 00                	push   $0x0
c0001a12:	1e                   	push   %ds
c0001a13:	06                   	push   %es
c0001a14:	0f a0                	push   %fs
c0001a16:	0f a8                	push   %gs
c0001a18:	60                   	pusha  
c0001a19:	b0 20                	mov    $0x20,%al
c0001a1b:	e6 a0                	out    %al,$0xa0
c0001a1d:	e6 20                	out    %al,$0x20
c0001a1f:	6a 14                	push   $0x14
c0001a21:	ff 15 b0 74 00 c0    	call   *0xc00074b0
c0001a27:	e9 f4 55 00 00       	jmp    c0007020 <intr_exit>

c0001a2c <intr21entry>:
c0001a2c:	6a 00                	push   $0x0
c0001a2e:	1e                   	push   %ds
c0001a2f:	06                   	push   %es
c0001a30:	0f a0                	push   %fs
c0001a32:	0f a8                	push   %gs
c0001a34:	60                   	pusha  
c0001a35:	b0 20                	mov    $0x20,%al
c0001a37:	e6 a0                	out    %al,$0xa0
c0001a39:	e6 20                	out    %al,$0x20
c0001a3b:	6a 15                	push   $0x15
c0001a3d:	ff 15 b4 74 00 c0    	call   *0xc00074b4
c0001a43:	e9 d8 55 00 00       	jmp    c0007020 <intr_exit>

c0001a48 <intr22entry>:
c0001a48:	6a 00                	push   $0x0
c0001a4a:	1e                   	push   %ds
c0001a4b:	06                   	push   %es
c0001a4c:	0f a0                	push   %fs
c0001a4e:	0f a8                	push   %gs
c0001a50:	60                   	pusha  
c0001a51:	b0 20                	mov    $0x20,%al
c0001a53:	e6 a0                	out    %al,$0xa0
c0001a55:	e6 20                	out    %al,$0x20
c0001a57:	6a 16                	push   $0x16
c0001a59:	ff 15 b8 74 00 c0    	call   *0xc00074b8
c0001a5f:	e9 bc 55 00 00       	jmp    c0007020 <intr_exit>

c0001a64 <intr23entry>:
c0001a64:	6a 00                	push   $0x0
c0001a66:	1e                   	push   %ds
c0001a67:	06                   	push   %es
c0001a68:	0f a0                	push   %fs
c0001a6a:	0f a8                	push   %gs
c0001a6c:	60                   	pusha  
c0001a6d:	b0 20                	mov    $0x20,%al
c0001a6f:	e6 a0                	out    %al,$0xa0
c0001a71:	e6 20                	out    %al,$0x20
c0001a73:	6a 17                	push   $0x17
c0001a75:	ff 15 bc 74 00 c0    	call   *0xc00074bc
c0001a7b:	e9 a0 55 00 00       	jmp    c0007020 <intr_exit>

c0001a80 <intr24entry>:
c0001a80:	6a 00                	push   $0x0
c0001a82:	1e                   	push   %ds
c0001a83:	06                   	push   %es
c0001a84:	0f a0                	push   %fs
c0001a86:	0f a8                	push   %gs
c0001a88:	60                   	pusha  
c0001a89:	b0 20                	mov    $0x20,%al
c0001a8b:	e6 a0                	out    %al,$0xa0
c0001a8d:	e6 20                	out    %al,$0x20
c0001a8f:	6a 18                	push   $0x18
c0001a91:	ff 15 c0 74 00 c0    	call   *0xc00074c0
c0001a97:	e9 84 55 00 00       	jmp    c0007020 <intr_exit>

c0001a9c <intr25entry>:
c0001a9c:	6a 00                	push   $0x0
c0001a9e:	1e                   	push   %ds
c0001a9f:	06                   	push   %es
c0001aa0:	0f a0                	push   %fs
c0001aa2:	0f a8                	push   %gs
c0001aa4:	60                   	pusha  
c0001aa5:	b0 20                	mov    $0x20,%al
c0001aa7:	e6 a0                	out    %al,$0xa0
c0001aa9:	e6 20                	out    %al,$0x20
c0001aab:	6a 19                	push   $0x19
c0001aad:	ff 15 c4 74 00 c0    	call   *0xc00074c4
c0001ab3:	e9 68 55 00 00       	jmp    c0007020 <intr_exit>

c0001ab8 <intr26entry>:
c0001ab8:	6a 00                	push   $0x0
c0001aba:	1e                   	push   %ds
c0001abb:	06                   	push   %es
c0001abc:	0f a0                	push   %fs
c0001abe:	0f a8                	push   %gs
c0001ac0:	60                   	pusha  
c0001ac1:	b0 20                	mov    $0x20,%al
c0001ac3:	e6 a0                	out    %al,$0xa0
c0001ac5:	e6 20                	out    %al,$0x20
c0001ac7:	6a 1a                	push   $0x1a
c0001ac9:	ff 15 c8 74 00 c0    	call   *0xc00074c8
c0001acf:	e9 4c 55 00 00       	jmp    c0007020 <intr_exit>

c0001ad4 <intr27entry>:
c0001ad4:	6a 00                	push   $0x0
c0001ad6:	1e                   	push   %ds
c0001ad7:	06                   	push   %es
c0001ad8:	0f a0                	push   %fs
c0001ada:	0f a8                	push   %gs
c0001adc:	60                   	pusha  
c0001add:	b0 20                	mov    $0x20,%al
c0001adf:	e6 a0                	out    %al,$0xa0
c0001ae1:	e6 20                	out    %al,$0x20
c0001ae3:	6a 1b                	push   $0x1b
c0001ae5:	ff 15 cc 74 00 c0    	call   *0xc00074cc
c0001aeb:	e9 30 55 00 00       	jmp    c0007020 <intr_exit>

c0001af0 <intr28entry>:
c0001af0:	6a 00                	push   $0x0
c0001af2:	1e                   	push   %ds
c0001af3:	06                   	push   %es
c0001af4:	0f a0                	push   %fs
c0001af6:	0f a8                	push   %gs
c0001af8:	60                   	pusha  
c0001af9:	b0 20                	mov    $0x20,%al
c0001afb:	e6 a0                	out    %al,$0xa0
c0001afd:	e6 20                	out    %al,$0x20
c0001aff:	6a 1c                	push   $0x1c
c0001b01:	ff 15 d0 74 00 c0    	call   *0xc00074d0
c0001b07:	e9 14 55 00 00       	jmp    c0007020 <intr_exit>

c0001b0c <intr29entry>:
c0001b0c:	6a 00                	push   $0x0
c0001b0e:	1e                   	push   %ds
c0001b0f:	06                   	push   %es
c0001b10:	0f a0                	push   %fs
c0001b12:	0f a8                	push   %gs
c0001b14:	60                   	pusha  
c0001b15:	b0 20                	mov    $0x20,%al
c0001b17:	e6 a0                	out    %al,$0xa0
c0001b19:	e6 20                	out    %al,$0x20
c0001b1b:	6a 1d                	push   $0x1d
c0001b1d:	ff 15 d4 74 00 c0    	call   *0xc00074d4
c0001b23:	e9 f8 54 00 00       	jmp    c0007020 <intr_exit>

c0001b28 <intr30entry>:
c0001b28:	6a 00                	push   $0x0
c0001b2a:	1e                   	push   %ds
c0001b2b:	06                   	push   %es
c0001b2c:	0f a0                	push   %fs
c0001b2e:	0f a8                	push   %gs
c0001b30:	60                   	pusha  
c0001b31:	b0 20                	mov    $0x20,%al
c0001b33:	e6 a0                	out    %al,$0xa0
c0001b35:	e6 20                	out    %al,$0x20
c0001b37:	6a 1e                	push   $0x1e
c0001b39:	ff 15 d8 74 00 c0    	call   *0xc00074d8
c0001b3f:	e9 dc 54 00 00       	jmp    c0007020 <intr_exit>

c0001b44 <intr31entry>:
c0001b44:	6a 00                	push   $0x0
c0001b46:	1e                   	push   %ds
c0001b47:	06                   	push   %es
c0001b48:	0f a0                	push   %fs
c0001b4a:	0f a8                	push   %gs
c0001b4c:	60                   	pusha  
c0001b4d:	b0 20                	mov    $0x20,%al
c0001b4f:	e6 a0                	out    %al,$0xa0
c0001b51:	e6 20                	out    %al,$0x20
c0001b53:	6a 1f                	push   $0x1f
c0001b55:	ff 15 dc 74 00 c0    	call   *0xc00074dc
c0001b5b:	e9 c0 54 00 00       	jmp    c0007020 <intr_exit>

c0001b60 <intr32entry>:
c0001b60:	6a 00                	push   $0x0
c0001b62:	1e                   	push   %ds
c0001b63:	06                   	push   %es
c0001b64:	0f a0                	push   %fs
c0001b66:	0f a8                	push   %gs
c0001b68:	60                   	pusha  
c0001b69:	b0 20                	mov    $0x20,%al
c0001b6b:	e6 a0                	out    %al,$0xa0
c0001b6d:	e6 20                	out    %al,$0x20
c0001b6f:	6a 20                	push   $0x20
c0001b71:	ff 15 e0 74 00 c0    	call   *0xc00074e0
c0001b77:	e9 a4 54 00 00       	jmp    c0007020 <intr_exit>

c0001b7c <intr33entry>:
c0001b7c:	6a 00                	push   $0x0
c0001b7e:	1e                   	push   %ds
c0001b7f:	06                   	push   %es
c0001b80:	0f a0                	push   %fs
c0001b82:	0f a8                	push   %gs
c0001b84:	60                   	pusha  
c0001b85:	b0 20                	mov    $0x20,%al
c0001b87:	e6 a0                	out    %al,$0xa0
c0001b89:	e6 20                	out    %al,$0x20
c0001b8b:	6a 21                	push   $0x21
c0001b8d:	ff 15 e4 74 00 c0    	call   *0xc00074e4
c0001b93:	e9 88 54 00 00       	jmp    c0007020 <intr_exit>

c0001b98 <intr34entry>:
c0001b98:	6a 00                	push   $0x0
c0001b9a:	1e                   	push   %ds
c0001b9b:	06                   	push   %es
c0001b9c:	0f a0                	push   %fs
c0001b9e:	0f a8                	push   %gs
c0001ba0:	60                   	pusha  
c0001ba1:	b0 20                	mov    $0x20,%al
c0001ba3:	e6 a0                	out    %al,$0xa0
c0001ba5:	e6 20                	out    %al,$0x20
c0001ba7:	6a 22                	push   $0x22
c0001ba9:	ff 15 e8 74 00 c0    	call   *0xc00074e8
c0001baf:	e9 6c 54 00 00       	jmp    c0007020 <intr_exit>

c0001bb4 <intr35entry>:
c0001bb4:	6a 00                	push   $0x0
c0001bb6:	1e                   	push   %ds
c0001bb7:	06                   	push   %es
c0001bb8:	0f a0                	push   %fs
c0001bba:	0f a8                	push   %gs
c0001bbc:	60                   	pusha  
c0001bbd:	b0 20                	mov    $0x20,%al
c0001bbf:	e6 a0                	out    %al,$0xa0
c0001bc1:	e6 20                	out    %al,$0x20
c0001bc3:	6a 23                	push   $0x23
c0001bc5:	ff 15 ec 74 00 c0    	call   *0xc00074ec
c0001bcb:	e9 50 54 00 00       	jmp    c0007020 <intr_exit>

c0001bd0 <intr36entry>:
c0001bd0:	6a 00                	push   $0x0
c0001bd2:	1e                   	push   %ds
c0001bd3:	06                   	push   %es
c0001bd4:	0f a0                	push   %fs
c0001bd6:	0f a8                	push   %gs
c0001bd8:	60                   	pusha  
c0001bd9:	b0 20                	mov    $0x20,%al
c0001bdb:	e6 a0                	out    %al,$0xa0
c0001bdd:	e6 20                	out    %al,$0x20
c0001bdf:	6a 24                	push   $0x24
c0001be1:	ff 15 f0 74 00 c0    	call   *0xc00074f0
c0001be7:	e9 34 54 00 00       	jmp    c0007020 <intr_exit>

c0001bec <intr37entry>:
c0001bec:	6a 00                	push   $0x0
c0001bee:	1e                   	push   %ds
c0001bef:	06                   	push   %es
c0001bf0:	0f a0                	push   %fs
c0001bf2:	0f a8                	push   %gs
c0001bf4:	60                   	pusha  
c0001bf5:	b0 20                	mov    $0x20,%al
c0001bf7:	e6 a0                	out    %al,$0xa0
c0001bf9:	e6 20                	out    %al,$0x20
c0001bfb:	6a 25                	push   $0x25
c0001bfd:	ff 15 f4 74 00 c0    	call   *0xc00074f4
c0001c03:	e9 18 54 00 00       	jmp    c0007020 <intr_exit>

c0001c08 <intr38entry>:
c0001c08:	6a 00                	push   $0x0
c0001c0a:	1e                   	push   %ds
c0001c0b:	06                   	push   %es
c0001c0c:	0f a0                	push   %fs
c0001c0e:	0f a8                	push   %gs
c0001c10:	60                   	pusha  
c0001c11:	b0 20                	mov    $0x20,%al
c0001c13:	e6 a0                	out    %al,$0xa0
c0001c15:	e6 20                	out    %al,$0x20
c0001c17:	6a 26                	push   $0x26
c0001c19:	ff 15 f8 74 00 c0    	call   *0xc00074f8
c0001c1f:	e9 fc 53 00 00       	jmp    c0007020 <intr_exit>

c0001c24 <intr39entry>:
c0001c24:	6a 00                	push   $0x0
c0001c26:	1e                   	push   %ds
c0001c27:	06                   	push   %es
c0001c28:	0f a0                	push   %fs
c0001c2a:	0f a8                	push   %gs
c0001c2c:	60                   	pusha  
c0001c2d:	b0 20                	mov    $0x20,%al
c0001c2f:	e6 a0                	out    %al,$0xa0
c0001c31:	e6 20                	out    %al,$0x20
c0001c33:	6a 27                	push   $0x27
c0001c35:	ff 15 fc 74 00 c0    	call   *0xc00074fc
c0001c3b:	e9 e0 53 00 00       	jmp    c0007020 <intr_exit>

c0001c40 <intr40entry>:
c0001c40:	6a 00                	push   $0x0
c0001c42:	1e                   	push   %ds
c0001c43:	06                   	push   %es
c0001c44:	0f a0                	push   %fs
c0001c46:	0f a8                	push   %gs
c0001c48:	60                   	pusha  
c0001c49:	b0 20                	mov    $0x20,%al
c0001c4b:	e6 a0                	out    %al,$0xa0
c0001c4d:	e6 20                	out    %al,$0x20
c0001c4f:	6a 28                	push   $0x28
c0001c51:	ff 15 00 75 00 c0    	call   *0xc0007500
c0001c57:	e9 c4 53 00 00       	jmp    c0007020 <intr_exit>

c0001c5c <intr41entry>:
c0001c5c:	6a 00                	push   $0x0
c0001c5e:	1e                   	push   %ds
c0001c5f:	06                   	push   %es
c0001c60:	0f a0                	push   %fs
c0001c62:	0f a8                	push   %gs
c0001c64:	60                   	pusha  
c0001c65:	b0 20                	mov    $0x20,%al
c0001c67:	e6 a0                	out    %al,$0xa0
c0001c69:	e6 20                	out    %al,$0x20
c0001c6b:	6a 29                	push   $0x29
c0001c6d:	ff 15 04 75 00 c0    	call   *0xc0007504
c0001c73:	e9 a8 53 00 00       	jmp    c0007020 <intr_exit>

c0001c78 <intr42entry>:
c0001c78:	6a 00                	push   $0x0
c0001c7a:	1e                   	push   %ds
c0001c7b:	06                   	push   %es
c0001c7c:	0f a0                	push   %fs
c0001c7e:	0f a8                	push   %gs
c0001c80:	60                   	pusha  
c0001c81:	b0 20                	mov    $0x20,%al
c0001c83:	e6 a0                	out    %al,$0xa0
c0001c85:	e6 20                	out    %al,$0x20
c0001c87:	6a 2a                	push   $0x2a
c0001c89:	ff 15 08 75 00 c0    	call   *0xc0007508
c0001c8f:	e9 8c 53 00 00       	jmp    c0007020 <intr_exit>

c0001c94 <intr43entry>:
c0001c94:	6a 00                	push   $0x0
c0001c96:	1e                   	push   %ds
c0001c97:	06                   	push   %es
c0001c98:	0f a0                	push   %fs
c0001c9a:	0f a8                	push   %gs
c0001c9c:	60                   	pusha  
c0001c9d:	b0 20                	mov    $0x20,%al
c0001c9f:	e6 a0                	out    %al,$0xa0
c0001ca1:	e6 20                	out    %al,$0x20
c0001ca3:	6a 2b                	push   $0x2b
c0001ca5:	ff 15 0c 75 00 c0    	call   *0xc000750c
c0001cab:	e9 70 53 00 00       	jmp    c0007020 <intr_exit>

c0001cb0 <intr44entry>:
c0001cb0:	6a 00                	push   $0x0
c0001cb2:	1e                   	push   %ds
c0001cb3:	06                   	push   %es
c0001cb4:	0f a0                	push   %fs
c0001cb6:	0f a8                	push   %gs
c0001cb8:	60                   	pusha  
c0001cb9:	b0 20                	mov    $0x20,%al
c0001cbb:	e6 a0                	out    %al,$0xa0
c0001cbd:	e6 20                	out    %al,$0x20
c0001cbf:	6a 2c                	push   $0x2c
c0001cc1:	ff 15 10 75 00 c0    	call   *0xc0007510
c0001cc7:	e9 54 53 00 00       	jmp    c0007020 <intr_exit>

c0001ccc <intr45entry>:
c0001ccc:	6a 00                	push   $0x0
c0001cce:	1e                   	push   %ds
c0001ccf:	06                   	push   %es
c0001cd0:	0f a0                	push   %fs
c0001cd2:	0f a8                	push   %gs
c0001cd4:	60                   	pusha  
c0001cd5:	b0 20                	mov    $0x20,%al
c0001cd7:	e6 a0                	out    %al,$0xa0
c0001cd9:	e6 20                	out    %al,$0x20
c0001cdb:	6a 2d                	push   $0x2d
c0001cdd:	ff 15 14 75 00 c0    	call   *0xc0007514
c0001ce3:	e9 38 53 00 00       	jmp    c0007020 <intr_exit>

c0001ce8 <intr46entry>:
c0001ce8:	6a 00                	push   $0x0
c0001cea:	1e                   	push   %ds
c0001ceb:	06                   	push   %es
c0001cec:	0f a0                	push   %fs
c0001cee:	0f a8                	push   %gs
c0001cf0:	60                   	pusha  
c0001cf1:	b0 20                	mov    $0x20,%al
c0001cf3:	e6 a0                	out    %al,$0xa0
c0001cf5:	e6 20                	out    %al,$0x20
c0001cf7:	6a 2e                	push   $0x2e
c0001cf9:	ff 15 18 75 00 c0    	call   *0xc0007518
c0001cff:	e9 1c 53 00 00       	jmp    c0007020 <intr_exit>

c0001d04 <intr47entry>:
c0001d04:	6a 00                	push   $0x0
c0001d06:	1e                   	push   %ds
c0001d07:	06                   	push   %es
c0001d08:	0f a0                	push   %fs
c0001d0a:	0f a8                	push   %gs
c0001d0c:	60                   	pusha  
c0001d0d:	b0 20                	mov    $0x20,%al
c0001d0f:	e6 a0                	out    %al,$0xa0
c0001d11:	e6 20                	out    %al,$0x20
c0001d13:	6a 2f                	push   $0x2f
c0001d15:	ff 15 1c 75 00 c0    	call   *0xc000751c
c0001d1b:	e9 00 53 00 00       	jmp    c0007020 <intr_exit>

c0001d20 <intr48entry>:
c0001d20:	6a 00                	push   $0x0
c0001d22:	1e                   	push   %ds
c0001d23:	06                   	push   %es
c0001d24:	0f a0                	push   %fs
c0001d26:	0f a8                	push   %gs
c0001d28:	60                   	pusha  
c0001d29:	b0 20                	mov    $0x20,%al
c0001d2b:	e6 a0                	out    %al,$0xa0
c0001d2d:	e6 20                	out    %al,$0x20
c0001d2f:	6a 30                	push   $0x30
c0001d31:	ff 15 20 75 00 c0    	call   *0xc0007520
c0001d37:	e9 e4 52 00 00       	jmp    c0007020 <intr_exit>

c0001d3c <outb>:
c0001d3c:	55                   	push   %ebp
c0001d3d:	89 e5                	mov    %esp,%ebp
c0001d3f:	83 ec 08             	sub    $0x8,%esp
c0001d42:	e8 89 f8 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0001d47:	05 b9 52 00 00       	add    $0x52b9,%eax
c0001d4c:	8b 55 08             	mov    0x8(%ebp),%edx
c0001d4f:	8b 45 0c             	mov    0xc(%ebp),%eax
c0001d52:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c0001d56:	88 45 f8             	mov    %al,-0x8(%ebp)
c0001d59:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c0001d5d:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c0001d61:	ee                   	out    %al,(%dx)
c0001d62:	90                   	nop
c0001d63:	c9                   	leave  
c0001d64:	c3                   	ret    

c0001d65 <outsw>:
c0001d65:	55                   	push   %ebp
c0001d66:	89 e5                	mov    %esp,%ebp
c0001d68:	56                   	push   %esi
c0001d69:	53                   	push   %ebx
c0001d6a:	83 ec 04             	sub    $0x4,%esp
c0001d6d:	e8 5e f8 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0001d72:	05 8e 52 00 00       	add    $0x528e,%eax
c0001d77:	8b 45 08             	mov    0x8(%ebp),%eax
c0001d7a:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0001d7e:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0001d82:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0001d85:	8b 45 10             	mov    0x10(%ebp),%eax
c0001d88:	89 cb                	mov    %ecx,%ebx
c0001d8a:	89 de                	mov    %ebx,%esi
c0001d8c:	89 c1                	mov    %eax,%ecx
c0001d8e:	fc                   	cld    
c0001d8f:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c0001d92:	89 c8                	mov    %ecx,%eax
c0001d94:	89 f3                	mov    %esi,%ebx
c0001d96:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0001d99:	89 45 10             	mov    %eax,0x10(%ebp)
c0001d9c:	90                   	nop
c0001d9d:	83 c4 04             	add    $0x4,%esp
c0001da0:	5b                   	pop    %ebx
c0001da1:	5e                   	pop    %esi
c0001da2:	5d                   	pop    %ebp
c0001da3:	c3                   	ret    

c0001da4 <inb>:
c0001da4:	55                   	push   %ebp
c0001da5:	89 e5                	mov    %esp,%ebp
c0001da7:	83 ec 14             	sub    $0x14,%esp
c0001daa:	e8 21 f8 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0001daf:	05 51 52 00 00       	add    $0x5251,%eax
c0001db4:	8b 45 08             	mov    0x8(%ebp),%eax
c0001db7:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0001dbb:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c0001dbf:	89 c2                	mov    %eax,%edx
c0001dc1:	ec                   	in     (%dx),%al
c0001dc2:	88 45 ff             	mov    %al,-0x1(%ebp)
c0001dc5:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c0001dc9:	c9                   	leave  
c0001dca:	c3                   	ret    

c0001dcb <insw>:
c0001dcb:	55                   	push   %ebp
c0001dcc:	89 e5                	mov    %esp,%ebp
c0001dce:	57                   	push   %edi
c0001dcf:	53                   	push   %ebx
c0001dd0:	83 ec 04             	sub    $0x4,%esp
c0001dd3:	e8 f8 f7 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0001dd8:	05 28 52 00 00       	add    $0x5228,%eax
c0001ddd:	8b 45 08             	mov    0x8(%ebp),%eax
c0001de0:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0001de4:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0001de8:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0001deb:	8b 45 10             	mov    0x10(%ebp),%eax
c0001dee:	89 cb                	mov    %ecx,%ebx
c0001df0:	89 df                	mov    %ebx,%edi
c0001df2:	89 c1                	mov    %eax,%ecx
c0001df4:	fc                   	cld    
c0001df5:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0001df8:	89 c8                	mov    %ecx,%eax
c0001dfa:	89 fb                	mov    %edi,%ebx
c0001dfc:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0001dff:	89 45 10             	mov    %eax,0x10(%ebp)
c0001e02:	90                   	nop
c0001e03:	83 c4 04             	add    $0x4,%esp
c0001e06:	5b                   	pop    %ebx
c0001e07:	5f                   	pop    %edi
c0001e08:	5d                   	pop    %ebp
c0001e09:	c3                   	ret    

c0001e0a <make_idt_desc>:
c0001e0a:	55                   	push   %ebp
c0001e0b:	89 e5                	mov    %esp,%ebp
c0001e0d:	83 ec 04             	sub    $0x4,%esp
c0001e10:	e8 bb f7 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0001e15:	05 eb 51 00 00       	add    $0x51eb,%eax
c0001e1a:	8b 45 0c             	mov    0xc(%ebp),%eax
c0001e1d:	88 45 fc             	mov    %al,-0x4(%ebp)
c0001e20:	8b 45 10             	mov    0x10(%ebp),%eax
c0001e23:	89 c2                	mov    %eax,%edx
c0001e25:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e28:	66 89 10             	mov    %dx,(%eax)
c0001e2b:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e2e:	66 c7 40 02 08 00    	movw   $0x8,0x2(%eax)
c0001e34:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e37:	c6 40 04 00          	movb   $0x0,0x4(%eax)
c0001e3b:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e3e:	0f b6 55 fc          	movzbl -0x4(%ebp),%edx
c0001e42:	88 50 05             	mov    %dl,0x5(%eax)
c0001e45:	8b 45 10             	mov    0x10(%ebp),%eax
c0001e48:	c1 e8 10             	shr    $0x10,%eax
c0001e4b:	89 c2                	mov    %eax,%edx
c0001e4d:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e50:	66 89 50 06          	mov    %dx,0x6(%eax)
c0001e54:	90                   	nop
c0001e55:	c9                   	leave  
c0001e56:	c3                   	ret    

c0001e57 <idt_desc_init>:
c0001e57:	55                   	push   %ebp
c0001e58:	89 e5                	mov    %esp,%ebp
c0001e5a:	53                   	push   %ebx
c0001e5b:	83 ec 14             	sub    $0x14,%esp
c0001e5e:	e8 71 f7 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0001e63:	81 c3 9d 51 00 00    	add    $0x519d,%ebx
c0001e69:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001e70:	eb 31                	jmp    c0001ea3 <idt_desc_init+0x4c>
c0001e72:	c7 c0 2e 70 00 c0    	mov    $0xc000702e,%eax
c0001e78:	8b 55 f4             	mov    -0xc(%ebp),%edx
c0001e7b:	8b 04 90             	mov    (%eax,%edx,4),%eax
c0001e7e:	8b 55 f4             	mov    -0xc(%ebp),%edx
c0001e81:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
c0001e88:	8d 93 80 01 00 00    	lea    0x180(%ebx),%edx
c0001e8e:	01 ca                	add    %ecx,%edx
c0001e90:	50                   	push   %eax
c0001e91:	68 8e 00 00 00       	push   $0x8e
c0001e96:	52                   	push   %edx
c0001e97:	e8 6e ff ff ff       	call   c0001e0a <make_idt_desc>
c0001e9c:	83 c4 0c             	add    $0xc,%esp
c0001e9f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001ea3:	83 7d f4 2f          	cmpl   $0x2f,-0xc(%ebp)
c0001ea7:	7e c9                	jle    c0001e72 <idt_desc_init+0x1b>
c0001ea9:	83 ec 0c             	sub    $0xc,%esp
c0001eac:	8d 83 b8 d3 ff ff    	lea    -0x2c48(%ebx),%eax
c0001eb2:	50                   	push   %eax
c0001eb3:	e8 1c f8 ff ff       	call   c00016d4 <put_str>
c0001eb8:	83 c4 10             	add    $0x10,%esp
c0001ebb:	90                   	nop
c0001ebc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001ebf:	c9                   	leave  
c0001ec0:	c3                   	ret    

c0001ec1 <pic_init>:
c0001ec1:	55                   	push   %ebp
c0001ec2:	89 e5                	mov    %esp,%ebp
c0001ec4:	53                   	push   %ebx
c0001ec5:	83 ec 04             	sub    $0x4,%esp
c0001ec8:	e8 07 f7 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0001ecd:	81 c3 33 51 00 00    	add    $0x5133,%ebx
c0001ed3:	6a 11                	push   $0x11
c0001ed5:	6a 20                	push   $0x20
c0001ed7:	e8 60 fe ff ff       	call   c0001d3c <outb>
c0001edc:	83 c4 08             	add    $0x8,%esp
c0001edf:	6a 20                	push   $0x20
c0001ee1:	6a 21                	push   $0x21
c0001ee3:	e8 54 fe ff ff       	call   c0001d3c <outb>
c0001ee8:	83 c4 08             	add    $0x8,%esp
c0001eeb:	6a 04                	push   $0x4
c0001eed:	6a 21                	push   $0x21
c0001eef:	e8 48 fe ff ff       	call   c0001d3c <outb>
c0001ef4:	83 c4 08             	add    $0x8,%esp
c0001ef7:	6a 01                	push   $0x1
c0001ef9:	6a 21                	push   $0x21
c0001efb:	e8 3c fe ff ff       	call   c0001d3c <outb>
c0001f00:	83 c4 08             	add    $0x8,%esp
c0001f03:	6a 11                	push   $0x11
c0001f05:	68 a0 00 00 00       	push   $0xa0
c0001f0a:	e8 2d fe ff ff       	call   c0001d3c <outb>
c0001f0f:	83 c4 08             	add    $0x8,%esp
c0001f12:	6a 28                	push   $0x28
c0001f14:	68 a1 00 00 00       	push   $0xa1
c0001f19:	e8 1e fe ff ff       	call   c0001d3c <outb>
c0001f1e:	83 c4 08             	add    $0x8,%esp
c0001f21:	6a 02                	push   $0x2
c0001f23:	68 a1 00 00 00       	push   $0xa1
c0001f28:	e8 0f fe ff ff       	call   c0001d3c <outb>
c0001f2d:	83 c4 08             	add    $0x8,%esp
c0001f30:	6a 01                	push   $0x1
c0001f32:	68 a1 00 00 00       	push   $0xa1
c0001f37:	e8 00 fe ff ff       	call   c0001d3c <outb>
c0001f3c:	83 c4 08             	add    $0x8,%esp
c0001f3f:	68 fc 00 00 00       	push   $0xfc
c0001f44:	6a 21                	push   $0x21
c0001f46:	e8 f1 fd ff ff       	call   c0001d3c <outb>
c0001f4b:	83 c4 08             	add    $0x8,%esp
c0001f4e:	68 ff 00 00 00       	push   $0xff
c0001f53:	68 a1 00 00 00       	push   $0xa1
c0001f58:	e8 df fd ff ff       	call   c0001d3c <outb>
c0001f5d:	83 c4 08             	add    $0x8,%esp
c0001f60:	83 ec 0c             	sub    $0xc,%esp
c0001f63:	8d 83 d0 d3 ff ff    	lea    -0x2c30(%ebx),%eax
c0001f69:	50                   	push   %eax
c0001f6a:	e8 65 f7 ff ff       	call   c00016d4 <put_str>
c0001f6f:	83 c4 10             	add    $0x10,%esp
c0001f72:	90                   	nop
c0001f73:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001f76:	c9                   	leave  
c0001f77:	c3                   	ret    

c0001f78 <general>:
c0001f78:	55                   	push   %ebp
c0001f79:	89 e5                	mov    %esp,%ebp
c0001f7b:	53                   	push   %ebx
c0001f7c:	83 ec 14             	sub    $0x14,%esp
c0001f7f:	e8 50 f6 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0001f84:	81 c3 7c 50 00 00    	add    $0x507c,%ebx
c0001f8a:	83 7d 08 27          	cmpl   $0x27,0x8(%ebp)
c0001f8e:	0f 84 d5 00 00 00    	je     c0002069 <general+0xf1>
c0001f94:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)
c0001f98:	0f 84 cb 00 00 00    	je     c0002069 <general+0xf1>
c0001f9e:	83 ec 0c             	sub    $0xc,%esp
c0001fa1:	6a 00                	push   $0x0
c0001fa3:	e8 0b f7 ff ff       	call   c00016b3 <set_cursor>
c0001fa8:	83 c4 10             	add    $0x10,%esp
c0001fab:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001fb2:	eb 11                	jmp    c0001fc5 <general+0x4d>
c0001fb4:	83 ec 0c             	sub    $0xc,%esp
c0001fb7:	6a 20                	push   $0x20
c0001fb9:	e8 22 f6 ff ff       	call   c00015e0 <put_char>
c0001fbe:	83 c4 10             	add    $0x10,%esp
c0001fc1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001fc5:	81 7d f4 3f 01 00 00 	cmpl   $0x13f,-0xc(%ebp)
c0001fcc:	7e e6                	jle    c0001fb4 <general+0x3c>
c0001fce:	83 ec 0c             	sub    $0xc,%esp
c0001fd1:	6a 00                	push   $0x0
c0001fd3:	e8 db f6 ff ff       	call   c00016b3 <set_cursor>
c0001fd8:	83 c4 10             	add    $0x10,%esp
c0001fdb:	83 ec 0c             	sub    $0xc,%esp
c0001fde:	8d 83 e8 d3 ff ff    	lea    -0x2c18(%ebx),%eax
c0001fe4:	50                   	push   %eax
c0001fe5:	e8 ea f6 ff ff       	call   c00016d4 <put_str>
c0001fea:	83 c4 10             	add    $0x10,%esp
c0001fed:	83 ec 0c             	sub    $0xc,%esp
c0001ff0:	6a 58                	push   $0x58
c0001ff2:	e8 bc f6 ff ff       	call   c00016b3 <set_cursor>
c0001ff7:	83 c4 10             	add    $0x10,%esp
c0001ffa:	c7 c0 a0 73 00 c0    	mov    $0xc00073a0,%eax
c0002000:	8b 55 08             	mov    0x8(%ebp),%edx
c0002003:	8b 04 90             	mov    (%eax,%edx,4),%eax
c0002006:	83 ec 0c             	sub    $0xc,%esp
c0002009:	50                   	push   %eax
c000200a:	e8 c5 f6 ff ff       	call   c00016d4 <put_str>
c000200f:	83 c4 10             	add    $0x10,%esp
c0002012:	83 7d 08 0e          	cmpl   $0xe,0x8(%ebp)
c0002016:	75 2d                	jne    c0002045 <general+0xcd>
c0002018:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
c000201f:	0f 20 d0             	mov    %cr2,%eax
c0002022:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002025:	83 ec 0c             	sub    $0xc,%esp
c0002028:	8d 83 09 d4 ff ff    	lea    -0x2bf7(%ebx),%eax
c000202e:	50                   	push   %eax
c000202f:	e8 a0 f6 ff ff       	call   c00016d4 <put_str>
c0002034:	83 c4 10             	add    $0x10,%esp
c0002037:	83 ec 0c             	sub    $0xc,%esp
c000203a:	ff 75 f0             	pushl  -0x10(%ebp)
c000203d:	e8 d5 f6 ff ff       	call   c0001717 <put_int>
c0002042:	83 c4 10             	add    $0x10,%esp
c0002045:	83 ec 0c             	sub    $0xc,%esp
c0002048:	68 a8 00 00 00       	push   $0xa8
c000204d:	e8 61 f6 ff ff       	call   c00016b3 <set_cursor>
c0002052:	83 c4 10             	add    $0x10,%esp
c0002055:	83 ec 0c             	sub    $0xc,%esp
c0002058:	8d 83 28 d4 ff ff    	lea    -0x2bd8(%ebx),%eax
c000205e:	50                   	push   %eax
c000205f:	e8 70 f6 ff ff       	call   c00016d4 <put_str>
c0002064:	83 c4 10             	add    $0x10,%esp
c0002067:	eb fe                	jmp    c0002067 <general+0xef>
c0002069:	90                   	nop
c000206a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000206d:	c9                   	leave  
c000206e:	c3                   	ret    

c000206f <exception_init>:
c000206f:	55                   	push   %ebp
c0002070:	89 e5                	mov    %esp,%ebp
c0002072:	53                   	push   %ebx
c0002073:	83 ec 10             	sub    $0x10,%esp
c0002076:	e8 55 f5 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c000207b:	05 85 4f 00 00       	add    $0x4f85,%eax
c0002080:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002086:	8d 88 47 d4 ff ff    	lea    -0x2bb9(%eax),%ecx
c000208c:	89 0a                	mov    %ecx,(%edx)
c000208e:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002094:	8d 88 54 d4 ff ff    	lea    -0x2bac(%eax),%ecx
c000209a:	89 4a 04             	mov    %ecx,0x4(%edx)
c000209d:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020a3:	8d 88 64 d4 ff ff    	lea    -0x2b9c(%eax),%ecx
c00020a9:	89 4a 08             	mov    %ecx,0x8(%edx)
c00020ac:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020b2:	8d 88 72 d4 ff ff    	lea    -0x2b8e(%eax),%ecx
c00020b8:	89 4a 0c             	mov    %ecx,0xc(%edx)
c00020bb:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020c1:	8d 88 87 d4 ff ff    	lea    -0x2b79(%eax),%ecx
c00020c7:	89 4a 10             	mov    %ecx,0x10(%edx)
c00020ca:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020d0:	8d 88 9a d4 ff ff    	lea    -0x2b66(%eax),%ecx
c00020d6:	89 4a 14             	mov    %ecx,0x14(%edx)
c00020d9:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020df:	8d 88 b7 d4 ff ff    	lea    -0x2b49(%eax),%ecx
c00020e5:	89 4a 18             	mov    %ecx,0x18(%edx)
c00020e8:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020ee:	8d 88 c6 d4 ff ff    	lea    -0x2b3a(%eax),%ecx
c00020f4:	89 4a 1c             	mov    %ecx,0x1c(%edx)
c00020f7:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020fd:	8d 88 db d4 ff ff    	lea    -0x2b25(%eax),%ecx
c0002103:	89 4a 20             	mov    %ecx,0x20(%edx)
c0002106:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c000210c:	8d 88 f2 d4 ff ff    	lea    -0x2b0e(%eax),%ecx
c0002112:	89 4a 24             	mov    %ecx,0x24(%edx)
c0002115:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c000211b:	8d 88 0e d5 ff ff    	lea    -0x2af2(%eax),%ecx
c0002121:	89 4a 28             	mov    %ecx,0x28(%edx)
c0002124:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c000212a:	8d 88 24 d5 ff ff    	lea    -0x2adc(%eax),%ecx
c0002130:	89 4a 2c             	mov    %ecx,0x2c(%edx)
c0002133:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002139:	8d 88 38 d5 ff ff    	lea    -0x2ac8(%eax),%ecx
c000213f:	89 4a 30             	mov    %ecx,0x30(%edx)
c0002142:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002148:	8d 88 4e d5 ff ff    	lea    -0x2ab2(%eax),%ecx
c000214e:	89 4a 34             	mov    %ecx,0x34(%edx)
c0002151:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002157:	8d 88 6c d5 ff ff    	lea    -0x2a94(%eax),%ecx
c000215d:	89 4a 38             	mov    %ecx,0x38(%edx)
c0002160:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002166:	8d 88 77 d5 ff ff    	lea    -0x2a89(%eax),%ecx
c000216c:	89 4a 3c             	mov    %ecx,0x3c(%edx)
c000216f:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002175:	8d 88 80 d5 ff ff    	lea    -0x2a80(%eax),%ecx
c000217b:	89 4a 40             	mov    %ecx,0x40(%edx)
c000217e:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002184:	8d 88 95 d5 ff ff    	lea    -0x2a6b(%eax),%ecx
c000218a:	89 4a 44             	mov    %ecx,0x44(%edx)
c000218d:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002193:	8d 88 a8 d5 ff ff    	lea    -0x2a58(%eax),%ecx
c0002199:	89 4a 48             	mov    %ecx,0x48(%edx)
c000219c:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00021a2:	8d 88 ba d5 ff ff    	lea    -0x2a46(%eax),%ecx
c00021a8:	89 4a 4c             	mov    %ecx,0x4c(%edx)
c00021ab:	c7 45 f8 14 00 00 00 	movl   $0x14,-0x8(%ebp)
c00021b2:	eb 16                	jmp    c00021ca <exception_init+0x15b>
c00021b4:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00021ba:	8b 4d f8             	mov    -0x8(%ebp),%ecx
c00021bd:	8d 98 d2 d5 ff ff    	lea    -0x2a2e(%eax),%ebx
c00021c3:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
c00021c6:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c00021ca:	83 7d f8 2f          	cmpl   $0x2f,-0x8(%ebp)
c00021ce:	7e e4                	jle    c00021b4 <exception_init+0x145>
c00021d0:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c00021d7:	eb 16                	jmp    c00021ef <exception_init+0x180>
c00021d9:	c7 c2 60 74 00 c0    	mov    $0xc0007460,%edx
c00021df:	8b 4d f8             	mov    -0x8(%ebp),%ecx
c00021e2:	8d 98 78 af ff ff    	lea    -0x5088(%eax),%ebx
c00021e8:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
c00021eb:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c00021ef:	83 7d f8 2f          	cmpl   $0x2f,-0x8(%ebp)
c00021f3:	7e e4                	jle    c00021d9 <exception_init+0x16a>
c00021f5:	90                   	nop
c00021f6:	83 c4 10             	add    $0x10,%esp
c00021f9:	5b                   	pop    %ebx
c00021fa:	5d                   	pop    %ebp
c00021fb:	c3                   	ret    

c00021fc <idt_init>:
c00021fc:	55                   	push   %ebp
c00021fd:	89 e5                	mov    %esp,%ebp
c00021ff:	57                   	push   %edi
c0002200:	56                   	push   %esi
c0002201:	53                   	push   %ebx
c0002202:	83 ec 1c             	sub    $0x1c,%esp
c0002205:	e8 0f 01 00 00       	call   c0002319 <__x86.get_pc_thunk.di>
c000220a:	81 c7 f6 4d 00 00    	add    $0x4df6,%edi
c0002210:	e8 42 fc ff ff       	call   c0001e57 <idt_desc_init>
c0002215:	e8 a7 fc ff ff       	call   c0001ec1 <pic_init>
c000221a:	e8 50 fe ff ff       	call   c000206f <exception_init>
c000221f:	8d 87 80 01 00 00    	lea    0x180(%edi),%eax
c0002225:	ba 00 00 00 00       	mov    $0x0,%edx
c000222a:	0f a4 c2 10          	shld   $0x10,%eax,%edx
c000222e:	c1 e0 10             	shl    $0x10,%eax
c0002231:	89 d1                	mov    %edx,%ecx
c0002233:	89 c2                	mov    %eax,%edx
c0002235:	89 d0                	mov    %edx,%eax
c0002237:	0d 7f 01 00 00       	or     $0x17f,%eax
c000223c:	89 c3                	mov    %eax,%ebx
c000223e:	89 c8                	mov    %ecx,%eax
c0002240:	80 cc 00             	or     $0x0,%ah
c0002243:	89 c6                	mov    %eax,%esi
c0002245:	89 5d e0             	mov    %ebx,-0x20(%ebp)
c0002248:	89 75 e4             	mov    %esi,-0x1c(%ebp)
c000224b:	0f 01 5d e0          	lidtl  -0x20(%ebp)
c000224f:	83 ec 0c             	sub    $0xc,%esp
c0002252:	8d 87 dc d5 ff ff    	lea    -0x2a24(%edi),%eax
c0002258:	50                   	push   %eax
c0002259:	89 fb                	mov    %edi,%ebx
c000225b:	e8 74 f4 ff ff       	call   c00016d4 <put_str>
c0002260:	83 c4 10             	add    $0x10,%esp
c0002263:	90                   	nop
c0002264:	8d 65 f4             	lea    -0xc(%ebp),%esp
c0002267:	5b                   	pop    %ebx
c0002268:	5e                   	pop    %esi
c0002269:	5f                   	pop    %edi
c000226a:	5d                   	pop    %ebp
c000226b:	c3                   	ret    

c000226c <intopen>:
c000226c:	55                   	push   %ebp
c000226d:	89 e5                	mov    %esp,%ebp
c000226f:	83 ec 10             	sub    $0x10,%esp
c0002272:	e8 59 f3 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002277:	05 89 4d 00 00       	add    $0x4d89,%eax
c000227c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c0002283:	9c                   	pushf  
c0002284:	58                   	pop    %eax
c0002285:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002288:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000228b:	25 00 02 00 00       	and    $0x200,%eax
c0002290:	85 c0                	test   %eax,%eax
c0002292:	75 01                	jne    c0002295 <intopen+0x29>
c0002294:	fb                   	sti    
c0002295:	90                   	nop
c0002296:	c9                   	leave  
c0002297:	c3                   	ret    

c0002298 <intclose>:
c0002298:	55                   	push   %ebp
c0002299:	89 e5                	mov    %esp,%ebp
c000229b:	83 ec 10             	sub    $0x10,%esp
c000229e:	e8 2d f3 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00022a3:	05 5d 4d 00 00       	add    $0x4d5d,%eax
c00022a8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c00022af:	9c                   	pushf  
c00022b0:	58                   	pop    %eax
c00022b1:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00022b4:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00022b7:	25 00 02 00 00       	and    $0x200,%eax
c00022bc:	85 c0                	test   %eax,%eax
c00022be:	74 01                	je     c00022c1 <intclose+0x29>
c00022c0:	fa                   	cli    
c00022c1:	90                   	nop
c00022c2:	c9                   	leave  
c00022c3:	c3                   	ret    

c00022c4 <intr_status>:
c00022c4:	55                   	push   %ebp
c00022c5:	89 e5                	mov    %esp,%ebp
c00022c7:	83 ec 10             	sub    $0x10,%esp
c00022ca:	e8 01 f3 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00022cf:	05 31 4d 00 00       	add    $0x4d31,%eax
c00022d4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c00022db:	9c                   	pushf  
c00022dc:	58                   	pop    %eax
c00022dd:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00022e0:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00022e3:	25 00 02 00 00       	and    $0x200,%eax
c00022e8:	85 c0                	test   %eax,%eax
c00022ea:	74 07                	je     c00022f3 <intr_status+0x2f>
c00022ec:	b8 01 00 00 00       	mov    $0x1,%eax
c00022f1:	eb 05                	jmp    c00022f8 <intr_status+0x34>
c00022f3:	b8 00 00 00 00       	mov    $0x0,%eax
c00022f8:	c9                   	leave  
c00022f9:	c3                   	ret    

c00022fa <register_handler>:
c00022fa:	55                   	push   %ebp
c00022fb:	89 e5                	mov    %esp,%ebp
c00022fd:	e8 ce f2 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002302:	05 fe 4c 00 00       	add    $0x4cfe,%eax
c0002307:	c7 c0 60 74 00 c0    	mov    $0xc0007460,%eax
c000230d:	8b 55 08             	mov    0x8(%ebp),%edx
c0002310:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0002313:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
c0002316:	90                   	nop
c0002317:	5d                   	pop    %ebp
c0002318:	c3                   	ret    

c0002319 <__x86.get_pc_thunk.di>:
c0002319:	8b 3c 24             	mov    (%esp),%edi
c000231c:	c3                   	ret    

c000231d <bitmap_set>:
c000231d:	55                   	push   %ebp
c000231e:	89 e5                	mov    %esp,%ebp
c0002320:	83 ec 14             	sub    $0x14,%esp
c0002323:	e8 a8 f2 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002328:	05 d8 4c 00 00       	add    $0x4cd8,%eax
c000232d:	8b 45 10             	mov    0x10(%ebp),%eax
c0002330:	88 45 ec             	mov    %al,-0x14(%ebp)
c0002333:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002336:	c1 e8 03             	shr    $0x3,%eax
c0002339:	89 45 fc             	mov    %eax,-0x4(%ebp)
c000233c:	8b 45 0c             	mov    0xc(%ebp),%eax
c000233f:	83 e0 07             	and    $0x7,%eax
c0002342:	89 45 f8             	mov    %eax,-0x8(%ebp)
c0002345:	80 7d ec 00          	cmpb   $0x0,-0x14(%ebp)
c0002349:	74 30                	je     c000237b <bitmap_set+0x5e>
c000234b:	0f b6 55 ec          	movzbl -0x14(%ebp),%edx
c000234f:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002352:	89 c1                	mov    %eax,%ecx
c0002354:	d3 e2                	shl    %cl,%edx
c0002356:	89 d0                	mov    %edx,%eax
c0002358:	88 45 ec             	mov    %al,-0x14(%ebp)
c000235b:	8b 45 08             	mov    0x8(%ebp),%eax
c000235e:	8b 50 04             	mov    0x4(%eax),%edx
c0002361:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002364:	01 d0                	add    %edx,%eax
c0002366:	0f b6 00             	movzbl (%eax),%eax
c0002369:	8b 55 08             	mov    0x8(%ebp),%edx
c000236c:	8b 4a 04             	mov    0x4(%edx),%ecx
c000236f:	8b 55 fc             	mov    -0x4(%ebp),%edx
c0002372:	01 ca                	add    %ecx,%edx
c0002374:	0a 45 ec             	or     -0x14(%ebp),%al
c0002377:	88 02                	mov    %al,(%edx)
c0002379:	eb 31                	jmp    c00023ac <bitmap_set+0x8f>
c000237b:	8b 45 f8             	mov    -0x8(%ebp),%eax
c000237e:	ba 01 00 00 00       	mov    $0x1,%edx
c0002383:	89 c1                	mov    %eax,%ecx
c0002385:	d3 e2                	shl    %cl,%edx
c0002387:	89 d0                	mov    %edx,%eax
c0002389:	f7 d0                	not    %eax
c000238b:	88 45 ec             	mov    %al,-0x14(%ebp)
c000238e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002391:	8b 50 04             	mov    0x4(%eax),%edx
c0002394:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002397:	01 d0                	add    %edx,%eax
c0002399:	0f b6 00             	movzbl (%eax),%eax
c000239c:	8b 55 08             	mov    0x8(%ebp),%edx
c000239f:	8b 4a 04             	mov    0x4(%edx),%ecx
c00023a2:	8b 55 fc             	mov    -0x4(%ebp),%edx
c00023a5:	01 ca                	add    %ecx,%edx
c00023a7:	22 45 ec             	and    -0x14(%ebp),%al
c00023aa:	88 02                	mov    %al,(%edx)
c00023ac:	90                   	nop
c00023ad:	c9                   	leave  
c00023ae:	c3                   	ret    

c00023af <bitmap_init>:
c00023af:	55                   	push   %ebp
c00023b0:	89 e5                	mov    %esp,%ebp
c00023b2:	83 ec 10             	sub    $0x10,%esp
c00023b5:	e8 16 f2 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00023ba:	05 46 4c 00 00       	add    $0x4c46,%eax
c00023bf:	8b 45 08             	mov    0x8(%ebp),%eax
c00023c2:	8b 40 04             	mov    0x4(%eax),%eax
c00023c5:	89 45 f8             	mov    %eax,-0x8(%ebp)
c00023c8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c00023cf:	eb 10                	jmp    c00023e1 <bitmap_init+0x32>
c00023d1:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00023d4:	8d 50 01             	lea    0x1(%eax),%edx
c00023d7:	89 55 f8             	mov    %edx,-0x8(%ebp)
c00023da:	c6 00 00             	movb   $0x0,(%eax)
c00023dd:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
c00023e1:	8b 45 08             	mov    0x8(%ebp),%eax
c00023e4:	8b 10                	mov    (%eax),%edx
c00023e6:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00023e9:	39 c2                	cmp    %eax,%edx
c00023eb:	77 e4                	ja     c00023d1 <bitmap_init+0x22>
c00023ed:	90                   	nop
c00023ee:	c9                   	leave  
c00023ef:	c3                   	ret    

c00023f0 <bitmap_state>:
c00023f0:	55                   	push   %ebp
c00023f1:	89 e5                	mov    %esp,%ebp
c00023f3:	83 ec 10             	sub    $0x10,%esp
c00023f6:	e8 d5 f1 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00023fb:	05 05 4c 00 00       	add    $0x4c05,%eax
c0002400:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002403:	c1 e8 03             	shr    $0x3,%eax
c0002406:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002409:	8b 45 0c             	mov    0xc(%ebp),%eax
c000240c:	83 e0 07             	and    $0x7,%eax
c000240f:	89 45 f8             	mov    %eax,-0x8(%ebp)
c0002412:	8b 45 08             	mov    0x8(%ebp),%eax
c0002415:	8b 50 04             	mov    0x4(%eax),%edx
c0002418:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000241b:	01 d0                	add    %edx,%eax
c000241d:	0f b6 00             	movzbl (%eax),%eax
c0002420:	0f b6 d0             	movzbl %al,%edx
c0002423:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002426:	89 c1                	mov    %eax,%ecx
c0002428:	d3 fa                	sar    %cl,%edx
c000242a:	89 d0                	mov    %edx,%eax
c000242c:	83 e0 01             	and    $0x1,%eax
c000242f:	c9                   	leave  
c0002430:	c3                   	ret    

c0002431 <memory_pool_init>:
c0002431:	55                   	push   %ebp
c0002432:	89 e5                	mov    %esp,%ebp
c0002434:	e8 97 f1 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002439:	05 c7 4b 00 00       	add    $0x4bc7,%eax
c000243e:	8b 45 10             	mov    0x10(%ebp),%eax
c0002441:	8d 50 07             	lea    0x7(%eax),%edx
c0002444:	85 c0                	test   %eax,%eax
c0002446:	0f 48 c2             	cmovs  %edx,%eax
c0002449:	c1 f8 03             	sar    $0x3,%eax
c000244c:	89 c2                	mov    %eax,%edx
c000244e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002451:	89 10                	mov    %edx,(%eax)
c0002453:	8b 55 14             	mov    0x14(%ebp),%edx
c0002456:	8b 45 08             	mov    0x8(%ebp),%eax
c0002459:	89 50 04             	mov    %edx,0x4(%eax)
c000245c:	8b 45 10             	mov    0x10(%ebp),%eax
c000245f:	c1 e0 0c             	shl    $0xc,%eax
c0002462:	89 c2                	mov    %eax,%edx
c0002464:	8b 45 08             	mov    0x8(%ebp),%eax
c0002467:	89 50 08             	mov    %edx,0x8(%eax)
c000246a:	8b 45 08             	mov    0x8(%ebp),%eax
c000246d:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002470:	89 50 0c             	mov    %edx,0xc(%eax)
c0002473:	8b 45 08             	mov    0x8(%ebp),%eax
c0002476:	50                   	push   %eax
c0002477:	e8 33 ff ff ff       	call   c00023af <bitmap_init>
c000247c:	83 c4 04             	add    $0x4,%esp
c000247f:	90                   	nop
c0002480:	c9                   	leave  
c0002481:	c3                   	ret    

c0002482 <bitmap_init_all>:
c0002482:	55                   	push   %ebp
c0002483:	89 e5                	mov    %esp,%ebp
c0002485:	53                   	push   %ebx
c0002486:	83 ec 34             	sub    $0x34,%esp
c0002489:	e8 46 f1 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c000248e:	81 c3 72 4b 00 00    	add    $0x4b72,%ebx
c0002494:	c7 45 f4 00 00 00 02 	movl   $0x2000000,-0xc(%ebp)
c000249b:	c7 45 f0 00 00 20 00 	movl   $0x200000,-0x10(%ebp)
c00024a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00024a5:	2b 45 f0             	sub    -0x10(%ebp),%eax
c00024a8:	89 45 ec             	mov    %eax,-0x14(%ebp)
c00024ab:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00024ae:	c1 e8 0c             	shr    $0xc,%eax
c00024b1:	89 45 e8             	mov    %eax,-0x18(%ebp)
c00024b4:	8b 45 e8             	mov    -0x18(%ebp),%eax
c00024b7:	d1 e8                	shr    %eax
c00024b9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
c00024bc:	8b 45 e8             	mov    -0x18(%ebp),%eax
c00024bf:	2b 45 e4             	sub    -0x1c(%ebp),%eax
c00024c2:	89 45 e0             	mov    %eax,-0x20(%ebp)
c00024c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c00024c8:	c1 e8 03             	shr    $0x3,%eax
c00024cb:	89 45 dc             	mov    %eax,-0x24(%ebp)
c00024ce:	8b 45 e0             	mov    -0x20(%ebp),%eax
c00024d1:	c1 e8 03             	shr    $0x3,%eax
c00024d4:	89 45 d8             	mov    %eax,-0x28(%ebp)
c00024d7:	c7 45 d4 00 00 20 00 	movl   $0x200000,-0x2c(%ebp)
c00024de:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c00024e1:	c1 e0 0c             	shl    $0xc,%eax
c00024e4:	89 c2                	mov    %eax,%edx
c00024e6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
c00024e9:	01 d0                	add    %edx,%eax
c00024eb:	89 45 d0             	mov    %eax,-0x30(%ebp)
c00024ee:	c7 45 cc 00 a0 09 c0 	movl   $0xc009a000,-0x34(%ebp)
c00024f5:	8b 55 cc             	mov    -0x34(%ebp),%edx
c00024f8:	8b 45 dc             	mov    -0x24(%ebp),%eax
c00024fb:	01 d0                	add    %edx,%eax
c00024fd:	89 45 c8             	mov    %eax,-0x38(%ebp)
c0002500:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c0002503:	ff 75 cc             	pushl  -0x34(%ebp)
c0002506:	50                   	push   %eax
c0002507:	ff 75 d4             	pushl  -0x2c(%ebp)
c000250a:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c0002510:	50                   	push   %eax
c0002511:	e8 1b ff ff ff       	call   c0002431 <memory_pool_init>
c0002516:	83 c4 10             	add    $0x10,%esp
c0002519:	8b 45 e0             	mov    -0x20(%ebp),%eax
c000251c:	ff 75 c8             	pushl  -0x38(%ebp)
c000251f:	50                   	push   %eax
c0002520:	ff 75 d0             	pushl  -0x30(%ebp)
c0002523:	c7 c0 40 75 00 c0    	mov    $0xc0007540,%eax
c0002529:	50                   	push   %eax
c000252a:	e8 02 ff ff ff       	call   c0002431 <memory_pool_init>
c000252f:	83 c4 10             	add    $0x10,%esp
c0002532:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c0002538:	c7 40 08 00 00 10 c0 	movl   $0xc0100000,0x8(%eax)
c000253f:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c0002545:	8b 55 dc             	mov    -0x24(%ebp),%edx
c0002548:	89 10                	mov    %edx,(%eax)
c000254a:	8b 55 dc             	mov    -0x24(%ebp),%edx
c000254d:	8b 45 d8             	mov    -0x28(%ebp),%eax
c0002550:	01 d0                	add    %edx,%eax
c0002552:	2d 00 60 f6 3f       	sub    $0x3ff66000,%eax
c0002557:	89 c2                	mov    %eax,%edx
c0002559:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c000255f:	89 50 04             	mov    %edx,0x4(%eax)
c0002562:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c0002568:	50                   	push   %eax
c0002569:	e8 41 fe ff ff       	call   c00023af <bitmap_init>
c000256e:	83 c4 04             	add    $0x4,%esp
c0002571:	83 ec 0c             	sub    $0xc,%esp
c0002574:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c000257a:	8d 40 10             	lea    0x10(%eax),%eax
c000257d:	50                   	push   %eax
c000257e:	e8 32 0c 00 00       	call   c00031b5 <init_lock>
c0002583:	83 c4 10             	add    $0x10,%esp
c0002586:	83 ec 0c             	sub    $0xc,%esp
c0002589:	c7 c0 40 75 00 c0    	mov    $0xc0007540,%eax
c000258f:	8d 40 10             	lea    0x10(%eax),%eax
c0002592:	50                   	push   %eax
c0002593:	e8 1d 0c 00 00       	call   c00031b5 <init_lock>
c0002598:	83 c4 10             	add    $0x10,%esp
c000259b:	90                   	nop
c000259c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000259f:	c9                   	leave  
c00025a0:	c3                   	ret    

c00025a1 <bitmap_scan>:
c00025a1:	55                   	push   %ebp
c00025a2:	89 e5                	mov    %esp,%ebp
c00025a4:	83 ec 10             	sub    $0x10,%esp
c00025a7:	e8 24 f0 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00025ac:	05 54 4a 00 00       	add    $0x4a54,%eax
c00025b1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c00025b8:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c00025bf:	eb 24                	jmp    c00025e5 <bitmap_scan+0x44>
c00025c1:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00025c4:	50                   	push   %eax
c00025c5:	ff 75 08             	pushl  0x8(%ebp)
c00025c8:	e8 23 fe ff ff       	call   c00023f0 <bitmap_state>
c00025cd:	83 c4 08             	add    $0x8,%esp
c00025d0:	85 c0                	test   %eax,%eax
c00025d2:	75 06                	jne    c00025da <bitmap_scan+0x39>
c00025d4:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
c00025d8:	eb 07                	jmp    c00025e1 <bitmap_scan+0x40>
c00025da:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c00025e1:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c00025e5:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00025e8:	39 45 0c             	cmp    %eax,0xc(%ebp)
c00025eb:	76 13                	jbe    c0002600 <bitmap_scan+0x5f>
c00025ed:	8b 45 08             	mov    0x8(%ebp),%eax
c00025f0:	8b 00                	mov    (%eax),%eax
c00025f2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx
c00025f9:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00025fc:	39 c2                	cmp    %eax,%edx
c00025fe:	77 c1                	ja     c00025c1 <bitmap_scan+0x20>
c0002600:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002603:	39 45 0c             	cmp    %eax,0xc(%ebp)
c0002606:	75 08                	jne    c0002610 <bitmap_scan+0x6f>
c0002608:	8b 45 f8             	mov    -0x8(%ebp),%eax
c000260b:	2b 45 0c             	sub    0xc(%ebp),%eax
c000260e:	eb 05                	jmp    c0002615 <bitmap_scan+0x74>
c0002610:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
c0002615:	c9                   	leave  
c0002616:	c3                   	ret    

c0002617 <vaddr_get>:
c0002617:	55                   	push   %ebp
c0002618:	89 e5                	mov    %esp,%ebp
c000261a:	53                   	push   %ebx
c000261b:	83 ec 14             	sub    $0x14,%esp
c000261e:	e8 b1 ef ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0002623:	81 c3 dd 49 00 00    	add    $0x49dd,%ebx
c0002629:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%ebp)
c0002630:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
c0002637:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c000263b:	75 67                	jne    c00026a4 <vaddr_get+0x8d>
c000263d:	ff 75 0c             	pushl  0xc(%ebp)
c0002640:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c0002646:	50                   	push   %eax
c0002647:	e8 55 ff ff ff       	call   c00025a1 <bitmap_scan>
c000264c:	83 c4 08             	add    $0x8,%esp
c000264f:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002652:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
c0002656:	75 0a                	jne    c0002662 <vaddr_get+0x4b>
c0002658:	b8 00 00 00 00       	mov    $0x0,%eax
c000265d:	e9 b0 00 00 00       	jmp    c0002712 <vaddr_get+0xfb>
c0002662:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0002669:	eb 1e                	jmp    c0002689 <vaddr_get+0x72>
c000266b:	8b 55 f0             	mov    -0x10(%ebp),%edx
c000266e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002671:	01 d0                	add    %edx,%eax
c0002673:	6a 01                	push   $0x1
c0002675:	50                   	push   %eax
c0002676:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c000267c:	50                   	push   %eax
c000267d:	e8 9b fc ff ff       	call   c000231d <bitmap_set>
c0002682:	83 c4 0c             	add    $0xc,%esp
c0002685:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0002689:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000268c:	39 45 0c             	cmp    %eax,0xc(%ebp)
c000268f:	77 da                	ja     c000266b <vaddr_get+0x54>
c0002691:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c0002697:	8b 40 08             	mov    0x8(%eax),%eax
c000269a:	8b 55 f0             	mov    -0x10(%ebp),%edx
c000269d:	c1 e2 0c             	shl    $0xc,%edx
c00026a0:	01 d0                	add    %edx,%eax
c00026a2:	eb 6e                	jmp    c0002712 <vaddr_get+0xfb>
c00026a4:	e8 a7 06 00 00       	call   c0002d50 <running_thread>
c00026a9:	89 45 e8             	mov    %eax,-0x18(%ebp)
c00026ac:	8b 45 e8             	mov    -0x18(%ebp),%eax
c00026af:	83 c0 38             	add    $0x38,%eax
c00026b2:	83 ec 08             	sub    $0x8,%esp
c00026b5:	ff 75 0c             	pushl  0xc(%ebp)
c00026b8:	50                   	push   %eax
c00026b9:	e8 e3 fe ff ff       	call   c00025a1 <bitmap_scan>
c00026be:	83 c4 10             	add    $0x10,%esp
c00026c1:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00026c4:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
c00026c8:	75 07                	jne    c00026d1 <vaddr_get+0xba>
c00026ca:	b8 00 00 00 00       	mov    $0x0,%eax
c00026cf:	eb 41                	jmp    c0002712 <vaddr_get+0xfb>
c00026d1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c00026d8:	eb 1c                	jmp    c00026f6 <vaddr_get+0xdf>
c00026da:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00026dd:	8b 55 e8             	mov    -0x18(%ebp),%edx
c00026e0:	83 c2 38             	add    $0x38,%edx
c00026e3:	83 ec 04             	sub    $0x4,%esp
c00026e6:	6a 01                	push   $0x1
c00026e8:	50                   	push   %eax
c00026e9:	52                   	push   %edx
c00026ea:	e8 2e fc ff ff       	call   c000231d <bitmap_set>
c00026ef:	83 c4 10             	add    $0x10,%esp
c00026f2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c00026f6:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00026f9:	39 45 0c             	cmp    %eax,0xc(%ebp)
c00026fc:	77 dc                	ja     c00026da <vaddr_get+0xc3>
c00026fe:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002701:	8b 40 40             	mov    0x40(%eax),%eax
c0002704:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002707:	c1 e2 0c             	shl    $0xc,%edx
c000270a:	01 d0                	add    %edx,%eax
c000270c:	89 45 ec             	mov    %eax,-0x14(%ebp)
c000270f:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0002712:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002715:	c9                   	leave  
c0002716:	c3                   	ret    

c0002717 <pde_ptr>:
c0002717:	55                   	push   %ebp
c0002718:	89 e5                	mov    %esp,%ebp
c000271a:	83 ec 10             	sub    $0x10,%esp
c000271d:	e8 ae ee ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002722:	05 de 48 00 00       	add    $0x48de,%eax
c0002727:	8b 45 08             	mov    0x8(%ebp),%eax
c000272a:	c1 e8 16             	shr    $0x16,%eax
c000272d:	05 00 fc ff 3f       	add    $0x3ffffc00,%eax
c0002732:	c1 e0 02             	shl    $0x2,%eax
c0002735:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002738:	90                   	nop
c0002739:	c9                   	leave  
c000273a:	c3                   	ret    

c000273b <pte_ptr>:
c000273b:	55                   	push   %ebp
c000273c:	89 e5                	mov    %esp,%ebp
c000273e:	83 ec 10             	sub    $0x10,%esp
c0002741:	e8 8a ee ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002746:	05 ba 48 00 00       	add    $0x48ba,%eax
c000274b:	8b 45 08             	mov    0x8(%ebp),%eax
c000274e:	c1 e8 0a             	shr    $0xa,%eax
c0002751:	25 00 f0 3f 00       	and    $0x3ff000,%eax
c0002756:	89 c2                	mov    %eax,%edx
c0002758:	8b 45 08             	mov    0x8(%ebp),%eax
c000275b:	c1 e8 0c             	shr    $0xc,%eax
c000275e:	25 ff 03 00 00       	and    $0x3ff,%eax
c0002763:	c1 e0 02             	shl    $0x2,%eax
c0002766:	01 d0                	add    %edx,%eax
c0002768:	2d 00 00 40 00       	sub    $0x400000,%eax
c000276d:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002770:	90                   	nop
c0002771:	c9                   	leave  
c0002772:	c3                   	ret    

c0002773 <palloc>:
c0002773:	55                   	push   %ebp
c0002774:	89 e5                	mov    %esp,%ebp
c0002776:	83 ec 10             	sub    $0x10,%esp
c0002779:	e8 52 ee ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c000277e:	05 82 48 00 00       	add    $0x4882,%eax
c0002783:	8b 45 08             	mov    0x8(%ebp),%eax
c0002786:	6a 01                	push   $0x1
c0002788:	50                   	push   %eax
c0002789:	e8 13 fe ff ff       	call   c00025a1 <bitmap_scan>
c000278e:	83 c4 08             	add    $0x8,%esp
c0002791:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002794:	8b 55 fc             	mov    -0x4(%ebp),%edx
c0002797:	8b 45 08             	mov    0x8(%ebp),%eax
c000279a:	6a 01                	push   $0x1
c000279c:	52                   	push   %edx
c000279d:	50                   	push   %eax
c000279e:	e8 7a fb ff ff       	call   c000231d <bitmap_set>
c00027a3:	83 c4 0c             	add    $0xc,%esp
c00027a6:	8b 45 08             	mov    0x8(%ebp),%eax
c00027a9:	8b 40 0c             	mov    0xc(%eax),%eax
c00027ac:	8b 55 fc             	mov    -0x4(%ebp),%edx
c00027af:	c1 e2 0c             	shl    $0xc,%edx
c00027b2:	01 d0                	add    %edx,%eax
c00027b4:	c9                   	leave  
c00027b5:	c3                   	ret    

c00027b6 <page_table_add>:
c00027b6:	55                   	push   %ebp
c00027b7:	89 e5                	mov    %esp,%ebp
c00027b9:	53                   	push   %ebx
c00027ba:	83 ec 14             	sub    $0x14,%esp
c00027bd:	e8 12 ee ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00027c2:	81 c3 3e 48 00 00    	add    $0x483e,%ebx
c00027c8:	8b 45 08             	mov    0x8(%ebp),%eax
c00027cb:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00027ce:	8b 45 0c             	mov    0xc(%ebp),%eax
c00027d1:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00027d4:	ff 75 f4             	pushl  -0xc(%ebp)
c00027d7:	e8 3b ff ff ff       	call   c0002717 <pde_ptr>
c00027dc:	83 c4 04             	add    $0x4,%esp
c00027df:	89 45 ec             	mov    %eax,-0x14(%ebp)
c00027e2:	ff 75 f4             	pushl  -0xc(%ebp)
c00027e5:	e8 51 ff ff ff       	call   c000273b <pte_ptr>
c00027ea:	83 c4 04             	add    $0x4,%esp
c00027ed:	89 45 e8             	mov    %eax,-0x18(%ebp)
c00027f0:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00027f3:	8b 00                	mov    (%eax),%eax
c00027f5:	83 e0 01             	and    $0x1,%eax
c00027f8:	85 c0                	test   %eax,%eax
c00027fa:	75 39                	jne    c0002835 <page_table_add+0x7f>
c00027fc:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c0002802:	50                   	push   %eax
c0002803:	e8 6b ff ff ff       	call   c0002773 <palloc>
c0002808:	83 c4 04             	add    $0x4,%esp
c000280b:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002810:	83 c8 07             	or     $0x7,%eax
c0002813:	89 c2                	mov    %eax,%edx
c0002815:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0002818:	89 10                	mov    %edx,(%eax)
c000281a:	8b 45 e8             	mov    -0x18(%ebp),%eax
c000281d:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002822:	83 ec 04             	sub    $0x4,%esp
c0002825:	68 00 10 00 00       	push   $0x1000
c000282a:	6a 00                	push   $0x0
c000282c:	50                   	push   %eax
c000282d:	e8 df 02 00 00       	call   c0002b11 <memset>
c0002832:	83 c4 10             	add    $0x10,%esp
c0002835:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002838:	8b 00                	mov    (%eax),%eax
c000283a:	83 e0 01             	and    $0x1,%eax
c000283d:	85 c0                	test   %eax,%eax
c000283f:	74 26                	je     c0002867 <page_table_add+0xb1>
c0002841:	e8 52 fa ff ff       	call   c0002298 <intclose>
c0002846:	83 ec 0c             	sub    $0xc,%esp
c0002849:	6a 0a                	push   $0xa
c000284b:	e8 90 ed ff ff       	call   c00015e0 <put_char>
c0002850:	83 c4 10             	add    $0x10,%esp
c0002853:	83 ec 0c             	sub    $0xc,%esp
c0002856:	8d 83 e9 d5 ff ff    	lea    -0x2a17(%ebx),%eax
c000285c:	50                   	push   %eax
c000285d:	e8 72 ee ff ff       	call   c00016d4 <put_str>
c0002862:	83 c4 10             	add    $0x10,%esp
c0002865:	eb fe                	jmp    c0002865 <page_table_add+0xaf>
c0002867:	8b 45 f0             	mov    -0x10(%ebp),%eax
c000286a:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c000286f:	83 c8 07             	or     $0x7,%eax
c0002872:	89 c2                	mov    %eax,%edx
c0002874:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002877:	89 10                	mov    %edx,(%eax)
c0002879:	90                   	nop
c000287a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000287d:	c9                   	leave  
c000287e:	c3                   	ret    

c000287f <malloc>:
c000287f:	55                   	push   %ebp
c0002880:	89 e5                	mov    %esp,%ebp
c0002882:	53                   	push   %ebx
c0002883:	83 ec 14             	sub    $0x14,%esp
c0002886:	e8 49 ed ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c000288b:	81 c3 75 47 00 00    	add    $0x4775,%ebx
c0002891:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002895:	75 5b                	jne    c00028f2 <malloc+0x73>
c0002897:	83 ec 08             	sub    $0x8,%esp
c000289a:	ff 75 0c             	pushl  0xc(%ebp)
c000289d:	6a 00                	push   $0x0
c000289f:	e8 73 fd ff ff       	call   c0002617 <vaddr_get>
c00028a4:	83 c4 10             	add    $0x10,%esp
c00028a7:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00028aa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c00028b1:	eb 32                	jmp    c00028e5 <malloc+0x66>
c00028b3:	83 ec 0c             	sub    $0xc,%esp
c00028b6:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c00028bc:	50                   	push   %eax
c00028bd:	e8 b1 fe ff ff       	call   c0002773 <palloc>
c00028c2:	83 c4 10             	add    $0x10,%esp
c00028c5:	89 c2                	mov    %eax,%edx
c00028c7:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00028ca:	c1 e0 0c             	shl    $0xc,%eax
c00028cd:	89 c1                	mov    %eax,%ecx
c00028cf:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00028d2:	01 c8                	add    %ecx,%eax
c00028d4:	83 ec 08             	sub    $0x8,%esp
c00028d7:	52                   	push   %edx
c00028d8:	50                   	push   %eax
c00028d9:	e8 d8 fe ff ff       	call   c00027b6 <page_table_add>
c00028de:	83 c4 10             	add    $0x10,%esp
c00028e1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c00028e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00028e8:	39 45 0c             	cmp    %eax,0xc(%ebp)
c00028eb:	77 c6                	ja     c00028b3 <malloc+0x34>
c00028ed:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00028f0:	eb 05                	jmp    c00028f7 <malloc+0x78>
c00028f2:	b8 00 00 00 00       	mov    $0x0,%eax
c00028f7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00028fa:	c9                   	leave  
c00028fb:	c3                   	ret    

c00028fc <get_kernel_pages>:
c00028fc:	55                   	push   %ebp
c00028fd:	89 e5                	mov    %esp,%ebp
c00028ff:	53                   	push   %ebx
c0002900:	83 ec 14             	sub    $0x14,%esp
c0002903:	e8 cc ec ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0002908:	81 c3 f8 46 00 00    	add    $0x46f8,%ebx
c000290e:	83 ec 0c             	sub    $0xc,%esp
c0002911:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c0002917:	8d 40 10             	lea    0x10(%eax),%eax
c000291a:	50                   	push   %eax
c000291b:	e8 c9 08 00 00       	call   c00031e9 <acquire_lock>
c0002920:	83 c4 10             	add    $0x10,%esp
c0002923:	83 ec 08             	sub    $0x8,%esp
c0002926:	ff 75 08             	pushl  0x8(%ebp)
c0002929:	6a 00                	push   $0x0
c000292b:	e8 4f ff ff ff       	call   c000287f <malloc>
c0002930:	83 c4 10             	add    $0x10,%esp
c0002933:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002936:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000293a:	74 17                	je     c0002953 <get_kernel_pages+0x57>
c000293c:	8b 45 08             	mov    0x8(%ebp),%eax
c000293f:	c1 e0 0c             	shl    $0xc,%eax
c0002942:	83 ec 04             	sub    $0x4,%esp
c0002945:	50                   	push   %eax
c0002946:	6a 00                	push   $0x0
c0002948:	ff 75 f4             	pushl  -0xc(%ebp)
c000294b:	e8 c1 01 00 00       	call   c0002b11 <memset>
c0002950:	83 c4 10             	add    $0x10,%esp
c0002953:	83 ec 0c             	sub    $0xc,%esp
c0002956:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c000295c:	8d 40 10             	lea    0x10(%eax),%eax
c000295f:	50                   	push   %eax
c0002960:	e8 f5 08 00 00       	call   c000325a <release_lock>
c0002965:	83 c4 10             	add    $0x10,%esp
c0002968:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000296b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000296e:	c9                   	leave  
c000296f:	c3                   	ret    

c0002970 <get_user_pages>:
c0002970:	55                   	push   %ebp
c0002971:	89 e5                	mov    %esp,%ebp
c0002973:	53                   	push   %ebx
c0002974:	83 ec 14             	sub    $0x14,%esp
c0002977:	e8 58 ec ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c000297c:	81 c3 84 46 00 00    	add    $0x4684,%ebx
c0002982:	83 ec 0c             	sub    $0xc,%esp
c0002985:	c7 c0 40 75 00 c0    	mov    $0xc0007540,%eax
c000298b:	8d 40 10             	lea    0x10(%eax),%eax
c000298e:	50                   	push   %eax
c000298f:	e8 55 08 00 00       	call   c00031e9 <acquire_lock>
c0002994:	83 c4 10             	add    $0x10,%esp
c0002997:	83 ec 08             	sub    $0x8,%esp
c000299a:	ff 75 08             	pushl  0x8(%ebp)
c000299d:	6a 01                	push   $0x1
c000299f:	e8 db fe ff ff       	call   c000287f <malloc>
c00029a4:	83 c4 10             	add    $0x10,%esp
c00029a7:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00029aa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00029ae:	74 17                	je     c00029c7 <get_user_pages+0x57>
c00029b0:	8b 45 08             	mov    0x8(%ebp),%eax
c00029b3:	c1 e0 0c             	shl    $0xc,%eax
c00029b6:	83 ec 04             	sub    $0x4,%esp
c00029b9:	50                   	push   %eax
c00029ba:	6a 00                	push   $0x0
c00029bc:	ff 75 f4             	pushl  -0xc(%ebp)
c00029bf:	e8 4d 01 00 00       	call   c0002b11 <memset>
c00029c4:	83 c4 10             	add    $0x10,%esp
c00029c7:	83 ec 0c             	sub    $0xc,%esp
c00029ca:	c7 c0 40 75 00 c0    	mov    $0xc0007540,%eax
c00029d0:	8d 40 10             	lea    0x10(%eax),%eax
c00029d3:	50                   	push   %eax
c00029d4:	e8 81 08 00 00       	call   c000325a <release_lock>
c00029d9:	83 c4 10             	add    $0x10,%esp
c00029dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00029df:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00029e2:	c9                   	leave  
c00029e3:	c3                   	ret    

c00029e4 <get_a_page>:
c00029e4:	55                   	push   %ebp
c00029e5:	89 e5                	mov    %esp,%ebp
c00029e7:	53                   	push   %ebx
c00029e8:	83 ec 14             	sub    $0x14,%esp
c00029eb:	e8 e4 eb ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00029f0:	81 c3 10 46 00 00    	add    $0x4610,%ebx
c00029f6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c00029fa:	75 08                	jne    c0002a04 <get_a_page+0x20>
c00029fc:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c0002a02:	eb 06                	jmp    c0002a0a <get_a_page+0x26>
c0002a04:	c7 c0 40 75 00 c0    	mov    $0xc0007540,%eax
c0002a0a:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002a0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002a10:	83 c0 10             	add    $0x10,%eax
c0002a13:	83 ec 0c             	sub    $0xc,%esp
c0002a16:	50                   	push   %eax
c0002a17:	e8 cd 07 00 00       	call   c00031e9 <acquire_lock>
c0002a1c:	83 c4 10             	add    $0x10,%esp
c0002a1f:	e8 2c 03 00 00       	call   c0002d50 <running_thread>
c0002a24:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002a27:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%ebp)
c0002a2e:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002a31:	8b 40 34             	mov    0x34(%eax),%eax
c0002a34:	85 c0                	test   %eax,%eax
c0002a36:	74 33                	je     c0002a6b <get_a_page+0x87>
c0002a38:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
c0002a3c:	75 2d                	jne    c0002a6b <get_a_page+0x87>
c0002a3e:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002a41:	8b 40 40             	mov    0x40(%eax),%eax
c0002a44:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002a47:	29 c2                	sub    %eax,%edx
c0002a49:	89 d0                	mov    %edx,%eax
c0002a4b:	c1 e8 0c             	shr    $0xc,%eax
c0002a4e:	89 45 ec             	mov    %eax,-0x14(%ebp)
c0002a51:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0002a54:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002a57:	83 c2 38             	add    $0x38,%edx
c0002a5a:	83 ec 04             	sub    $0x4,%esp
c0002a5d:	6a 01                	push   $0x1
c0002a5f:	50                   	push   %eax
c0002a60:	52                   	push   %edx
c0002a61:	e8 b7 f8 ff ff       	call   c000231d <bitmap_set>
c0002a66:	83 c4 10             	add    $0x10,%esp
c0002a69:	eb 26                	jmp    c0002a91 <get_a_page+0xad>
c0002a6b:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002a6e:	8b 40 34             	mov    0x34(%eax),%eax
c0002a71:	85 c0                	test   %eax,%eax
c0002a73:	75 1c                	jne    c0002a91 <get_a_page+0xad>
c0002a75:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002a79:	75 16                	jne    c0002a91 <get_a_page+0xad>
c0002a7b:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c0002a81:	8b 40 08             	mov    0x8(%eax),%eax
c0002a84:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002a87:	29 c2                	sub    %eax,%edx
c0002a89:	89 d0                	mov    %edx,%eax
c0002a8b:	c1 e8 0c             	shr    $0xc,%eax
c0002a8e:	89 45 ec             	mov    %eax,-0x14(%ebp)
c0002a91:	83 ec 0c             	sub    $0xc,%esp
c0002a94:	ff 75 f4             	pushl  -0xc(%ebp)
c0002a97:	e8 d7 fc ff ff       	call   c0002773 <palloc>
c0002a9c:	83 c4 10             	add    $0x10,%esp
c0002a9f:	89 45 e8             	mov    %eax,-0x18(%ebp)
c0002aa2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
c0002aa6:	75 07                	jne    c0002aaf <get_a_page+0xcb>
c0002aa8:	b8 00 00 00 00       	mov    $0x0,%eax
c0002aad:	eb 27                	jmp    c0002ad6 <get_a_page+0xf2>
c0002aaf:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002ab2:	83 ec 08             	sub    $0x8,%esp
c0002ab5:	ff 75 e8             	pushl  -0x18(%ebp)
c0002ab8:	50                   	push   %eax
c0002ab9:	e8 f8 fc ff ff       	call   c00027b6 <page_table_add>
c0002abe:	83 c4 10             	add    $0x10,%esp
c0002ac1:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002ac4:	83 c0 10             	add    $0x10,%eax
c0002ac7:	83 ec 0c             	sub    $0xc,%esp
c0002aca:	50                   	push   %eax
c0002acb:	e8 8a 07 00 00       	call   c000325a <release_lock>
c0002ad0:	83 c4 10             	add    $0x10,%esp
c0002ad3:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002ad6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002ad9:	c9                   	leave  
c0002ada:	c3                   	ret    

c0002adb <addr_v2p>:
c0002adb:	55                   	push   %ebp
c0002adc:	89 e5                	mov    %esp,%ebp
c0002ade:	83 ec 10             	sub    $0x10,%esp
c0002ae1:	e8 ea ea ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002ae6:	05 1a 45 00 00       	add    $0x451a,%eax
c0002aeb:	ff 75 08             	pushl  0x8(%ebp)
c0002aee:	e8 48 fc ff ff       	call   c000273b <pte_ptr>
c0002af3:	83 c4 04             	add    $0x4,%esp
c0002af6:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002af9:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002afc:	8b 00                	mov    (%eax),%eax
c0002afe:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002b03:	89 c2                	mov    %eax,%edx
c0002b05:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b08:	25 ff 0f 00 00       	and    $0xfff,%eax
c0002b0d:	09 d0                	or     %edx,%eax
c0002b0f:	c9                   	leave  
c0002b10:	c3                   	ret    

c0002b11 <memset>:
c0002b11:	55                   	push   %ebp
c0002b12:	89 e5                	mov    %esp,%ebp
c0002b14:	53                   	push   %ebx
c0002b15:	83 ec 24             	sub    $0x24,%esp
c0002b18:	e8 b7 ea ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0002b1d:	81 c3 e3 44 00 00    	add    $0x44e3,%ebx
c0002b23:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002b26:	88 45 e4             	mov    %al,-0x1c(%ebp)
c0002b29:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b2c:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002b2f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002b33:	75 35                	jne    c0002b6a <memset+0x59>
c0002b35:	e8 5e f7 ff ff       	call   c0002298 <intclose>
c0002b3a:	83 ec 0c             	sub    $0xc,%esp
c0002b3d:	6a 0a                	push   $0xa
c0002b3f:	e8 9c ea ff ff       	call   c00015e0 <put_char>
c0002b44:	83 c4 10             	add    $0x10,%esp
c0002b47:	83 ec 0c             	sub    $0xc,%esp
c0002b4a:	8d 83 fe d5 ff ff    	lea    -0x2a02(%ebx),%eax
c0002b50:	50                   	push   %eax
c0002b51:	e8 7e eb ff ff       	call   c00016d4 <put_str>
c0002b56:	83 c4 10             	add    $0x10,%esp
c0002b59:	eb fe                	jmp    c0002b59 <memset+0x48>
c0002b5b:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002b5e:	8d 50 01             	lea    0x1(%eax),%edx
c0002b61:	89 55 f4             	mov    %edx,-0xc(%ebp)
c0002b64:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx
c0002b68:	88 10                	mov    %dl,(%eax)
c0002b6a:	8b 45 10             	mov    0x10(%ebp),%eax
c0002b6d:	8d 50 ff             	lea    -0x1(%eax),%edx
c0002b70:	89 55 10             	mov    %edx,0x10(%ebp)
c0002b73:	85 c0                	test   %eax,%eax
c0002b75:	75 e4                	jne    c0002b5b <memset+0x4a>
c0002b77:	90                   	nop
c0002b78:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002b7b:	c9                   	leave  
c0002b7c:	c3                   	ret    

c0002b7d <memcpy>:
c0002b7d:	55                   	push   %ebp
c0002b7e:	89 e5                	mov    %esp,%ebp
c0002b80:	53                   	push   %ebx
c0002b81:	83 ec 14             	sub    $0x14,%esp
c0002b84:	e8 4b ea ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0002b89:	81 c3 77 44 00 00    	add    $0x4477,%ebx
c0002b8f:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b92:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002b95:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002b98:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002b9b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002b9f:	74 06                	je     c0002ba7 <memcpy+0x2a>
c0002ba1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
c0002ba5:	75 26                	jne    c0002bcd <memcpy+0x50>
c0002ba7:	e8 ec f6 ff ff       	call   c0002298 <intclose>
c0002bac:	83 ec 0c             	sub    $0xc,%esp
c0002baf:	6a 0a                	push   $0xa
c0002bb1:	e8 2a ea ff ff       	call   c00015e0 <put_char>
c0002bb6:	83 c4 10             	add    $0x10,%esp
c0002bb9:	83 ec 0c             	sub    $0xc,%esp
c0002bbc:	8d 83 05 d6 ff ff    	lea    -0x29fb(%ebx),%eax
c0002bc2:	50                   	push   %eax
c0002bc3:	e8 0c eb ff ff       	call   c00016d4 <put_str>
c0002bc8:	83 c4 10             	add    $0x10,%esp
c0002bcb:	eb fe                	jmp    c0002bcb <memcpy+0x4e>
c0002bcd:	eb 17                	jmp    c0002be6 <memcpy+0x69>
c0002bcf:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002bd2:	8d 42 01             	lea    0x1(%edx),%eax
c0002bd5:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002bd8:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002bdb:	8d 48 01             	lea    0x1(%eax),%ecx
c0002bde:	89 4d f4             	mov    %ecx,-0xc(%ebp)
c0002be1:	0f b6 12             	movzbl (%edx),%edx
c0002be4:	88 10                	mov    %dl,(%eax)
c0002be6:	8b 45 10             	mov    0x10(%ebp),%eax
c0002be9:	8d 50 ff             	lea    -0x1(%eax),%edx
c0002bec:	89 55 10             	mov    %edx,0x10(%ebp)
c0002bef:	85 c0                	test   %eax,%eax
c0002bf1:	75 dc                	jne    c0002bcf <memcpy+0x52>
c0002bf3:	90                   	nop
c0002bf4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002bf7:	c9                   	leave  
c0002bf8:	c3                   	ret    

c0002bf9 <memcmp>:
c0002bf9:	55                   	push   %ebp
c0002bfa:	89 e5                	mov    %esp,%ebp
c0002bfc:	53                   	push   %ebx
c0002bfd:	83 ec 14             	sub    $0x14,%esp
c0002c00:	e8 cf e9 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0002c05:	81 c3 fb 43 00 00    	add    $0x43fb,%ebx
c0002c0b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002c0f:	74 06                	je     c0002c17 <memcmp+0x1e>
c0002c11:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
c0002c15:	75 26                	jne    c0002c3d <memcmp+0x44>
c0002c17:	e8 7c f6 ff ff       	call   c0002298 <intclose>
c0002c1c:	83 ec 0c             	sub    $0xc,%esp
c0002c1f:	6a 0a                	push   $0xa
c0002c21:	e8 ba e9 ff ff       	call   c00015e0 <put_char>
c0002c26:	83 c4 10             	add    $0x10,%esp
c0002c29:	83 ec 0c             	sub    $0xc,%esp
c0002c2c:	8d 83 16 d6 ff ff    	lea    -0x29ea(%ebx),%eax
c0002c32:	50                   	push   %eax
c0002c33:	e8 9c ea ff ff       	call   c00016d4 <put_str>
c0002c38:	83 c4 10             	add    $0x10,%esp
c0002c3b:	eb fe                	jmp    c0002c3b <memcmp+0x42>
c0002c3d:	8b 45 08             	mov    0x8(%ebp),%eax
c0002c40:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002c43:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002c46:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002c49:	eb 36                	jmp    c0002c81 <memcmp+0x88>
c0002c4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002c4e:	0f b6 10             	movzbl (%eax),%edx
c0002c51:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002c54:	0f b6 00             	movzbl (%eax),%eax
c0002c57:	38 c2                	cmp    %al,%dl
c0002c59:	74 1e                	je     c0002c79 <memcmp+0x80>
c0002c5b:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002c5e:	0f b6 10             	movzbl (%eax),%edx
c0002c61:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002c64:	0f b6 00             	movzbl (%eax),%eax
c0002c67:	38 c2                	cmp    %al,%dl
c0002c69:	7e 07                	jle    c0002c72 <memcmp+0x79>
c0002c6b:	b8 01 00 00 00       	mov    $0x1,%eax
c0002c70:	eb 21                	jmp    c0002c93 <memcmp+0x9a>
c0002c72:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
c0002c77:	eb 1a                	jmp    c0002c93 <memcmp+0x9a>
c0002c79:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0002c7d:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
c0002c81:	8b 45 10             	mov    0x10(%ebp),%eax
c0002c84:	8d 50 ff             	lea    -0x1(%eax),%edx
c0002c87:	89 55 10             	mov    %edx,0x10(%ebp)
c0002c8a:	85 c0                	test   %eax,%eax
c0002c8c:	75 bd                	jne    c0002c4b <memcmp+0x52>
c0002c8e:	b8 00 00 00 00       	mov    $0x0,%eax
c0002c93:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002c96:	c9                   	leave  
c0002c97:	c3                   	ret    

c0002c98 <strcpy>:
c0002c98:	55                   	push   %ebp
c0002c99:	89 e5                	mov    %esp,%ebp
c0002c9b:	e8 30 e9 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002ca0:	05 60 43 00 00       	add    $0x4360,%eax
c0002ca5:	eb 17                	jmp    c0002cbe <strcpy+0x26>
c0002ca7:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002caa:	8d 42 01             	lea    0x1(%edx),%eax
c0002cad:	89 45 0c             	mov    %eax,0xc(%ebp)
c0002cb0:	8b 45 08             	mov    0x8(%ebp),%eax
c0002cb3:	8d 48 01             	lea    0x1(%eax),%ecx
c0002cb6:	89 4d 08             	mov    %ecx,0x8(%ebp)
c0002cb9:	0f b6 12             	movzbl (%edx),%edx
c0002cbc:	88 10                	mov    %dl,(%eax)
c0002cbe:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002cc1:	0f b6 00             	movzbl (%eax),%eax
c0002cc4:	84 c0                	test   %al,%al
c0002cc6:	75 df                	jne    c0002ca7 <strcpy+0xf>
c0002cc8:	90                   	nop
c0002cc9:	5d                   	pop    %ebp
c0002cca:	c3                   	ret    

c0002ccb <strlen>:
c0002ccb:	55                   	push   %ebp
c0002ccc:	89 e5                	mov    %esp,%ebp
c0002cce:	83 ec 10             	sub    $0x10,%esp
c0002cd1:	e8 fa e8 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002cd6:	05 2a 43 00 00       	add    $0x432a,%eax
c0002cdb:	8b 45 08             	mov    0x8(%ebp),%eax
c0002cde:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002ce1:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c0002ce8:	eb 04                	jmp    c0002cee <strlen+0x23>
c0002cea:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c0002cee:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002cf1:	8d 50 01             	lea    0x1(%eax),%edx
c0002cf4:	89 55 fc             	mov    %edx,-0x4(%ebp)
c0002cf7:	0f b6 00             	movzbl (%eax),%eax
c0002cfa:	84 c0                	test   %al,%al
c0002cfc:	75 ec                	jne    c0002cea <strlen+0x1f>
c0002cfe:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002d01:	c9                   	leave  
c0002d02:	c3                   	ret    

c0002d03 <string_equal>:
c0002d03:	55                   	push   %ebp
c0002d04:	89 e5                	mov    %esp,%ebp
c0002d06:	e8 c5 e8 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002d0b:	05 f5 42 00 00       	add    $0x42f5,%eax
c0002d10:	eb 19                	jmp    c0002d2b <string_equal+0x28>
c0002d12:	8b 45 08             	mov    0x8(%ebp),%eax
c0002d15:	0f b6 00             	movzbl (%eax),%eax
c0002d18:	84 c0                	test   %al,%al
c0002d1a:	75 07                	jne    c0002d23 <string_equal+0x20>
c0002d1c:	b8 01 00 00 00       	mov    $0x1,%eax
c0002d21:	eb 1d                	jmp    c0002d40 <string_equal+0x3d>
c0002d23:	83 45 08 01          	addl   $0x1,0x8(%ebp)
c0002d27:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
c0002d2b:	8b 45 08             	mov    0x8(%ebp),%eax
c0002d2e:	0f b6 10             	movzbl (%eax),%edx
c0002d31:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002d34:	0f b6 00             	movzbl (%eax),%eax
c0002d37:	38 c2                	cmp    %al,%dl
c0002d39:	74 d7                	je     c0002d12 <string_equal+0xf>
c0002d3b:	b8 00 00 00 00       	mov    $0x0,%eax
c0002d40:	5d                   	pop    %ebp
c0002d41:	c3                   	ret    
c0002d42:	66 90                	xchg   %ax,%ax
c0002d44:	66 90                	xchg   %ax,%ax
c0002d46:	66 90                	xchg   %ax,%ax
c0002d48:	66 90                	xchg   %ax,%ax
c0002d4a:	66 90                	xchg   %ax,%ax
c0002d4c:	66 90                	xchg   %ax,%ax
c0002d4e:	66 90                	xchg   %ax,%ax

c0002d50 <running_thread>:
c0002d50:	55                   	push   %ebp
c0002d51:	89 e5                	mov    %esp,%ebp
c0002d53:	83 ec 10             	sub    $0x10,%esp
c0002d56:	e8 75 e8 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002d5b:	05 a5 42 00 00       	add    $0x42a5,%eax
c0002d60:	89 e0                	mov    %esp,%eax
c0002d62:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002d65:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002d68:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002d6d:	c9                   	leave  
c0002d6e:	c3                   	ret    

c0002d6f <kernel_thread>:
c0002d6f:	55                   	push   %ebp
c0002d70:	89 e5                	mov    %esp,%ebp
c0002d72:	53                   	push   %ebx
c0002d73:	83 ec 04             	sub    $0x4,%esp
c0002d76:	e8 55 e8 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0002d7b:	05 85 42 00 00       	add    $0x4285,%eax
c0002d80:	89 c3                	mov    %eax,%ebx
c0002d82:	e8 e5 f4 ff ff       	call   c000226c <intopen>
c0002d87:	83 ec 0c             	sub    $0xc,%esp
c0002d8a:	ff 75 0c             	pushl  0xc(%ebp)
c0002d8d:	8b 45 08             	mov    0x8(%ebp),%eax
c0002d90:	ff d0                	call   *%eax
c0002d92:	83 c4 10             	add    $0x10,%esp
c0002d95:	90                   	nop
c0002d96:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002d99:	c9                   	leave  
c0002d9a:	c3                   	ret    

c0002d9b <thread_create>:
c0002d9b:	55                   	push   %ebp
c0002d9c:	89 e5                	mov    %esp,%ebp
c0002d9e:	83 ec 10             	sub    $0x10,%esp
c0002da1:	e8 5b 05 00 00       	call   c0003301 <__x86.get_pc_thunk.dx>
c0002da6:	81 c2 5a 42 00 00    	add    $0x425a,%edx
c0002dac:	8b 45 08             	mov    0x8(%ebp),%eax
c0002daf:	8b 00                	mov    (%eax),%eax
c0002db1:	8d 88 d0 fe ff ff    	lea    -0x130(%eax),%ecx
c0002db7:	8b 45 08             	mov    0x8(%ebp),%eax
c0002dba:	89 08                	mov    %ecx,(%eax)
c0002dbc:	8b 45 08             	mov    0x8(%ebp),%eax
c0002dbf:	8b 00                	mov    (%eax),%eax
c0002dc1:	8d 48 80             	lea    -0x80(%eax),%ecx
c0002dc4:	8b 45 08             	mov    0x8(%ebp),%eax
c0002dc7:	89 08                	mov    %ecx,(%eax)
c0002dc9:	8b 45 08             	mov    0x8(%ebp),%eax
c0002dcc:	8b 00                	mov    (%eax),%eax
c0002dce:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002dd1:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002dd4:	8d 92 6f bd ff ff    	lea    -0x4291(%edx),%edx
c0002dda:	89 50 10             	mov    %edx,0x10(%eax)
c0002ddd:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002de0:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002de3:	89 50 18             	mov    %edx,0x18(%eax)
c0002de6:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002de9:	8b 55 10             	mov    0x10(%ebp),%edx
c0002dec:	89 50 1c             	mov    %edx,0x1c(%eax)
c0002def:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002df2:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
c0002df9:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002dfc:	8b 50 0c             	mov    0xc(%eax),%edx
c0002dff:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e02:	89 50 08             	mov    %edx,0x8(%eax)
c0002e05:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e08:	8b 50 08             	mov    0x8(%eax),%edx
c0002e0b:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e0e:	89 50 04             	mov    %edx,0x4(%eax)
c0002e11:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e14:	8b 50 04             	mov    0x4(%eax),%edx
c0002e17:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e1a:	89 10                	mov    %edx,(%eax)
c0002e1c:	90                   	nop
c0002e1d:	c9                   	leave  
c0002e1e:	c3                   	ret    

c0002e1f <init_thread>:
c0002e1f:	55                   	push   %ebp
c0002e20:	89 e5                	mov    %esp,%ebp
c0002e22:	53                   	push   %ebx
c0002e23:	83 ec 04             	sub    $0x4,%esp
c0002e26:	e8 a9 e7 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0002e2b:	81 c3 d5 41 00 00    	add    $0x41d5,%ebx
c0002e31:	83 ec 04             	sub    $0x4,%esp
c0002e34:	68 00 10 00 00       	push   $0x1000
c0002e39:	6a 00                	push   $0x0
c0002e3b:	ff 75 08             	pushl  0x8(%ebp)
c0002e3e:	e8 ce fc ff ff       	call   c0002b11 <memset>
c0002e43:	83 c4 10             	add    $0x10,%esp
c0002e46:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e49:	83 c0 09             	add    $0x9,%eax
c0002e4c:	83 ec 08             	sub    $0x8,%esp
c0002e4f:	ff 75 0c             	pushl  0xc(%ebp)
c0002e52:	50                   	push   %eax
c0002e53:	e8 40 fe ff ff       	call   c0002c98 <strcpy>
c0002e58:	83 c4 10             	add    $0x10,%esp
c0002e5b:	c7 c0 c4 75 00 c0    	mov    $0xc00075c4,%eax
c0002e61:	8b 00                	mov    (%eax),%eax
c0002e63:	39 45 08             	cmp    %eax,0x8(%ebp)
c0002e66:	75 0c                	jne    c0002e74 <init_thread+0x55>
c0002e68:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e6b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
c0002e72:	eb 0a                	jmp    c0002e7e <init_thread+0x5f>
c0002e74:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e77:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
c0002e7e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e81:	05 00 10 00 00       	add    $0x1000,%eax
c0002e86:	89 c2                	mov    %eax,%edx
c0002e88:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e8b:	89 10                	mov    %edx,(%eax)
c0002e8d:	8b 45 10             	mov    0x10(%ebp),%eax
c0002e90:	89 c2                	mov    %eax,%edx
c0002e92:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e95:	88 50 08             	mov    %dl,0x8(%eax)
c0002e98:	8b 55 10             	mov    0x10(%ebp),%edx
c0002e9b:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e9e:	89 50 1c             	mov    %edx,0x1c(%eax)
c0002ea1:	8b 45 08             	mov    0x8(%ebp),%eax
c0002ea4:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)
c0002eab:	8b 45 08             	mov    0x8(%ebp),%eax
c0002eae:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
c0002eb5:	8b 45 08             	mov    0x8(%ebp),%eax
c0002eb8:	c7 40 44 06 07 92 19 	movl   $0x19920706,0x44(%eax)
c0002ebf:	90                   	nop
c0002ec0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002ec3:	c9                   	leave  
c0002ec4:	c3                   	ret    

c0002ec5 <thread_start>:
c0002ec5:	55                   	push   %ebp
c0002ec6:	89 e5                	mov    %esp,%ebp
c0002ec8:	53                   	push   %ebx
c0002ec9:	83 ec 14             	sub    $0x14,%esp
c0002ecc:	e8 03 e7 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0002ed1:	81 c3 2f 41 00 00    	add    $0x412f,%ebx
c0002ed7:	83 ec 0c             	sub    $0xc,%esp
c0002eda:	6a 01                	push   $0x1
c0002edc:	e8 1b fa ff ff       	call   c00028fc <get_kernel_pages>
c0002ee1:	83 c4 10             	add    $0x10,%esp
c0002ee4:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002ee7:	83 ec 04             	sub    $0x4,%esp
c0002eea:	ff 75 14             	pushl  0x14(%ebp)
c0002eed:	ff 75 08             	pushl  0x8(%ebp)
c0002ef0:	ff 75 f4             	pushl  -0xc(%ebp)
c0002ef3:	e8 27 ff ff ff       	call   c0002e1f <init_thread>
c0002ef8:	83 c4 10             	add    $0x10,%esp
c0002efb:	83 ec 04             	sub    $0x4,%esp
c0002efe:	ff 75 10             	pushl  0x10(%ebp)
c0002f01:	ff 75 0c             	pushl  0xc(%ebp)
c0002f04:	ff 75 f4             	pushl  -0xc(%ebp)
c0002f07:	e8 8f fe ff ff       	call   c0002d9b <thread_create>
c0002f0c:	83 c4 10             	add    $0x10,%esp
c0002f0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002f12:	83 c0 24             	add    $0x24,%eax
c0002f15:	83 ec 08             	sub    $0x8,%esp
c0002f18:	50                   	push   %eax
c0002f19:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c0002f1f:	50                   	push   %eax
c0002f20:	e8 88 04 00 00       	call   c00033ad <_list_add_back>
c0002f25:	83 c4 10             	add    $0x10,%esp
c0002f28:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002f2b:	83 c0 2c             	add    $0x2c,%eax
c0002f2e:	83 ec 08             	sub    $0x8,%esp
c0002f31:	50                   	push   %eax
c0002f32:	c7 c0 b4 75 00 c0    	mov    $0xc00075b4,%eax
c0002f38:	50                   	push   %eax
c0002f39:	e8 6f 04 00 00       	call   c00033ad <_list_add_back>
c0002f3e:	83 c4 10             	add    $0x10,%esp
c0002f41:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002f44:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002f47:	c9                   	leave  
c0002f48:	c3                   	ret    

c0002f49 <make_main_thread>:
c0002f49:	55                   	push   %ebp
c0002f4a:	89 e5                	mov    %esp,%ebp
c0002f4c:	53                   	push   %ebx
c0002f4d:	83 ec 04             	sub    $0x4,%esp
c0002f50:	e8 7f e6 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0002f55:	81 c3 ab 40 00 00    	add    $0x40ab,%ebx
c0002f5b:	e8 f0 fd ff ff       	call   c0002d50 <running_thread>
c0002f60:	89 c2                	mov    %eax,%edx
c0002f62:	c7 c0 c4 75 00 c0    	mov    $0xc00075c4,%eax
c0002f68:	89 10                	mov    %edx,(%eax)
c0002f6a:	c7 c0 c4 75 00 c0    	mov    $0xc00075c4,%eax
c0002f70:	8b 00                	mov    (%eax),%eax
c0002f72:	83 ec 04             	sub    $0x4,%esp
c0002f75:	6a 3c                	push   $0x3c
c0002f77:	8d 93 24 d6 ff ff    	lea    -0x29dc(%ebx),%edx
c0002f7d:	52                   	push   %edx
c0002f7e:	50                   	push   %eax
c0002f7f:	e8 9b fe ff ff       	call   c0002e1f <init_thread>
c0002f84:	83 c4 10             	add    $0x10,%esp
c0002f87:	c7 c0 c4 75 00 c0    	mov    $0xc00075c4,%eax
c0002f8d:	8b 00                	mov    (%eax),%eax
c0002f8f:	83 c0 2c             	add    $0x2c,%eax
c0002f92:	83 ec 08             	sub    $0x8,%esp
c0002f95:	50                   	push   %eax
c0002f96:	c7 c0 b4 75 00 c0    	mov    $0xc00075b4,%eax
c0002f9c:	50                   	push   %eax
c0002f9d:	e8 0b 04 00 00       	call   c00033ad <_list_add_back>
c0002fa2:	83 c4 10             	add    $0x10,%esp
c0002fa5:	90                   	nop
c0002fa6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002fa9:	c9                   	leave  
c0002faa:	c3                   	ret    

c0002fab <set_prio>:
c0002fab:	55                   	push   %ebp
c0002fac:	89 e5                	mov    %esp,%ebp
c0002fae:	53                   	push   %ebx
c0002faf:	83 ec 24             	sub    $0x24,%esp
c0002fb2:	e8 1d e6 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0002fb7:	81 c3 49 40 00 00    	add    $0x4049,%ebx
c0002fbd:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002fc0:	88 45 e4             	mov    %al,-0x1c(%ebp)
c0002fc3:	83 ec 0c             	sub    $0xc,%esp
c0002fc6:	c7 c0 b4 75 00 c0    	mov    $0xc00075b4,%eax
c0002fcc:	50                   	push   %eax
c0002fcd:	e8 9c 04 00 00       	call   c000346e <_list_front>
c0002fd2:	83 c4 10             	add    $0x10,%esp
c0002fd5:	83 e8 2c             	sub    $0x2c,%eax
c0002fd8:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002fdb:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002fde:	83 c0 09             	add    $0x9,%eax
c0002fe1:	83 ec 08             	sub    $0x8,%esp
c0002fe4:	50                   	push   %eax
c0002fe5:	ff 75 08             	pushl  0x8(%ebp)
c0002fe8:	e8 16 fd ff ff       	call   c0002d03 <string_equal>
c0002fed:	83 c4 10             	add    $0x10,%esp
c0002ff0:	85 c0                	test   %eax,%eax
c0002ff2:	74 0a                	je     c0002ffe <set_prio+0x53>
c0002ff4:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002ff7:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx
c0002ffb:	88 50 08             	mov    %dl,0x8(%eax)
c0002ffe:	90                   	nop
c0002fff:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003002:	c9                   	leave  
c0003003:	c3                   	ret    

c0003004 <sched>:
c0003004:	55                   	push   %ebp
c0003005:	89 e5                	mov    %esp,%ebp
c0003007:	53                   	push   %ebx
c0003008:	83 ec 14             	sub    $0x14,%esp
c000300b:	e8 c4 e5 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003010:	81 c3 f0 3f 00 00    	add    $0x3ff0,%ebx
c0003016:	e8 35 fd ff ff       	call   c0002d50 <running_thread>
c000301b:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000301e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003021:	8b 40 04             	mov    0x4(%eax),%eax
c0003024:	85 c0                	test   %eax,%eax
c0003026:	75 33                	jne    c000305b <sched+0x57>
c0003028:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000302b:	83 c0 24             	add    $0x24,%eax
c000302e:	83 ec 08             	sub    $0x8,%esp
c0003031:	50                   	push   %eax
c0003032:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c0003038:	50                   	push   %eax
c0003039:	e8 6f 03 00 00       	call   c00033ad <_list_add_back>
c000303e:	83 c4 10             	add    $0x10,%esp
c0003041:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003044:	0f b6 40 08          	movzbl 0x8(%eax),%eax
c0003048:	0f b6 d0             	movzbl %al,%edx
c000304b:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000304e:	89 50 1c             	mov    %edx,0x1c(%eax)
c0003051:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003054:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
c000305b:	c7 c0 c8 75 00 c0    	mov    $0xc00075c8,%eax
c0003061:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c0003067:	83 ec 0c             	sub    $0xc,%esp
c000306a:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c0003070:	50                   	push   %eax
c0003071:	e8 8f 03 00 00       	call   c0003405 <_list_pop_front>
c0003076:	83 c4 10             	add    $0x10,%esp
c0003079:	89 c2                	mov    %eax,%edx
c000307b:	c7 c0 c8 75 00 c0    	mov    $0xc00075c8,%eax
c0003081:	89 10                	mov    %edx,(%eax)
c0003083:	c7 c0 c8 75 00 c0    	mov    $0xc00075c8,%eax
c0003089:	8b 00                	mov    (%eax),%eax
c000308b:	83 e8 24             	sub    $0x24,%eax
c000308e:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003091:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0003094:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
c000309b:	83 ec 0c             	sub    $0xc,%esp
c000309e:	ff 75 f0             	pushl  -0x10(%ebp)
c00030a1:	e8 39 11 00 00       	call   c00041df <process_activate>
c00030a6:	83 c4 10             	add    $0x10,%esp
c00030a9:	83 ec 08             	sub    $0x8,%esp
c00030ac:	ff 75 f0             	pushl  -0x10(%ebp)
c00030af:	ff 75 f4             	pushl  -0xc(%ebp)
c00030b2:	e8 e9 00 00 00       	call   c00031a0 <switch_to>
c00030b7:	83 c4 10             	add    $0x10,%esp
c00030ba:	90                   	nop
c00030bb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00030be:	c9                   	leave  
c00030bf:	c3                   	ret    

c00030c0 <thread_init>:
c00030c0:	55                   	push   %ebp
c00030c1:	89 e5                	mov    %esp,%ebp
c00030c3:	53                   	push   %ebx
c00030c4:	83 ec 04             	sub    $0x4,%esp
c00030c7:	e8 08 e5 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00030cc:	81 c3 34 3f 00 00    	add    $0x3f34,%ebx
c00030d2:	83 ec 0c             	sub    $0xc,%esp
c00030d5:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c00030db:	50                   	push   %eax
c00030dc:	e8 24 02 00 00       	call   c0003305 <_list_init>
c00030e1:	83 c4 10             	add    $0x10,%esp
c00030e4:	83 ec 0c             	sub    $0xc,%esp
c00030e7:	c7 c0 b4 75 00 c0    	mov    $0xc00075b4,%eax
c00030ed:	50                   	push   %eax
c00030ee:	e8 12 02 00 00       	call   c0003305 <_list_init>
c00030f3:	83 c4 10             	add    $0x10,%esp
c00030f6:	e8 4e fe ff ff       	call   c0002f49 <make_main_thread>
c00030fb:	90                   	nop
c00030fc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00030ff:	c9                   	leave  
c0003100:	c3                   	ret    

c0003101 <thread_block>:
c0003101:	55                   	push   %ebp
c0003102:	89 e5                	mov    %esp,%ebp
c0003104:	53                   	push   %ebx
c0003105:	83 ec 14             	sub    $0x14,%esp
c0003108:	e8 c7 e4 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c000310d:	81 c3 f3 3e 00 00    	add    $0x3ef3,%ebx
c0003113:	e8 ac f1 ff ff       	call   c00022c4 <intr_status>
c0003118:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000311b:	e8 78 f1 ff ff       	call   c0002298 <intclose>
c0003120:	e8 2b fc ff ff       	call   c0002d50 <running_thread>
c0003125:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003128:	8b 45 f0             	mov    -0x10(%ebp),%eax
c000312b:	8b 55 08             	mov    0x8(%ebp),%edx
c000312e:	89 50 04             	mov    %edx,0x4(%eax)
c0003131:	e8 ce fe ff ff       	call   c0003004 <sched>
c0003136:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000313a:	74 05                	je     c0003141 <thread_block+0x40>
c000313c:	e8 2b f1 ff ff       	call   c000226c <intopen>
c0003141:	90                   	nop
c0003142:	83 c4 14             	add    $0x14,%esp
c0003145:	5b                   	pop    %ebx
c0003146:	5d                   	pop    %ebp
c0003147:	c3                   	ret    

c0003148 <thread_unblock>:
c0003148:	55                   	push   %ebp
c0003149:	89 e5                	mov    %esp,%ebp
c000314b:	53                   	push   %ebx
c000314c:	83 ec 14             	sub    $0x14,%esp
c000314f:	e8 80 e4 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003154:	81 c3 ac 3e 00 00    	add    $0x3eac,%ebx
c000315a:	e8 65 f1 ff ff       	call   c00022c4 <intr_status>
c000315f:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003162:	e8 31 f1 ff ff       	call   c0002298 <intclose>
c0003167:	8b 45 08             	mov    0x8(%ebp),%eax
c000316a:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
c0003171:	8b 45 08             	mov    0x8(%ebp),%eax
c0003174:	83 c0 24             	add    $0x24,%eax
c0003177:	83 ec 08             	sub    $0x8,%esp
c000317a:	50                   	push   %eax
c000317b:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c0003181:	50                   	push   %eax
c0003182:	e8 d2 01 00 00       	call   c0003359 <_list_add_front>
c0003187:	83 c4 10             	add    $0x10,%esp
c000318a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000318e:	74 05                	je     c0003195 <thread_unblock+0x4d>
c0003190:	e8 d7 f0 ff ff       	call   c000226c <intopen>
c0003195:	90                   	nop
c0003196:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003199:	c9                   	leave  
c000319a:	c3                   	ret    
c000319b:	66 90                	xchg   %ax,%ax
c000319d:	66 90                	xchg   %ax,%ax
c000319f:	90                   	nop

c00031a0 <switch_to>:
c00031a0:	56                   	push   %esi
c00031a1:	57                   	push   %edi
c00031a2:	53                   	push   %ebx
c00031a3:	55                   	push   %ebp
c00031a4:	8b 44 24 14          	mov    0x14(%esp),%eax
c00031a8:	89 20                	mov    %esp,(%eax)
c00031aa:	8b 44 24 18          	mov    0x18(%esp),%eax
c00031ae:	8b 20                	mov    (%eax),%esp
c00031b0:	5d                   	pop    %ebp
c00031b1:	5b                   	pop    %ebx
c00031b2:	5f                   	pop    %edi
c00031b3:	5e                   	pop    %esi
c00031b4:	c3                   	ret    

c00031b5 <init_lock>:
c00031b5:	55                   	push   %ebp
c00031b6:	89 e5                	mov    %esp,%ebp
c00031b8:	53                   	push   %ebx
c00031b9:	83 ec 04             	sub    $0x4,%esp
c00031bc:	e8 0f e4 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00031c1:	05 3f 3e 00 00       	add    $0x3e3f,%eax
c00031c6:	8b 55 08             	mov    0x8(%ebp),%edx
c00031c9:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
c00031cf:	8b 55 08             	mov    0x8(%ebp),%edx
c00031d2:	83 c2 04             	add    $0x4,%edx
c00031d5:	83 ec 0c             	sub    $0xc,%esp
c00031d8:	52                   	push   %edx
c00031d9:	89 c3                	mov    %eax,%ebx
c00031db:	e8 25 01 00 00       	call   c0003305 <_list_init>
c00031e0:	83 c4 10             	add    $0x10,%esp
c00031e3:	90                   	nop
c00031e4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00031e7:	c9                   	leave  
c00031e8:	c3                   	ret    

c00031e9 <acquire_lock>:
c00031e9:	55                   	push   %ebp
c00031ea:	89 e5                	mov    %esp,%ebp
c00031ec:	53                   	push   %ebx
c00031ed:	83 ec 14             	sub    $0x14,%esp
c00031f0:	e8 df e3 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00031f5:	81 c3 0b 3e 00 00    	add    $0x3e0b,%ebx
c00031fb:	e8 c4 f0 ff ff       	call   c00022c4 <intr_status>
c0003200:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003203:	e8 90 f0 ff ff       	call   c0002298 <intclose>
c0003208:	e8 43 fb ff ff       	call   c0002d50 <running_thread>
c000320d:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003210:	eb 26                	jmp    c0003238 <acquire_lock+0x4f>
c0003212:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0003215:	8d 50 24             	lea    0x24(%eax),%edx
c0003218:	8b 45 08             	mov    0x8(%ebp),%eax
c000321b:	83 c0 04             	add    $0x4,%eax
c000321e:	83 ec 08             	sub    $0x8,%esp
c0003221:	52                   	push   %edx
c0003222:	50                   	push   %eax
c0003223:	e8 85 01 00 00       	call   c00033ad <_list_add_back>
c0003228:	83 c4 10             	add    $0x10,%esp
c000322b:	83 ec 0c             	sub    $0xc,%esp
c000322e:	6a 02                	push   $0x2
c0003230:	e8 cc fe ff ff       	call   c0003101 <thread_block>
c0003235:	83 c4 10             	add    $0x10,%esp
c0003238:	8b 45 08             	mov    0x8(%ebp),%eax
c000323b:	8b 00                	mov    (%eax),%eax
c000323d:	85 c0                	test   %eax,%eax
c000323f:	75 d1                	jne    c0003212 <acquire_lock+0x29>
c0003241:	8b 45 08             	mov    0x8(%ebp),%eax
c0003244:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0003247:	89 10                	mov    %edx,(%eax)
c0003249:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000324d:	74 05                	je     c0003254 <acquire_lock+0x6b>
c000324f:	e8 18 f0 ff ff       	call   c000226c <intopen>
c0003254:	90                   	nop
c0003255:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003258:	c9                   	leave  
c0003259:	c3                   	ret    

c000325a <release_lock>:
c000325a:	55                   	push   %ebp
c000325b:	89 e5                	mov    %esp,%ebp
c000325d:	56                   	push   %esi
c000325e:	53                   	push   %ebx
c000325f:	83 ec 10             	sub    $0x10,%esp
c0003262:	e8 6d e3 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003267:	81 c3 99 3d 00 00    	add    $0x3d99,%ebx
c000326d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003270:	8b 30                	mov    (%eax),%esi
c0003272:	e8 d9 fa ff ff       	call   c0002d50 <running_thread>
c0003277:	39 c6                	cmp    %eax,%esi
c0003279:	74 26                	je     c00032a1 <release_lock+0x47>
c000327b:	e8 18 f0 ff ff       	call   c0002298 <intclose>
c0003280:	83 ec 0c             	sub    $0xc,%esp
c0003283:	6a 0a                	push   $0xa
c0003285:	e8 56 e3 ff ff       	call   c00015e0 <put_char>
c000328a:	83 c4 10             	add    $0x10,%esp
c000328d:	83 ec 0c             	sub    $0xc,%esp
c0003290:	8d 83 30 d6 ff ff    	lea    -0x29d0(%ebx),%eax
c0003296:	50                   	push   %eax
c0003297:	e8 38 e4 ff ff       	call   c00016d4 <put_str>
c000329c:	83 c4 10             	add    $0x10,%esp
c000329f:	eb fe                	jmp    c000329f <release_lock+0x45>
c00032a1:	e8 1e f0 ff ff       	call   c00022c4 <intr_status>
c00032a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00032a9:	e8 ea ef ff ff       	call   c0002298 <intclose>
c00032ae:	8b 45 08             	mov    0x8(%ebp),%eax
c00032b1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c00032b7:	8b 45 08             	mov    0x8(%ebp),%eax
c00032ba:	83 c0 04             	add    $0x4,%eax
c00032bd:	83 ec 0c             	sub    $0xc,%esp
c00032c0:	50                   	push   %eax
c00032c1:	e8 76 02 00 00       	call   c000353c <_list_empty>
c00032c6:	83 c4 10             	add    $0x10,%esp
c00032c9:	84 c0                	test   %al,%al
c00032cb:	75 21                	jne    c00032ee <release_lock+0x94>
c00032cd:	8b 45 08             	mov    0x8(%ebp),%eax
c00032d0:	83 c0 04             	add    $0x4,%eax
c00032d3:	83 ec 0c             	sub    $0xc,%esp
c00032d6:	50                   	push   %eax
c00032d7:	e8 29 01 00 00       	call   c0003405 <_list_pop_front>
c00032dc:	83 c4 10             	add    $0x10,%esp
c00032df:	83 e8 24             	sub    $0x24,%eax
c00032e2:	83 ec 0c             	sub    $0xc,%esp
c00032e5:	50                   	push   %eax
c00032e6:	e8 5d fe ff ff       	call   c0003148 <thread_unblock>
c00032eb:	83 c4 10             	add    $0x10,%esp
c00032ee:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00032f2:	74 05                	je     c00032f9 <release_lock+0x9f>
c00032f4:	e8 73 ef ff ff       	call   c000226c <intopen>
c00032f9:	90                   	nop
c00032fa:	8d 65 f8             	lea    -0x8(%ebp),%esp
c00032fd:	5b                   	pop    %ebx
c00032fe:	5e                   	pop    %esi
c00032ff:	5d                   	pop    %ebp
c0003300:	c3                   	ret    

c0003301 <__x86.get_pc_thunk.dx>:
c0003301:	8b 14 24             	mov    (%esp),%edx
c0003304:	c3                   	ret    

c0003305 <_list_init>:
c0003305:	55                   	push   %ebp
c0003306:	89 e5                	mov    %esp,%ebp
c0003308:	53                   	push   %ebx
c0003309:	83 ec 14             	sub    $0x14,%esp
c000330c:	e8 c3 e2 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003311:	81 c3 ef 3c 00 00    	add    $0x3cef,%ebx
c0003317:	e8 a8 ef ff ff       	call   c00022c4 <intr_status>
c000331c:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000331f:	8b 45 08             	mov    0x8(%ebp),%eax
c0003322:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c0003328:	8b 45 08             	mov    0x8(%ebp),%eax
c000332b:	8d 50 08             	lea    0x8(%eax),%edx
c000332e:	8b 45 08             	mov    0x8(%ebp),%eax
c0003331:	89 50 04             	mov    %edx,0x4(%eax)
c0003334:	8b 55 08             	mov    0x8(%ebp),%edx
c0003337:	8b 45 08             	mov    0x8(%ebp),%eax
c000333a:	89 50 08             	mov    %edx,0x8(%eax)
c000333d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003340:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
c0003347:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000334b:	74 05                	je     c0003352 <_list_init+0x4d>
c000334d:	e8 1a ef ff ff       	call   c000226c <intopen>
c0003352:	90                   	nop
c0003353:	83 c4 14             	add    $0x14,%esp
c0003356:	5b                   	pop    %ebx
c0003357:	5d                   	pop    %ebp
c0003358:	c3                   	ret    

c0003359 <_list_add_front>:
c0003359:	55                   	push   %ebp
c000335a:	89 e5                	mov    %esp,%ebp
c000335c:	53                   	push   %ebx
c000335d:	83 ec 14             	sub    $0x14,%esp
c0003360:	e8 6f e2 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003365:	81 c3 9b 3c 00 00    	add    $0x3c9b,%ebx
c000336b:	e8 54 ef ff ff       	call   c00022c4 <intr_status>
c0003370:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003373:	8b 55 08             	mov    0x8(%ebp),%edx
c0003376:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003379:	89 10                	mov    %edx,(%eax)
c000337b:	8b 45 08             	mov    0x8(%ebp),%eax
c000337e:	8b 50 04             	mov    0x4(%eax),%edx
c0003381:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003384:	89 50 04             	mov    %edx,0x4(%eax)
c0003387:	8b 45 08             	mov    0x8(%ebp),%eax
c000338a:	8b 40 04             	mov    0x4(%eax),%eax
c000338d:	8b 55 0c             	mov    0xc(%ebp),%edx
c0003390:	89 10                	mov    %edx,(%eax)
c0003392:	8b 45 08             	mov    0x8(%ebp),%eax
c0003395:	8b 55 0c             	mov    0xc(%ebp),%edx
c0003398:	89 50 04             	mov    %edx,0x4(%eax)
c000339b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000339f:	74 05                	je     c00033a6 <_list_add_front+0x4d>
c00033a1:	e8 c6 ee ff ff       	call   c000226c <intopen>
c00033a6:	90                   	nop
c00033a7:	83 c4 14             	add    $0x14,%esp
c00033aa:	5b                   	pop    %ebx
c00033ab:	5d                   	pop    %ebp
c00033ac:	c3                   	ret    

c00033ad <_list_add_back>:
c00033ad:	55                   	push   %ebp
c00033ae:	89 e5                	mov    %esp,%ebp
c00033b0:	53                   	push   %ebx
c00033b1:	83 ec 14             	sub    $0x14,%esp
c00033b4:	e8 1b e2 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00033b9:	81 c3 47 3c 00 00    	add    $0x3c47,%ebx
c00033bf:	e8 00 ef ff ff       	call   c00022c4 <intr_status>
c00033c4:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00033c7:	8b 45 08             	mov    0x8(%ebp),%eax
c00033ca:	8d 50 08             	lea    0x8(%eax),%edx
c00033cd:	8b 45 0c             	mov    0xc(%ebp),%eax
c00033d0:	89 50 04             	mov    %edx,0x4(%eax)
c00033d3:	8b 45 08             	mov    0x8(%ebp),%eax
c00033d6:	8b 50 08             	mov    0x8(%eax),%edx
c00033d9:	8b 45 0c             	mov    0xc(%ebp),%eax
c00033dc:	89 10                	mov    %edx,(%eax)
c00033de:	8b 45 08             	mov    0x8(%ebp),%eax
c00033e1:	8b 40 08             	mov    0x8(%eax),%eax
c00033e4:	8b 55 0c             	mov    0xc(%ebp),%edx
c00033e7:	89 50 04             	mov    %edx,0x4(%eax)
c00033ea:	8b 45 08             	mov    0x8(%ebp),%eax
c00033ed:	8b 55 0c             	mov    0xc(%ebp),%edx
c00033f0:	89 50 08             	mov    %edx,0x8(%eax)
c00033f3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00033f7:	74 05                	je     c00033fe <_list_add_back+0x51>
c00033f9:	e8 6e ee ff ff       	call   c000226c <intopen>
c00033fe:	90                   	nop
c00033ff:	83 c4 14             	add    $0x14,%esp
c0003402:	5b                   	pop    %ebx
c0003403:	5d                   	pop    %ebp
c0003404:	c3                   	ret    

c0003405 <_list_pop_front>:
c0003405:	55                   	push   %ebp
c0003406:	89 e5                	mov    %esp,%ebp
c0003408:	53                   	push   %ebx
c0003409:	83 ec 14             	sub    $0x14,%esp
c000340c:	e8 c3 e1 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003411:	81 c3 ef 3b 00 00    	add    $0x3bef,%ebx
c0003417:	e8 a8 ee ff ff       	call   c00022c4 <intr_status>
c000341c:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000341f:	83 ec 0c             	sub    $0xc,%esp
c0003422:	ff 75 08             	pushl  0x8(%ebp)
c0003425:	e8 12 01 00 00       	call   c000353c <_list_empty>
c000342a:	83 c4 10             	add    $0x10,%esp
c000342d:	84 c0                	test   %al,%al
c000342f:	74 07                	je     c0003438 <_list_pop_front+0x33>
c0003431:	b8 00 00 00 00       	mov    $0x0,%eax
c0003436:	eb 31                	jmp    c0003469 <_list_pop_front+0x64>
c0003438:	8b 45 08             	mov    0x8(%ebp),%eax
c000343b:	8b 40 04             	mov    0x4(%eax),%eax
c000343e:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003441:	8b 45 08             	mov    0x8(%ebp),%eax
c0003444:	8b 40 04             	mov    0x4(%eax),%eax
c0003447:	8b 50 04             	mov    0x4(%eax),%edx
c000344a:	8b 45 08             	mov    0x8(%ebp),%eax
c000344d:	89 50 04             	mov    %edx,0x4(%eax)
c0003450:	8b 45 08             	mov    0x8(%ebp),%eax
c0003453:	8b 40 04             	mov    0x4(%eax),%eax
c0003456:	8b 55 08             	mov    0x8(%ebp),%edx
c0003459:	89 10                	mov    %edx,(%eax)
c000345b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000345f:	74 05                	je     c0003466 <_list_pop_front+0x61>
c0003461:	e8 06 ee ff ff       	call   c000226c <intopen>
c0003466:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0003469:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000346c:	c9                   	leave  
c000346d:	c3                   	ret    

c000346e <_list_front>:
c000346e:	55                   	push   %ebp
c000346f:	89 e5                	mov    %esp,%ebp
c0003471:	83 ec 08             	sub    $0x8,%esp
c0003474:	e8 57 e1 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003479:	05 87 3b 00 00       	add    $0x3b87,%eax
c000347e:	83 ec 0c             	sub    $0xc,%esp
c0003481:	ff 75 08             	pushl  0x8(%ebp)
c0003484:	e8 b3 00 00 00       	call   c000353c <_list_empty>
c0003489:	83 c4 10             	add    $0x10,%esp
c000348c:	84 c0                	test   %al,%al
c000348e:	74 07                	je     c0003497 <_list_front+0x29>
c0003490:	b8 00 00 00 00       	mov    $0x0,%eax
c0003495:	eb 06                	jmp    c000349d <_list_front+0x2f>
c0003497:	8b 45 08             	mov    0x8(%ebp),%eax
c000349a:	8b 40 04             	mov    0x4(%eax),%eax
c000349d:	c9                   	leave  
c000349e:	c3                   	ret    

c000349f <_list_pop_back>:
c000349f:	55                   	push   %ebp
c00034a0:	89 e5                	mov    %esp,%ebp
c00034a2:	53                   	push   %ebx
c00034a3:	83 ec 14             	sub    $0x14,%esp
c00034a6:	e8 29 e1 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00034ab:	81 c3 55 3b 00 00    	add    $0x3b55,%ebx
c00034b1:	e8 0e ee ff ff       	call   c00022c4 <intr_status>
c00034b6:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00034b9:	83 ec 0c             	sub    $0xc,%esp
c00034bc:	ff 75 08             	pushl  0x8(%ebp)
c00034bf:	e8 78 00 00 00       	call   c000353c <_list_empty>
c00034c4:	83 c4 10             	add    $0x10,%esp
c00034c7:	84 c0                	test   %al,%al
c00034c9:	74 07                	je     c00034d2 <_list_pop_back+0x33>
c00034cb:	b8 00 00 00 00       	mov    $0x0,%eax
c00034d0:	eb 34                	jmp    c0003506 <_list_pop_back+0x67>
c00034d2:	8b 45 08             	mov    0x8(%ebp),%eax
c00034d5:	8b 40 08             	mov    0x8(%eax),%eax
c00034d8:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00034db:	8b 45 08             	mov    0x8(%ebp),%eax
c00034de:	8b 40 08             	mov    0x8(%eax),%eax
c00034e1:	8b 10                	mov    (%eax),%edx
c00034e3:	8b 45 08             	mov    0x8(%ebp),%eax
c00034e6:	89 50 08             	mov    %edx,0x8(%eax)
c00034e9:	8b 45 08             	mov    0x8(%ebp),%eax
c00034ec:	8b 40 08             	mov    0x8(%eax),%eax
c00034ef:	8b 55 08             	mov    0x8(%ebp),%edx
c00034f2:	83 c2 08             	add    $0x8,%edx
c00034f5:	89 50 04             	mov    %edx,0x4(%eax)
c00034f8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00034fc:	74 05                	je     c0003503 <_list_pop_back+0x64>
c00034fe:	e8 69 ed ff ff       	call   c000226c <intopen>
c0003503:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0003506:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003509:	c9                   	leave  
c000350a:	c3                   	ret    

c000350b <_list_back>:
c000350b:	55                   	push   %ebp
c000350c:	89 e5                	mov    %esp,%ebp
c000350e:	83 ec 08             	sub    $0x8,%esp
c0003511:	e8 ba e0 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003516:	05 ea 3a 00 00       	add    $0x3aea,%eax
c000351b:	83 ec 0c             	sub    $0xc,%esp
c000351e:	ff 75 08             	pushl  0x8(%ebp)
c0003521:	e8 16 00 00 00       	call   c000353c <_list_empty>
c0003526:	83 c4 10             	add    $0x10,%esp
c0003529:	84 c0                	test   %al,%al
c000352b:	74 07                	je     c0003534 <_list_back+0x29>
c000352d:	b8 00 00 00 00       	mov    $0x0,%eax
c0003532:	eb 06                	jmp    c000353a <_list_back+0x2f>
c0003534:	8b 45 08             	mov    0x8(%ebp),%eax
c0003537:	8b 40 08             	mov    0x8(%eax),%eax
c000353a:	c9                   	leave  
c000353b:	c3                   	ret    

c000353c <_list_empty>:
c000353c:	55                   	push   %ebp
c000353d:	89 e5                	mov    %esp,%ebp
c000353f:	e8 8c e0 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003544:	05 bc 3a 00 00       	add    $0x3abc,%eax
c0003549:	8b 45 08             	mov    0x8(%ebp),%eax
c000354c:	8b 40 04             	mov    0x4(%eax),%eax
c000354f:	8b 55 08             	mov    0x8(%ebp),%edx
c0003552:	83 c2 08             	add    $0x8,%edx
c0003555:	39 d0                	cmp    %edx,%eax
c0003557:	75 07                	jne    c0003560 <_list_empty+0x24>
c0003559:	b8 01 00 00 00       	mov    $0x1,%eax
c000355e:	eb 05                	jmp    c0003565 <_list_empty+0x29>
c0003560:	b8 00 00 00 00       	mov    $0x0,%eax
c0003565:	5d                   	pop    %ebp
c0003566:	c3                   	ret    

c0003567 <_list_find>:
c0003567:	55                   	push   %ebp
c0003568:	89 e5                	mov    %esp,%ebp
c000356a:	53                   	push   %ebx
c000356b:	83 ec 14             	sub    $0x14,%esp
c000356e:	e8 61 e0 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003573:	81 c3 8d 3a 00 00    	add    $0x3a8d,%ebx
c0003579:	e8 46 ed ff ff       	call   c00022c4 <intr_status>
c000357e:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003581:	8b 45 08             	mov    0x8(%ebp),%eax
c0003584:	8b 40 04             	mov    0x4(%eax),%eax
c0003587:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000358a:	eb 0f                	jmp    c000359b <_list_find+0x34>
c000358c:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000358f:	3b 45 0c             	cmp    0xc(%ebp),%eax
c0003592:	75 07                	jne    c000359b <_list_find+0x34>
c0003594:	b8 01 00 00 00       	mov    $0x1,%eax
c0003599:	eb 23                	jmp    c00035be <_list_find+0x57>
c000359b:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000359e:	8d 50 08             	lea    0x8(%eax),%edx
c00035a1:	89 55 f4             	mov    %edx,-0xc(%ebp)
c00035a4:	8b 55 08             	mov    0x8(%ebp),%edx
c00035a7:	83 c2 08             	add    $0x8,%edx
c00035aa:	39 d0                	cmp    %edx,%eax
c00035ac:	75 de                	jne    c000358c <_list_find+0x25>
c00035ae:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
c00035b2:	74 05                	je     c00035b9 <_list_find+0x52>
c00035b4:	e8 b3 ec ff ff       	call   c000226c <intopen>
c00035b9:	b8 00 00 00 00       	mov    $0x0,%eax
c00035be:	83 c4 14             	add    $0x14,%esp
c00035c1:	5b                   	pop    %ebx
c00035c2:	5d                   	pop    %ebp
c00035c3:	c3                   	ret    

c00035c4 <outb>:
c00035c4:	55                   	push   %ebp
c00035c5:	89 e5                	mov    %esp,%ebp
c00035c7:	83 ec 08             	sub    $0x8,%esp
c00035ca:	e8 01 e0 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00035cf:	05 31 3a 00 00       	add    $0x3a31,%eax
c00035d4:	8b 55 08             	mov    0x8(%ebp),%edx
c00035d7:	8b 45 0c             	mov    0xc(%ebp),%eax
c00035da:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c00035de:	88 45 f8             	mov    %al,-0x8(%ebp)
c00035e1:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c00035e5:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c00035e9:	ee                   	out    %al,(%dx)
c00035ea:	90                   	nop
c00035eb:	c9                   	leave  
c00035ec:	c3                   	ret    

c00035ed <outsw>:
c00035ed:	55                   	push   %ebp
c00035ee:	89 e5                	mov    %esp,%ebp
c00035f0:	56                   	push   %esi
c00035f1:	53                   	push   %ebx
c00035f2:	83 ec 04             	sub    $0x4,%esp
c00035f5:	e8 d6 df ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00035fa:	05 06 3a 00 00       	add    $0x3a06,%eax
c00035ff:	8b 45 08             	mov    0x8(%ebp),%eax
c0003602:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0003606:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c000360a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c000360d:	8b 45 10             	mov    0x10(%ebp),%eax
c0003610:	89 cb                	mov    %ecx,%ebx
c0003612:	89 de                	mov    %ebx,%esi
c0003614:	89 c1                	mov    %eax,%ecx
c0003616:	fc                   	cld    
c0003617:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c000361a:	89 c8                	mov    %ecx,%eax
c000361c:	89 f3                	mov    %esi,%ebx
c000361e:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003621:	89 45 10             	mov    %eax,0x10(%ebp)
c0003624:	90                   	nop
c0003625:	83 c4 04             	add    $0x4,%esp
c0003628:	5b                   	pop    %ebx
c0003629:	5e                   	pop    %esi
c000362a:	5d                   	pop    %ebp
c000362b:	c3                   	ret    

c000362c <inb>:
c000362c:	55                   	push   %ebp
c000362d:	89 e5                	mov    %esp,%ebp
c000362f:	83 ec 14             	sub    $0x14,%esp
c0003632:	e8 99 df ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003637:	05 c9 39 00 00       	add    $0x39c9,%eax
c000363c:	8b 45 08             	mov    0x8(%ebp),%eax
c000363f:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0003643:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c0003647:	89 c2                	mov    %eax,%edx
c0003649:	ec                   	in     (%dx),%al
c000364a:	88 45 ff             	mov    %al,-0x1(%ebp)
c000364d:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c0003651:	c9                   	leave  
c0003652:	c3                   	ret    

c0003653 <insw>:
c0003653:	55                   	push   %ebp
c0003654:	89 e5                	mov    %esp,%ebp
c0003656:	57                   	push   %edi
c0003657:	53                   	push   %ebx
c0003658:	83 ec 04             	sub    $0x4,%esp
c000365b:	e8 70 df ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003660:	05 a0 39 00 00       	add    $0x39a0,%eax
c0003665:	8b 45 08             	mov    0x8(%ebp),%eax
c0003668:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c000366c:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0003670:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0003673:	8b 45 10             	mov    0x10(%ebp),%eax
c0003676:	89 cb                	mov    %ecx,%ebx
c0003678:	89 df                	mov    %ebx,%edi
c000367a:	89 c1                	mov    %eax,%ecx
c000367c:	fc                   	cld    
c000367d:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0003680:	89 c8                	mov    %ecx,%eax
c0003682:	89 fb                	mov    %edi,%ebx
c0003684:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003687:	89 45 10             	mov    %eax,0x10(%ebp)
c000368a:	90                   	nop
c000368b:	83 c4 04             	add    $0x4,%esp
c000368e:	5b                   	pop    %ebx
c000368f:	5f                   	pop    %edi
c0003690:	5d                   	pop    %ebp
c0003691:	c3                   	ret    

c0003692 <frequency_set>:
c0003692:	55                   	push   %ebp
c0003693:	89 e5                	mov    %esp,%ebp
c0003695:	57                   	push   %edi
c0003696:	56                   	push   %esi
c0003697:	53                   	push   %ebx
c0003698:	83 ec 14             	sub    $0x14,%esp
c000369b:	e8 30 df ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00036a0:	05 60 39 00 00       	add    $0x3960,%eax
c00036a5:	8b 75 08             	mov    0x8(%ebp),%esi
c00036a8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
c00036ab:	8b 4d 10             	mov    0x10(%ebp),%ecx
c00036ae:	8b 55 14             	mov    0x14(%ebp),%edx
c00036b1:	8b 7d 18             	mov    0x18(%ebp),%edi
c00036b4:	89 f0                	mov    %esi,%eax
c00036b6:	88 45 f0             	mov    %al,-0x10(%ebp)
c00036b9:	88 5d ec             	mov    %bl,-0x14(%ebp)
c00036bc:	88 4d e8             	mov    %cl,-0x18(%ebp)
c00036bf:	88 55 e4             	mov    %dl,-0x1c(%ebp)
c00036c2:	89 f8                	mov    %edi,%eax
c00036c4:	66 89 45 e0          	mov    %ax,-0x20(%ebp)
c00036c8:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
c00036cc:	c1 e0 06             	shl    $0x6,%eax
c00036cf:	89 c2                	mov    %eax,%edx
c00036d1:	0f b6 45 e8          	movzbl -0x18(%ebp),%eax
c00036d5:	c1 e0 04             	shl    $0x4,%eax
c00036d8:	09 c2                	or     %eax,%edx
c00036da:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
c00036de:	01 c0                	add    %eax,%eax
c00036e0:	09 d0                	or     %edx,%eax
c00036e2:	0f b6 c0             	movzbl %al,%eax
c00036e5:	50                   	push   %eax
c00036e6:	6a 43                	push   $0x43
c00036e8:	e8 d7 fe ff ff       	call   c00035c4 <outb>
c00036ed:	83 c4 08             	add    $0x8,%esp
c00036f0:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
c00036f4:	0f b6 d0             	movzbl %al,%edx
c00036f7:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c00036fb:	52                   	push   %edx
c00036fc:	50                   	push   %eax
c00036fd:	e8 c2 fe ff ff       	call   c00035c4 <outb>
c0003702:	83 c4 08             	add    $0x8,%esp
c0003705:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
c0003709:	0f b6 c0             	movzbl %al,%eax
c000370c:	c1 f8 08             	sar    $0x8,%eax
c000370f:	0f b6 d0             	movzbl %al,%edx
c0003712:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c0003716:	52                   	push   %edx
c0003717:	50                   	push   %eax
c0003718:	e8 a7 fe ff ff       	call   c00035c4 <outb>
c000371d:	83 c4 08             	add    $0x8,%esp
c0003720:	90                   	nop
c0003721:	8d 65 f4             	lea    -0xc(%ebp),%esp
c0003724:	5b                   	pop    %ebx
c0003725:	5e                   	pop    %esi
c0003726:	5f                   	pop    %edi
c0003727:	5d                   	pop    %ebp
c0003728:	c3                   	ret    

c0003729 <timer_init>:
c0003729:	55                   	push   %ebp
c000372a:	89 e5                	mov    %esp,%ebp
c000372c:	53                   	push   %ebx
c000372d:	83 ec 04             	sub    $0x4,%esp
c0003730:	e8 9f de ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003735:	81 c3 cb 38 00 00    	add    $0x38cb,%ebx
c000373b:	68 4d 17 00 00       	push   $0x174d
c0003740:	6a 02                	push   $0x2
c0003742:	6a 03                	push   $0x3
c0003744:	6a 00                	push   $0x0
c0003746:	6a 40                	push   $0x40
c0003748:	e8 45 ff ff ff       	call   c0003692 <frequency_set>
c000374d:	83 c4 14             	add    $0x14,%esp
c0003750:	83 ec 08             	sub    $0x8,%esp
c0003753:	8d 83 6a c7 ff ff    	lea    -0x3896(%ebx),%eax
c0003759:	50                   	push   %eax
c000375a:	6a 20                	push   $0x20
c000375c:	e8 99 eb ff ff       	call   c00022fa <register_handler>
c0003761:	83 c4 10             	add    $0x10,%esp
c0003764:	90                   	nop
c0003765:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003768:	c9                   	leave  
c0003769:	c3                   	ret    

c000376a <intr_timer_handler>:
c000376a:	55                   	push   %ebp
c000376b:	89 e5                	mov    %esp,%ebp
c000376d:	53                   	push   %ebx
c000376e:	83 ec 14             	sub    $0x14,%esp
c0003771:	e8 5e de ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003776:	81 c3 8a 38 00 00    	add    $0x388a,%ebx
c000377c:	e8 cf f5 ff ff       	call   c0002d50 <running_thread>
c0003781:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003784:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003787:	c7 40 38 06 07 92 19 	movl   $0x19920706,0x38(%eax)
c000378e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003791:	8b 40 20             	mov    0x20(%eax),%eax
c0003794:	8d 50 01             	lea    0x1(%eax),%edx
c0003797:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000379a:	89 50 20             	mov    %edx,0x20(%eax)
c000379d:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00037a0:	8b 40 1c             	mov    0x1c(%eax),%eax
c00037a3:	85 c0                	test   %eax,%eax
c00037a5:	75 07                	jne    c00037ae <intr_timer_handler+0x44>
c00037a7:	e8 58 f8 ff ff       	call   c0003004 <sched>
c00037ac:	eb 0f                	jmp    c00037bd <intr_timer_handler+0x53>
c00037ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00037b1:	8b 40 1c             	mov    0x1c(%eax),%eax
c00037b4:	8d 50 ff             	lea    -0x1(%eax),%edx
c00037b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00037ba:	89 50 1c             	mov    %edx,0x1c(%eax)
c00037bd:	90                   	nop
c00037be:	83 c4 14             	add    $0x14,%esp
c00037c1:	5b                   	pop    %ebx
c00037c2:	5d                   	pop    %ebp
c00037c3:	c3                   	ret    

c00037c4 <console_init>:
c00037c4:	55                   	push   %ebp
c00037c5:	89 e5                	mov    %esp,%ebp
c00037c7:	53                   	push   %ebx
c00037c8:	83 ec 04             	sub    $0x4,%esp
c00037cb:	e8 00 de ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00037d0:	05 30 38 00 00       	add    $0x3830,%eax
c00037d5:	83 ec 0c             	sub    $0xc,%esp
c00037d8:	8d 90 00 03 00 00    	lea    0x300(%eax),%edx
c00037de:	52                   	push   %edx
c00037df:	89 c3                	mov    %eax,%ebx
c00037e1:	e8 cf f9 ff ff       	call   c00031b5 <init_lock>
c00037e6:	83 c4 10             	add    $0x10,%esp
c00037e9:	90                   	nop
c00037ea:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00037ed:	c9                   	leave  
c00037ee:	c3                   	ret    

c00037ef <console_put_char>:
c00037ef:	55                   	push   %ebp
c00037f0:	89 e5                	mov    %esp,%ebp
c00037f2:	53                   	push   %ebx
c00037f3:	83 ec 14             	sub    $0x14,%esp
c00037f6:	e8 d9 dd ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00037fb:	81 c3 05 38 00 00    	add    $0x3805,%ebx
c0003801:	8b 45 08             	mov    0x8(%ebp),%eax
c0003804:	88 45 f4             	mov    %al,-0xc(%ebp)
c0003807:	83 ec 0c             	sub    $0xc,%esp
c000380a:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c0003810:	50                   	push   %eax
c0003811:	e8 d3 f9 ff ff       	call   c00031e9 <acquire_lock>
c0003816:	83 c4 10             	add    $0x10,%esp
c0003819:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
c000381d:	83 ec 0c             	sub    $0xc,%esp
c0003820:	50                   	push   %eax
c0003821:	e8 ba dd ff ff       	call   c00015e0 <put_char>
c0003826:	83 c4 10             	add    $0x10,%esp
c0003829:	83 ec 0c             	sub    $0xc,%esp
c000382c:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c0003832:	50                   	push   %eax
c0003833:	e8 22 fa ff ff       	call   c000325a <release_lock>
c0003838:	83 c4 10             	add    $0x10,%esp
c000383b:	90                   	nop
c000383c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000383f:	c9                   	leave  
c0003840:	c3                   	ret    

c0003841 <console_put_str>:
c0003841:	55                   	push   %ebp
c0003842:	89 e5                	mov    %esp,%ebp
c0003844:	53                   	push   %ebx
c0003845:	83 ec 04             	sub    $0x4,%esp
c0003848:	e8 87 dd ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c000384d:	81 c3 b3 37 00 00    	add    $0x37b3,%ebx
c0003853:	83 ec 0c             	sub    $0xc,%esp
c0003856:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c000385c:	50                   	push   %eax
c000385d:	e8 87 f9 ff ff       	call   c00031e9 <acquire_lock>
c0003862:	83 c4 10             	add    $0x10,%esp
c0003865:	83 ec 0c             	sub    $0xc,%esp
c0003868:	ff 75 08             	pushl  0x8(%ebp)
c000386b:	e8 64 de ff ff       	call   c00016d4 <put_str>
c0003870:	83 c4 10             	add    $0x10,%esp
c0003873:	83 ec 0c             	sub    $0xc,%esp
c0003876:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c000387c:	50                   	push   %eax
c000387d:	e8 d8 f9 ff ff       	call   c000325a <release_lock>
c0003882:	83 c4 10             	add    $0x10,%esp
c0003885:	90                   	nop
c0003886:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003889:	c9                   	leave  
c000388a:	c3                   	ret    

c000388b <console_put_int>:
c000388b:	55                   	push   %ebp
c000388c:	89 e5                	mov    %esp,%ebp
c000388e:	53                   	push   %ebx
c000388f:	83 ec 04             	sub    $0x4,%esp
c0003892:	e8 3d dd ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003897:	81 c3 69 37 00 00    	add    $0x3769,%ebx
c000389d:	83 ec 0c             	sub    $0xc,%esp
c00038a0:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c00038a6:	50                   	push   %eax
c00038a7:	e8 3d f9 ff ff       	call   c00031e9 <acquire_lock>
c00038ac:	83 c4 10             	add    $0x10,%esp
c00038af:	83 ec 0c             	sub    $0xc,%esp
c00038b2:	ff 75 08             	pushl  0x8(%ebp)
c00038b5:	e8 5d de ff ff       	call   c0001717 <put_int>
c00038ba:	83 c4 10             	add    $0x10,%esp
c00038bd:	83 ec 0c             	sub    $0xc,%esp
c00038c0:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c00038c6:	50                   	push   %eax
c00038c7:	e8 8e f9 ff ff       	call   c000325a <release_lock>
c00038cc:	83 c4 10             	add    $0x10,%esp
c00038cf:	90                   	nop
c00038d0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00038d3:	c9                   	leave  
c00038d4:	c3                   	ret    

c00038d5 <outb>:
c00038d5:	55                   	push   %ebp
c00038d6:	89 e5                	mov    %esp,%ebp
c00038d8:	83 ec 08             	sub    $0x8,%esp
c00038db:	e8 f0 dc ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00038e0:	05 20 37 00 00       	add    $0x3720,%eax
c00038e5:	8b 55 08             	mov    0x8(%ebp),%edx
c00038e8:	8b 45 0c             	mov    0xc(%ebp),%eax
c00038eb:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c00038ef:	88 45 f8             	mov    %al,-0x8(%ebp)
c00038f2:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c00038f6:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c00038fa:	ee                   	out    %al,(%dx)
c00038fb:	90                   	nop
c00038fc:	c9                   	leave  
c00038fd:	c3                   	ret    

c00038fe <outsw>:
c00038fe:	55                   	push   %ebp
c00038ff:	89 e5                	mov    %esp,%ebp
c0003901:	56                   	push   %esi
c0003902:	53                   	push   %ebx
c0003903:	83 ec 04             	sub    $0x4,%esp
c0003906:	e8 c5 dc ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c000390b:	05 f5 36 00 00       	add    $0x36f5,%eax
c0003910:	8b 45 08             	mov    0x8(%ebp),%eax
c0003913:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0003917:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c000391b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c000391e:	8b 45 10             	mov    0x10(%ebp),%eax
c0003921:	89 cb                	mov    %ecx,%ebx
c0003923:	89 de                	mov    %ebx,%esi
c0003925:	89 c1                	mov    %eax,%ecx
c0003927:	fc                   	cld    
c0003928:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c000392b:	89 c8                	mov    %ecx,%eax
c000392d:	89 f3                	mov    %esi,%ebx
c000392f:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003932:	89 45 10             	mov    %eax,0x10(%ebp)
c0003935:	90                   	nop
c0003936:	83 c4 04             	add    $0x4,%esp
c0003939:	5b                   	pop    %ebx
c000393a:	5e                   	pop    %esi
c000393b:	5d                   	pop    %ebp
c000393c:	c3                   	ret    

c000393d <inb>:
c000393d:	55                   	push   %ebp
c000393e:	89 e5                	mov    %esp,%ebp
c0003940:	83 ec 14             	sub    $0x14,%esp
c0003943:	e8 88 dc ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003948:	05 b8 36 00 00       	add    $0x36b8,%eax
c000394d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003950:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0003954:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c0003958:	89 c2                	mov    %eax,%edx
c000395a:	ec                   	in     (%dx),%al
c000395b:	88 45 ff             	mov    %al,-0x1(%ebp)
c000395e:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c0003962:	c9                   	leave  
c0003963:	c3                   	ret    

c0003964 <insw>:
c0003964:	55                   	push   %ebp
c0003965:	89 e5                	mov    %esp,%ebp
c0003967:	57                   	push   %edi
c0003968:	53                   	push   %ebx
c0003969:	83 ec 04             	sub    $0x4,%esp
c000396c:	e8 5f dc ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003971:	05 8f 36 00 00       	add    $0x368f,%eax
c0003976:	8b 45 08             	mov    0x8(%ebp),%eax
c0003979:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c000397d:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0003981:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0003984:	8b 45 10             	mov    0x10(%ebp),%eax
c0003987:	89 cb                	mov    %ecx,%ebx
c0003989:	89 df                	mov    %ebx,%edi
c000398b:	89 c1                	mov    %eax,%ecx
c000398d:	fc                   	cld    
c000398e:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0003991:	89 c8                	mov    %ecx,%eax
c0003993:	89 fb                	mov    %edi,%ebx
c0003995:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003998:	89 45 10             	mov    %eax,0x10(%ebp)
c000399b:	90                   	nop
c000399c:	83 c4 04             	add    $0x4,%esp
c000399f:	5b                   	pop    %ebx
c00039a0:	5f                   	pop    %edi
c00039a1:	5d                   	pop    %ebp
c00039a2:	c3                   	ret    

c00039a3 <intr_keyboard_handler>:
c00039a3:	55                   	push   %ebp
c00039a4:	89 e5                	mov    %esp,%ebp
c00039a6:	53                   	push   %ebx
c00039a7:	83 ec 14             	sub    $0x14,%esp
c00039aa:	e8 25 dc ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00039af:	81 c3 51 36 00 00    	add    $0x3651,%ebx
c00039b5:	0f b6 83 14 03 00 00 	movzbl 0x314(%ebx),%eax
c00039bc:	88 45 f4             	mov    %al,-0xc(%ebp)
c00039bf:	0f b6 83 15 03 00 00 	movzbl 0x315(%ebx),%eax
c00039c6:	88 45 f3             	mov    %al,-0xd(%ebp)
c00039c9:	0f b6 83 17 03 00 00 	movzbl 0x317(%ebx),%eax
c00039d0:	88 45 f2             	mov    %al,-0xe(%ebp)
c00039d3:	6a 60                	push   $0x60
c00039d5:	e8 63 ff ff ff       	call   c000393d <inb>
c00039da:	83 c4 04             	add    $0x4,%esp
c00039dd:	0f b6 c0             	movzbl %al,%eax
c00039e0:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
c00039e4:	66 81 7d f6 e0 00    	cmpw   $0xe0,-0xa(%ebp)
c00039ea:	75 0c                	jne    c00039f8 <intr_keyboard_handler+0x55>
c00039ec:	c6 83 18 03 00 00 01 	movb   $0x1,0x318(%ebx)
c00039f3:	e9 02 02 00 00       	jmp    c0003bfa <intr_keyboard_handler+0x257>
c00039f8:	0f b6 83 18 03 00 00 	movzbl 0x318(%ebx),%eax
c00039ff:	3c 01                	cmp    $0x1,%al
c0003a01:	75 0d                	jne    c0003a10 <intr_keyboard_handler+0x6d>
c0003a03:	66 81 4d f6 00 e0    	orw    $0xe000,-0xa(%ebp)
c0003a09:	c6 83 18 03 00 00 00 	movb   $0x0,0x318(%ebx)
c0003a10:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
c0003a14:	83 e0 80             	and    $0xffffff80,%eax
c0003a17:	88 45 f1             	mov    %al,-0xf(%ebp)
c0003a1a:	80 7d f1 00          	cmpb   $0x0,-0xf(%ebp)
c0003a1e:	74 61                	je     c0003a81 <intr_keyboard_handler+0xde>
c0003a20:	66 81 65 f6 7f ff    	andw   $0xff7f,-0xa(%ebp)
c0003a26:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
c0003a2a:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0003a2e:	66 83 7d ec 1d       	cmpw   $0x1d,-0x14(%ebp)
c0003a33:	74 08                	je     c0003a3d <intr_keyboard_handler+0x9a>
c0003a35:	66 81 7d ec 1d e0    	cmpw   $0xe01d,-0x14(%ebp)
c0003a3b:	75 09                	jne    c0003a46 <intr_keyboard_handler+0xa3>
c0003a3d:	c6 83 14 03 00 00 00 	movb   $0x0,0x314(%ebx)
c0003a44:	eb 36                	jmp    c0003a7c <intr_keyboard_handler+0xd9>
c0003a46:	66 83 7d ec 2a       	cmpw   $0x2a,-0x14(%ebp)
c0003a4b:	74 07                	je     c0003a54 <intr_keyboard_handler+0xb1>
c0003a4d:	66 83 7d ec 36       	cmpw   $0x36,-0x14(%ebp)
c0003a52:	75 09                	jne    c0003a5d <intr_keyboard_handler+0xba>
c0003a54:	c6 83 15 03 00 00 00 	movb   $0x0,0x315(%ebx)
c0003a5b:	eb 1f                	jmp    c0003a7c <intr_keyboard_handler+0xd9>
c0003a5d:	66 83 7d ec 38       	cmpw   $0x38,-0x14(%ebp)
c0003a62:	74 0c                	je     c0003a70 <intr_keyboard_handler+0xcd>
c0003a64:	66 81 7d ec 38 e0    	cmpw   $0xe038,-0x14(%ebp)
c0003a6a:	0f 85 83 01 00 00    	jne    c0003bf3 <intr_keyboard_handler+0x250>
c0003a70:	c6 83 16 03 00 00 00 	movb   $0x0,0x316(%ebx)
c0003a77:	e9 77 01 00 00       	jmp    c0003bf3 <intr_keyboard_handler+0x250>
c0003a7c:	e9 72 01 00 00       	jmp    c0003bf3 <intr_keyboard_handler+0x250>
c0003a81:	66 83 7d f6 00       	cmpw   $0x0,-0xa(%ebp)
c0003a86:	74 07                	je     c0003a8f <intr_keyboard_handler+0xec>
c0003a88:	66 83 7d f6 3a       	cmpw   $0x3a,-0xa(%ebp)
c0003a8d:	76 14                	jbe    c0003aa3 <intr_keyboard_handler+0x100>
c0003a8f:	66 81 7d f6 38 e0    	cmpw   $0xe038,-0xa(%ebp)
c0003a95:	74 0c                	je     c0003aa3 <intr_keyboard_handler+0x100>
c0003a97:	66 81 7d f6 1d e0    	cmpw   $0xe01d,-0xa(%ebp)
c0003a9d:	0f 85 3c 01 00 00    	jne    c0003bdf <intr_keyboard_handler+0x23c>
c0003aa3:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)
c0003aa7:	66 83 7d f6 0d       	cmpw   $0xd,-0xa(%ebp)
c0003aac:	76 3f                	jbe    c0003aed <intr_keyboard_handler+0x14a>
c0003aae:	66 83 7d f6 29       	cmpw   $0x29,-0xa(%ebp)
c0003ab3:	74 38                	je     c0003aed <intr_keyboard_handler+0x14a>
c0003ab5:	66 83 7d f6 1a       	cmpw   $0x1a,-0xa(%ebp)
c0003aba:	74 31                	je     c0003aed <intr_keyboard_handler+0x14a>
c0003abc:	66 83 7d f6 1b       	cmpw   $0x1b,-0xa(%ebp)
c0003ac1:	74 2a                	je     c0003aed <intr_keyboard_handler+0x14a>
c0003ac3:	66 83 7d f6 2b       	cmpw   $0x2b,-0xa(%ebp)
c0003ac8:	74 23                	je     c0003aed <intr_keyboard_handler+0x14a>
c0003aca:	66 83 7d f6 27       	cmpw   $0x27,-0xa(%ebp)
c0003acf:	74 1c                	je     c0003aed <intr_keyboard_handler+0x14a>
c0003ad1:	66 83 7d f6 28       	cmpw   $0x28,-0xa(%ebp)
c0003ad6:	74 15                	je     c0003aed <intr_keyboard_handler+0x14a>
c0003ad8:	66 83 7d f6 33       	cmpw   $0x33,-0xa(%ebp)
c0003add:	74 0e                	je     c0003aed <intr_keyboard_handler+0x14a>
c0003adf:	66 83 7d f6 34       	cmpw   $0x34,-0xa(%ebp)
c0003ae4:	74 07                	je     c0003aed <intr_keyboard_handler+0x14a>
c0003ae6:	66 83 7d f6 35       	cmpw   $0x35,-0xa(%ebp)
c0003aeb:	75 0c                	jne    c0003af9 <intr_keyboard_handler+0x156>
c0003aed:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
c0003af1:	74 2e                	je     c0003b21 <intr_keyboard_handler+0x17e>
c0003af3:	c6 45 f5 01          	movb   $0x1,-0xb(%ebp)
c0003af7:	eb 28                	jmp    c0003b21 <intr_keyboard_handler+0x17e>
c0003af9:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
c0003afd:	74 0c                	je     c0003b0b <intr_keyboard_handler+0x168>
c0003aff:	80 7d f2 00          	cmpb   $0x0,-0xe(%ebp)
c0003b03:	74 06                	je     c0003b0b <intr_keyboard_handler+0x168>
c0003b05:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)
c0003b09:	eb 16                	jmp    c0003b21 <intr_keyboard_handler+0x17e>
c0003b0b:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
c0003b0f:	75 06                	jne    c0003b17 <intr_keyboard_handler+0x174>
c0003b11:	80 7d f2 00          	cmpb   $0x0,-0xe(%ebp)
c0003b15:	74 06                	je     c0003b1d <intr_keyboard_handler+0x17a>
c0003b17:	c6 45 f5 01          	movb   $0x1,-0xb(%ebp)
c0003b1b:	eb 04                	jmp    c0003b21 <intr_keyboard_handler+0x17e>
c0003b1d:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)
c0003b21:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
c0003b25:	88 45 f0             	mov    %al,-0x10(%ebp)
c0003b28:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c0003b2c:	0f b6 4d f5          	movzbl -0xb(%ebp),%ecx
c0003b30:	8d 93 00 01 00 00    	lea    0x100(%ebx),%edx
c0003b36:	01 c0                	add    %eax,%eax
c0003b38:	01 c8                	add    %ecx,%eax
c0003b3a:	01 d0                	add    %edx,%eax
c0003b3c:	0f b6 00             	movzbl (%eax),%eax
c0003b3f:	88 45 ef             	mov    %al,-0x11(%ebp)
c0003b42:	80 7d ef 00          	cmpb   $0x0,-0x11(%ebp)
c0003b46:	74 33                	je     c0003b7b <intr_keyboard_handler+0x1d8>
c0003b48:	83 ec 0c             	sub    $0xc,%esp
c0003b4b:	c7 c0 e0 75 00 c0    	mov    $0xc00075e0,%eax
c0003b51:	50                   	push   %eax
c0003b52:	e8 93 01 00 00       	call   c0003cea <full_ioqueue>
c0003b57:	83 c4 10             	add    $0x10,%esp
c0003b5a:	84 c0                	test   %al,%al
c0003b5c:	0f 85 94 00 00 00    	jne    c0003bf6 <intr_keyboard_handler+0x253>
c0003b62:	0f be 45 ef          	movsbl -0x11(%ebp),%eax
c0003b66:	83 ec 08             	sub    $0x8,%esp
c0003b69:	50                   	push   %eax
c0003b6a:	c7 c0 e0 75 00 c0    	mov    $0xc00075e0,%eax
c0003b70:	50                   	push   %eax
c0003b71:	e8 bf 01 00 00       	call   c0003d35 <ioq_put_char>
c0003b76:	83 c4 10             	add    $0x10,%esp
c0003b79:	eb 7b                	jmp    c0003bf6 <intr_keyboard_handler+0x253>
c0003b7b:	66 83 7d f6 1d       	cmpw   $0x1d,-0xa(%ebp)
c0003b80:	74 08                	je     c0003b8a <intr_keyboard_handler+0x1e7>
c0003b82:	66 81 7d f6 1d e0    	cmpw   $0xe01d,-0xa(%ebp)
c0003b88:	75 09                	jne    c0003b93 <intr_keyboard_handler+0x1f0>
c0003b8a:	c6 83 14 03 00 00 01 	movb   $0x1,0x314(%ebx)
c0003b91:	eb 4a                	jmp    c0003bdd <intr_keyboard_handler+0x23a>
c0003b93:	66 83 7d f6 2a       	cmpw   $0x2a,-0xa(%ebp)
c0003b98:	74 07                	je     c0003ba1 <intr_keyboard_handler+0x1fe>
c0003b9a:	66 83 7d f6 36       	cmpw   $0x36,-0xa(%ebp)
c0003b9f:	75 09                	jne    c0003baa <intr_keyboard_handler+0x207>
c0003ba1:	c6 83 15 03 00 00 01 	movb   $0x1,0x315(%ebx)
c0003ba8:	eb 33                	jmp    c0003bdd <intr_keyboard_handler+0x23a>
c0003baa:	66 83 7d f6 38       	cmpw   $0x38,-0xa(%ebp)
c0003baf:	74 08                	je     c0003bb9 <intr_keyboard_handler+0x216>
c0003bb1:	66 81 7d f6 38 e0    	cmpw   $0xe038,-0xa(%ebp)
c0003bb7:	75 09                	jne    c0003bc2 <intr_keyboard_handler+0x21f>
c0003bb9:	c6 83 16 03 00 00 01 	movb   $0x1,0x316(%ebx)
c0003bc0:	eb 1b                	jmp    c0003bdd <intr_keyboard_handler+0x23a>
c0003bc2:	66 83 7d f6 3a       	cmpw   $0x3a,-0xa(%ebp)
c0003bc7:	75 30                	jne    c0003bf9 <intr_keyboard_handler+0x256>
c0003bc9:	0f b6 83 17 03 00 00 	movzbl 0x317(%ebx),%eax
c0003bd0:	84 c0                	test   %al,%al
c0003bd2:	0f 94 c0             	sete   %al
c0003bd5:	88 83 17 03 00 00    	mov    %al,0x317(%ebx)
c0003bdb:	eb 1c                	jmp    c0003bf9 <intr_keyboard_handler+0x256>
c0003bdd:	eb 1a                	jmp    c0003bf9 <intr_keyboard_handler+0x256>
c0003bdf:	83 ec 0c             	sub    $0xc,%esp
c0003be2:	8d 83 55 d6 ff ff    	lea    -0x29ab(%ebx),%eax
c0003be8:	50                   	push   %eax
c0003be9:	e8 e6 da ff ff       	call   c00016d4 <put_str>
c0003bee:	83 c4 10             	add    $0x10,%esp
c0003bf1:	eb 07                	jmp    c0003bfa <intr_keyboard_handler+0x257>
c0003bf3:	90                   	nop
c0003bf4:	eb 04                	jmp    c0003bfa <intr_keyboard_handler+0x257>
c0003bf6:	90                   	nop
c0003bf7:	eb 01                	jmp    c0003bfa <intr_keyboard_handler+0x257>
c0003bf9:	90                   	nop
c0003bfa:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003bfd:	c9                   	leave  
c0003bfe:	c3                   	ret    

c0003bff <intr_kbd_handler>:
c0003bff:	55                   	push   %ebp
c0003c00:	89 e5                	mov    %esp,%ebp
c0003c02:	53                   	push   %ebx
c0003c03:	83 ec 04             	sub    $0x4,%esp
c0003c06:	e8 c5 d9 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003c0b:	05 f5 33 00 00       	add    $0x33f5,%eax
c0003c10:	83 ec 0c             	sub    $0xc,%esp
c0003c13:	6a 6b                	push   $0x6b
c0003c15:	89 c3                	mov    %eax,%ebx
c0003c17:	e8 c4 d9 ff ff       	call   c00015e0 <put_char>
c0003c1c:	83 c4 10             	add    $0x10,%esp
c0003c1f:	83 ec 0c             	sub    $0xc,%esp
c0003c22:	6a 60                	push   $0x60
c0003c24:	e8 14 fd ff ff       	call   c000393d <inb>
c0003c29:	83 c4 10             	add    $0x10,%esp
c0003c2c:	90                   	nop
c0003c2d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003c30:	c9                   	leave  
c0003c31:	c3                   	ret    

c0003c32 <keyboard_init>:
c0003c32:	55                   	push   %ebp
c0003c33:	89 e5                	mov    %esp,%ebp
c0003c35:	53                   	push   %ebx
c0003c36:	83 ec 04             	sub    $0x4,%esp
c0003c39:	e8 96 d9 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003c3e:	81 c3 c2 33 00 00    	add    $0x33c2,%ebx
c0003c44:	83 ec 0c             	sub    $0xc,%esp
c0003c47:	c7 c0 e0 75 00 c0    	mov    $0xc00075e0,%eax
c0003c4d:	50                   	push   %eax
c0003c4e:	e8 2f 00 00 00       	call   c0003c82 <init_ioqueue>
c0003c53:	83 c4 10             	add    $0x10,%esp
c0003c56:	83 ec 08             	sub    $0x8,%esp
c0003c59:	8d 83 a3 c9 ff ff    	lea    -0x365d(%ebx),%eax
c0003c5f:	50                   	push   %eax
c0003c60:	6a 21                	push   $0x21
c0003c62:	e8 93 e6 ff ff       	call   c00022fa <register_handler>
c0003c67:	83 c4 10             	add    $0x10,%esp
c0003c6a:	83 ec 0c             	sub    $0xc,%esp
c0003c6d:	8d 83 63 d6 ff ff    	lea    -0x299d(%ebx),%eax
c0003c73:	50                   	push   %eax
c0003c74:	e8 5b da ff ff       	call   c00016d4 <put_str>
c0003c79:	83 c4 10             	add    $0x10,%esp
c0003c7c:	90                   	nop
c0003c7d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003c80:	c9                   	leave  
c0003c81:	c3                   	ret    

c0003c82 <init_ioqueue>:
c0003c82:	55                   	push   %ebp
c0003c83:	89 e5                	mov    %esp,%ebp
c0003c85:	53                   	push   %ebx
c0003c86:	83 ec 04             	sub    $0x4,%esp
c0003c89:	e8 42 d9 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003c8e:	05 72 33 00 00       	add    $0x3372,%eax
c0003c93:	8b 55 08             	mov    0x8(%ebp),%edx
c0003c96:	83 ec 0c             	sub    $0xc,%esp
c0003c99:	52                   	push   %edx
c0003c9a:	89 c3                	mov    %eax,%ebx
c0003c9c:	e8 14 f5 ff ff       	call   c00031b5 <init_lock>
c0003ca1:	83 c4 10             	add    $0x10,%esp
c0003ca4:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ca7:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
c0003cae:	8b 45 08             	mov    0x8(%ebp),%eax
c0003cb1:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
c0003cb8:	8b 45 08             	mov    0x8(%ebp),%eax
c0003cbb:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%eax)
c0003cc2:	8b 45 08             	mov    0x8(%ebp),%eax
c0003cc5:	c7 40 60 00 00 00 00 	movl   $0x0,0x60(%eax)
c0003ccc:	90                   	nop
c0003ccd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003cd0:	c9                   	leave  
c0003cd1:	c3                   	ret    

c0003cd2 <next_pos>:
c0003cd2:	55                   	push   %ebp
c0003cd3:	89 e5                	mov    %esp,%ebp
c0003cd5:	e8 f6 d8 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003cda:	05 26 33 00 00       	add    $0x3326,%eax
c0003cdf:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ce2:	83 c0 01             	add    $0x1,%eax
c0003ce5:	83 e0 3f             	and    $0x3f,%eax
c0003ce8:	5d                   	pop    %ebp
c0003ce9:	c3                   	ret    

c0003cea <full_ioqueue>:
c0003cea:	55                   	push   %ebp
c0003ceb:	89 e5                	mov    %esp,%ebp
c0003ced:	e8 de d8 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003cf2:	05 0e 33 00 00       	add    $0x330e,%eax
c0003cf7:	8b 45 08             	mov    0x8(%ebp),%eax
c0003cfa:	8b 40 60             	mov    0x60(%eax),%eax
c0003cfd:	50                   	push   %eax
c0003cfe:	e8 cf ff ff ff       	call   c0003cd2 <next_pos>
c0003d03:	83 c4 04             	add    $0x4,%esp
c0003d06:	89 c2                	mov    %eax,%edx
c0003d08:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d0b:	8b 40 5c             	mov    0x5c(%eax),%eax
c0003d0e:	39 c2                	cmp    %eax,%edx
c0003d10:	0f 94 c0             	sete   %al
c0003d13:	c9                   	leave  
c0003d14:	c3                   	ret    

c0003d15 <empty_ioqueue>:
c0003d15:	55                   	push   %ebp
c0003d16:	89 e5                	mov    %esp,%ebp
c0003d18:	e8 b3 d8 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003d1d:	05 e3 32 00 00       	add    $0x32e3,%eax
c0003d22:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d25:	8b 50 5c             	mov    0x5c(%eax),%edx
c0003d28:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d2b:	8b 40 60             	mov    0x60(%eax),%eax
c0003d2e:	39 c2                	cmp    %eax,%edx
c0003d30:	0f 94 c0             	sete   %al
c0003d33:	5d                   	pop    %ebp
c0003d34:	c3                   	ret    

c0003d35 <ioq_put_char>:
c0003d35:	55                   	push   %ebp
c0003d36:	89 e5                	mov    %esp,%ebp
c0003d38:	53                   	push   %ebx
c0003d39:	83 ec 14             	sub    $0x14,%esp
c0003d3c:	e8 93 d8 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003d41:	81 c3 bf 32 00 00    	add    $0x32bf,%ebx
c0003d47:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003d4a:	88 45 f4             	mov    %al,-0xc(%ebp)
c0003d4d:	e8 72 e5 ff ff       	call   c00022c4 <intr_status>
c0003d52:	85 c0                	test   %eax,%eax
c0003d54:	74 5e                	je     c0003db4 <ioq_put_char+0x7f>
c0003d56:	e8 3d e5 ff ff       	call   c0002298 <intclose>
c0003d5b:	83 ec 0c             	sub    $0xc,%esp
c0003d5e:	6a 0a                	push   $0xa
c0003d60:	e8 7b d8 ff ff       	call   c00015e0 <put_char>
c0003d65:	83 c4 10             	add    $0x10,%esp
c0003d68:	83 ec 0c             	sub    $0xc,%esp
c0003d6b:	8d 83 74 d6 ff ff    	lea    -0x298c(%ebx),%eax
c0003d71:	50                   	push   %eax
c0003d72:	e8 5d d9 ff ff       	call   c00016d4 <put_str>
c0003d77:	83 c4 10             	add    $0x10,%esp
c0003d7a:	eb fe                	jmp    c0003d7a <ioq_put_char+0x45>
c0003d7c:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d7f:	83 ec 0c             	sub    $0xc,%esp
c0003d82:	50                   	push   %eax
c0003d83:	e8 61 f4 ff ff       	call   c00031e9 <acquire_lock>
c0003d88:	83 c4 10             	add    $0x10,%esp
c0003d8b:	e8 c0 ef ff ff       	call   c0002d50 <running_thread>
c0003d90:	89 c2                	mov    %eax,%edx
c0003d92:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d95:	89 50 14             	mov    %edx,0x14(%eax)
c0003d98:	83 ec 0c             	sub    $0xc,%esp
c0003d9b:	6a 02                	push   $0x2
c0003d9d:	e8 5f f3 ff ff       	call   c0003101 <thread_block>
c0003da2:	83 c4 10             	add    $0x10,%esp
c0003da5:	8b 45 08             	mov    0x8(%ebp),%eax
c0003da8:	83 ec 0c             	sub    $0xc,%esp
c0003dab:	50                   	push   %eax
c0003dac:	e8 a9 f4 ff ff       	call   c000325a <release_lock>
c0003db1:	83 c4 10             	add    $0x10,%esp
c0003db4:	83 ec 0c             	sub    $0xc,%esp
c0003db7:	ff 75 08             	pushl  0x8(%ebp)
c0003dba:	e8 2b ff ff ff       	call   c0003cea <full_ioqueue>
c0003dbf:	83 c4 10             	add    $0x10,%esp
c0003dc2:	84 c0                	test   %al,%al
c0003dc4:	75 b6                	jne    c0003d7c <ioq_put_char+0x47>
c0003dc6:	8b 45 08             	mov    0x8(%ebp),%eax
c0003dc9:	8b 40 18             	mov    0x18(%eax),%eax
c0003dcc:	85 c0                	test   %eax,%eax
c0003dce:	74 1c                	je     c0003dec <ioq_put_char+0xb7>
c0003dd0:	8b 45 08             	mov    0x8(%ebp),%eax
c0003dd3:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
c0003dda:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ddd:	8b 40 18             	mov    0x18(%eax),%eax
c0003de0:	83 ec 0c             	sub    $0xc,%esp
c0003de3:	50                   	push   %eax
c0003de4:	e8 5f f3 ff ff       	call   c0003148 <thread_unblock>
c0003de9:	83 c4 10             	add    $0x10,%esp
c0003dec:	8b 45 08             	mov    0x8(%ebp),%eax
c0003def:	8b 40 60             	mov    0x60(%eax),%eax
c0003df2:	8b 55 08             	mov    0x8(%ebp),%edx
c0003df5:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx
c0003df9:	88 4c 02 1c          	mov    %cl,0x1c(%edx,%eax,1)
c0003dfd:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e00:	8b 40 60             	mov    0x60(%eax),%eax
c0003e03:	83 ec 0c             	sub    $0xc,%esp
c0003e06:	50                   	push   %eax
c0003e07:	e8 c6 fe ff ff       	call   c0003cd2 <next_pos>
c0003e0c:	83 c4 10             	add    $0x10,%esp
c0003e0f:	89 c2                	mov    %eax,%edx
c0003e11:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e14:	89 50 60             	mov    %edx,0x60(%eax)
c0003e17:	90                   	nop
c0003e18:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003e1b:	c9                   	leave  
c0003e1c:	c3                   	ret    

c0003e1d <ioq_get_char>:
c0003e1d:	55                   	push   %ebp
c0003e1e:	89 e5                	mov    %esp,%ebp
c0003e20:	53                   	push   %ebx
c0003e21:	83 ec 14             	sub    $0x14,%esp
c0003e24:	e8 ab d7 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003e29:	81 c3 d7 31 00 00    	add    $0x31d7,%ebx
c0003e2f:	e8 90 e4 ff ff       	call   c00022c4 <intr_status>
c0003e34:	85 c0                	test   %eax,%eax
c0003e36:	74 5e                	je     c0003e96 <ioq_get_char+0x79>
c0003e38:	e8 5b e4 ff ff       	call   c0002298 <intclose>
c0003e3d:	83 ec 0c             	sub    $0xc,%esp
c0003e40:	6a 0a                	push   $0xa
c0003e42:	e8 99 d7 ff ff       	call   c00015e0 <put_char>
c0003e47:	83 c4 10             	add    $0x10,%esp
c0003e4a:	83 ec 0c             	sub    $0xc,%esp
c0003e4d:	8d 83 74 d6 ff ff    	lea    -0x298c(%ebx),%eax
c0003e53:	50                   	push   %eax
c0003e54:	e8 7b d8 ff ff       	call   c00016d4 <put_str>
c0003e59:	83 c4 10             	add    $0x10,%esp
c0003e5c:	eb fe                	jmp    c0003e5c <ioq_get_char+0x3f>
c0003e5e:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e61:	83 ec 0c             	sub    $0xc,%esp
c0003e64:	50                   	push   %eax
c0003e65:	e8 7f f3 ff ff       	call   c00031e9 <acquire_lock>
c0003e6a:	83 c4 10             	add    $0x10,%esp
c0003e6d:	e8 de ee ff ff       	call   c0002d50 <running_thread>
c0003e72:	89 c2                	mov    %eax,%edx
c0003e74:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e77:	89 50 18             	mov    %edx,0x18(%eax)
c0003e7a:	83 ec 0c             	sub    $0xc,%esp
c0003e7d:	6a 02                	push   $0x2
c0003e7f:	e8 7d f2 ff ff       	call   c0003101 <thread_block>
c0003e84:	83 c4 10             	add    $0x10,%esp
c0003e87:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e8a:	83 ec 0c             	sub    $0xc,%esp
c0003e8d:	50                   	push   %eax
c0003e8e:	e8 c7 f3 ff ff       	call   c000325a <release_lock>
c0003e93:	83 c4 10             	add    $0x10,%esp
c0003e96:	83 ec 0c             	sub    $0xc,%esp
c0003e99:	ff 75 08             	pushl  0x8(%ebp)
c0003e9c:	e8 74 fe ff ff       	call   c0003d15 <empty_ioqueue>
c0003ea1:	83 c4 10             	add    $0x10,%esp
c0003ea4:	84 c0                	test   %al,%al
c0003ea6:	75 b6                	jne    c0003e5e <ioq_get_char+0x41>
c0003ea8:	8b 45 08             	mov    0x8(%ebp),%eax
c0003eab:	8b 40 14             	mov    0x14(%eax),%eax
c0003eae:	85 c0                	test   %eax,%eax
c0003eb0:	74 1c                	je     c0003ece <ioq_get_char+0xb1>
c0003eb2:	8b 45 08             	mov    0x8(%ebp),%eax
c0003eb5:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
c0003ebc:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ebf:	8b 40 14             	mov    0x14(%eax),%eax
c0003ec2:	83 ec 0c             	sub    $0xc,%esp
c0003ec5:	50                   	push   %eax
c0003ec6:	e8 7d f2 ff ff       	call   c0003148 <thread_unblock>
c0003ecb:	83 c4 10             	add    $0x10,%esp
c0003ece:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ed1:	8b 40 5c             	mov    0x5c(%eax),%eax
c0003ed4:	8b 55 08             	mov    0x8(%ebp),%edx
c0003ed7:	0f b6 44 02 1c       	movzbl 0x1c(%edx,%eax,1),%eax
c0003edc:	88 45 f7             	mov    %al,-0x9(%ebp)
c0003edf:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ee2:	8b 40 5c             	mov    0x5c(%eax),%eax
c0003ee5:	83 ec 0c             	sub    $0xc,%esp
c0003ee8:	50                   	push   %eax
c0003ee9:	e8 e4 fd ff ff       	call   c0003cd2 <next_pos>
c0003eee:	83 c4 10             	add    $0x10,%esp
c0003ef1:	89 c2                	mov    %eax,%edx
c0003ef3:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ef6:	89 50 5c             	mov    %edx,0x5c(%eax)
c0003ef9:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
c0003efd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003f00:	c9                   	leave  
c0003f01:	c3                   	ret    

c0003f02 <update_tss_esp>:
c0003f02:	55                   	push   %ebp
c0003f03:	89 e5                	mov    %esp,%ebp
c0003f05:	e8 c6 d6 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003f0a:	05 f6 30 00 00       	add    $0x30f6,%eax
c0003f0f:	8b 55 08             	mov    0x8(%ebp),%edx
c0003f12:	81 c2 00 10 00 00    	add    $0x1000,%edx
c0003f18:	89 90 24 03 00 00    	mov    %edx,0x324(%eax)
c0003f1e:	90                   	nop
c0003f1f:	5d                   	pop    %ebp
c0003f20:	c3                   	ret    

c0003f21 <make_gdt_desc>:
c0003f21:	55                   	push   %ebp
c0003f22:	89 e5                	mov    %esp,%ebp
c0003f24:	83 ec 18             	sub    $0x18,%esp
c0003f27:	e8 a4 d6 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c0003f2c:	05 d4 30 00 00       	add    $0x30d4,%eax
c0003f31:	8b 55 14             	mov    0x14(%ebp),%edx
c0003f34:	8b 45 18             	mov    0x18(%ebp),%eax
c0003f37:	88 55 ec             	mov    %dl,-0x14(%ebp)
c0003f3a:	88 45 e8             	mov    %al,-0x18(%ebp)
c0003f3d:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003f40:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0003f43:	8b 45 10             	mov    0x10(%ebp),%eax
c0003f46:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0003f4a:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0003f4d:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
c0003f51:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0003f54:	c1 e8 10             	shr    $0x10,%eax
c0003f57:	88 45 f8             	mov    %al,-0x8(%ebp)
c0003f5a:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
c0003f5e:	88 45 f9             	mov    %al,-0x7(%ebp)
c0003f61:	8b 45 10             	mov    0x10(%ebp),%eax
c0003f64:	c1 e8 10             	shr    $0x10,%eax
c0003f67:	83 e0 0f             	and    $0xf,%eax
c0003f6a:	89 c2                	mov    %eax,%edx
c0003f6c:	0f b6 45 e8          	movzbl -0x18(%ebp),%eax
c0003f70:	01 d0                	add    %edx,%eax
c0003f72:	88 45 fa             	mov    %al,-0x6(%ebp)
c0003f75:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0003f78:	c1 e8 18             	shr    $0x18,%eax
c0003f7b:	88 45 fb             	mov    %al,-0x5(%ebp)
c0003f7e:	8b 4d 08             	mov    0x8(%ebp),%ecx
c0003f81:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003f84:	8b 55 f8             	mov    -0x8(%ebp),%edx
c0003f87:	89 01                	mov    %eax,(%ecx)
c0003f89:	89 51 04             	mov    %edx,0x4(%ecx)
c0003f8c:	8b 45 08             	mov    0x8(%ebp),%eax
c0003f8f:	c9                   	leave  
c0003f90:	c2 04 00             	ret    $0x4

c0003f93 <tss_init>:
c0003f93:	55                   	push   %ebp
c0003f94:	89 e5                	mov    %esp,%ebp
c0003f96:	56                   	push   %esi
c0003f97:	53                   	push   %ebx
c0003f98:	83 ec 20             	sub    $0x20,%esp
c0003f9b:	e8 34 d6 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0003fa0:	81 c3 60 30 00 00    	add    $0x3060,%ebx
c0003fa6:	c7 45 f4 6c 00 00 00 	movl   $0x6c,-0xc(%ebp)
c0003fad:	83 ec 04             	sub    $0x4,%esp
c0003fb0:	ff 75 f4             	pushl  -0xc(%ebp)
c0003fb3:	6a 00                	push   $0x0
c0003fb5:	8d 83 20 03 00 00    	lea    0x320(%ebx),%eax
c0003fbb:	50                   	push   %eax
c0003fbc:	e8 50 eb ff ff       	call   c0002b11 <memset>
c0003fc1:	83 c4 10             	add    $0x10,%esp
c0003fc4:	c7 83 28 03 00 00 10 	movl   $0x10,0x328(%ebx)
c0003fcb:	00 00 00 
c0003fce:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003fd1:	89 83 88 03 00 00    	mov    %eax,0x388(%ebx)
c0003fd7:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003fda:	8d 50 ff             	lea    -0x1(%eax),%edx
c0003fdd:	be 23 09 00 c0       	mov    $0xc0000923,%esi
c0003fe2:	8d 45 e0             	lea    -0x20(%ebp),%eax
c0003fe5:	83 ec 0c             	sub    $0xc,%esp
c0003fe8:	68 80 00 00 00       	push   $0x80
c0003fed:	68 89 00 00 00       	push   $0x89
c0003ff2:	52                   	push   %edx
c0003ff3:	8d 93 20 03 00 00    	lea    0x320(%ebx),%edx
c0003ff9:	52                   	push   %edx
c0003ffa:	50                   	push   %eax
c0003ffb:	e8 21 ff ff ff       	call   c0003f21 <make_gdt_desc>
c0004000:	83 c4 1c             	add    $0x1c,%esp
c0004003:	8b 45 e0             	mov    -0x20(%ebp),%eax
c0004006:	8b 55 e4             	mov    -0x1c(%ebp),%edx
c0004009:	89 06                	mov    %eax,(%esi)
c000400b:	89 56 04             	mov    %edx,0x4(%esi)
c000400e:	bb 2b 09 00 c0       	mov    $0xc000092b,%ebx
c0004013:	8d 45 e0             	lea    -0x20(%ebp),%eax
c0004016:	83 ec 0c             	sub    $0xc,%esp
c0004019:	68 c0 00 00 00       	push   $0xc0
c000401e:	68 f8 00 00 00       	push   $0xf8
c0004023:	68 ff ff 0f 00       	push   $0xfffff
c0004028:	6a 00                	push   $0x0
c000402a:	50                   	push   %eax
c000402b:	e8 f1 fe ff ff       	call   c0003f21 <make_gdt_desc>
c0004030:	83 c4 1c             	add    $0x1c,%esp
c0004033:	8b 45 e0             	mov    -0x20(%ebp),%eax
c0004036:	8b 55 e4             	mov    -0x1c(%ebp),%edx
c0004039:	89 03                	mov    %eax,(%ebx)
c000403b:	89 53 04             	mov    %edx,0x4(%ebx)
c000403e:	bb 33 09 00 c0       	mov    $0xc0000933,%ebx
c0004043:	8d 45 e0             	lea    -0x20(%ebp),%eax
c0004046:	83 ec 0c             	sub    $0xc,%esp
c0004049:	68 c0 00 00 00       	push   $0xc0
c000404e:	68 f2 00 00 00       	push   $0xf2
c0004053:	68 ff ff 0f 00       	push   $0xfffff
c0004058:	6a 00                	push   $0x0
c000405a:	50                   	push   %eax
c000405b:	e8 c1 fe ff ff       	call   c0003f21 <make_gdt_desc>
c0004060:	83 c4 1c             	add    $0x1c,%esp
c0004063:	8b 45 e0             	mov    -0x20(%ebp),%eax
c0004066:	8b 55 e4             	mov    -0x1c(%ebp),%edx
c0004069:	89 03                	mov    %eax,(%ebx)
c000406b:	89 53 04             	mov    %edx,0x4(%ebx)
c000406e:	c7 45 e8 37 00 03 09 	movl   $0x9030037,-0x18(%ebp)
c0004075:	c7 45 ec 00 c0 00 00 	movl   $0xc000,-0x14(%ebp)
c000407c:	0f 01 55 e8          	lgdtl  -0x18(%ebp)
c0004080:	b8 20 00 00 00       	mov    $0x20,%eax
c0004085:	0f 00 d8             	ltr    %ax
c0004088:	90                   	nop
c0004089:	8d 65 f8             	lea    -0x8(%ebp),%esp
c000408c:	5b                   	pop    %ebx
c000408d:	5e                   	pop    %esi
c000408e:	5d                   	pop    %ebp
c000408f:	c3                   	ret    

c0004090 <start_process>:
c0004090:	55                   	push   %ebp
c0004091:	89 e5                	mov    %esp,%ebp
c0004093:	53                   	push   %ebx
c0004094:	83 ec 14             	sub    $0x14,%esp
c0004097:	e8 38 d5 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c000409c:	81 c3 64 2f 00 00    	add    $0x2f64,%ebx
c00040a2:	8b 45 08             	mov    0x8(%ebp),%eax
c00040a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00040a8:	e8 a3 ec ff ff       	call   c0002d50 <running_thread>
c00040ad:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00040b0:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00040b3:	8b 00                	mov    (%eax),%eax
c00040b5:	8d 90 80 00 00 00    	lea    0x80(%eax),%edx
c00040bb:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00040be:	89 10                	mov    %edx,(%eax)
c00040c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00040c3:	8b 00                	mov    (%eax),%eax
c00040c5:	89 45 ec             	mov    %eax,-0x14(%ebp)
c00040c8:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00040cb:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)
c00040d2:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00040d5:	8b 50 20             	mov    0x20(%eax),%edx
c00040d8:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00040db:	89 50 1c             	mov    %edx,0x1c(%eax)
c00040de:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00040e1:	8b 50 1c             	mov    0x1c(%eax),%edx
c00040e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00040e7:	89 50 14             	mov    %edx,0x14(%eax)
c00040ea:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00040ed:	8b 50 14             	mov    0x14(%eax),%edx
c00040f0:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00040f3:	89 50 10             	mov    %edx,0x10(%eax)
c00040f6:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00040f9:	8b 50 10             	mov    0x10(%eax),%edx
c00040fc:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00040ff:	89 50 0c             	mov    %edx,0xc(%eax)
c0004102:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004105:	8b 50 0c             	mov    0xc(%eax),%edx
c0004108:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000410b:	89 50 08             	mov    %edx,0x8(%eax)
c000410e:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004111:	8b 50 08             	mov    0x8(%eax),%edx
c0004114:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004117:	89 50 04             	mov    %edx,0x4(%eax)
c000411a:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000411d:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
c0004124:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004127:	c7 40 28 33 00 00 00 	movl   $0x33,0x28(%eax)
c000412e:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004131:	8b 50 28             	mov    0x28(%eax),%edx
c0004134:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004137:	89 50 2c             	mov    %edx,0x2c(%eax)
c000413a:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000413d:	8b 50 2c             	mov    0x2c(%eax),%edx
c0004140:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004143:	89 50 30             	mov    %edx,0x30(%eax)
c0004146:	8b 55 f4             	mov    -0xc(%ebp),%edx
c0004149:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000414c:	89 50 38             	mov    %edx,0x38(%eax)
c000414f:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004152:	c7 40 3c 2b 00 00 00 	movl   $0x2b,0x3c(%eax)
c0004159:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000415c:	c7 40 40 02 02 00 00 	movl   $0x202,0x40(%eax)
c0004163:	83 ec 08             	sub    $0x8,%esp
c0004166:	68 00 f0 ff bf       	push   $0xbffff000
c000416b:	6a 01                	push   $0x1
c000416d:	e8 72 e8 ff ff       	call   c00029e4 <get_a_page>
c0004172:	83 c4 10             	add    $0x10,%esp
c0004175:	05 00 10 00 00       	add    $0x1000,%eax
c000417a:	89 c2                	mov    %eax,%edx
c000417c:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000417f:	89 50 44             	mov    %edx,0x44(%eax)
c0004182:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004185:	c7 40 48 33 00 00 00 	movl   $0x33,0x48(%eax)
c000418c:	8b 65 ec             	mov    -0x14(%ebp),%esp
c000418f:	e9 8c 2e 00 00       	jmp    c0007020 <intr_exit>
c0004194:	90                   	nop
c0004195:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0004198:	c9                   	leave  
c0004199:	c3                   	ret    

c000419a <page_dir_activate>:
c000419a:	55                   	push   %ebp
c000419b:	89 e5                	mov    %esp,%ebp
c000419d:	53                   	push   %ebx
c000419e:	83 ec 14             	sub    $0x14,%esp
c00041a1:	e8 2a d4 ff ff       	call   c00015d0 <__x86.get_pc_thunk.ax>
c00041a6:	05 5a 2e 00 00       	add    $0x2e5a,%eax
c00041ab:	c7 45 f4 00 00 10 00 	movl   $0x100000,-0xc(%ebp)
c00041b2:	8b 55 08             	mov    0x8(%ebp),%edx
c00041b5:	8b 52 34             	mov    0x34(%edx),%edx
c00041b8:	85 d2                	test   %edx,%edx
c00041ba:	74 17                	je     c00041d3 <page_dir_activate+0x39>
c00041bc:	8b 55 08             	mov    0x8(%ebp),%edx
c00041bf:	8b 52 34             	mov    0x34(%edx),%edx
c00041c2:	83 ec 0c             	sub    $0xc,%esp
c00041c5:	52                   	push   %edx
c00041c6:	89 c3                	mov    %eax,%ebx
c00041c8:	e8 0e e9 ff ff       	call   c0002adb <addr_v2p>
c00041cd:	83 c4 10             	add    $0x10,%esp
c00041d0:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00041d3:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00041d6:	0f 22 d8             	mov    %eax,%cr3
c00041d9:	90                   	nop
c00041da:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00041dd:	c9                   	leave  
c00041de:	c3                   	ret    

c00041df <process_activate>:
c00041df:	55                   	push   %ebp
c00041e0:	89 e5                	mov    %esp,%ebp
c00041e2:	53                   	push   %ebx
c00041e3:	83 ec 04             	sub    $0x4,%esp
c00041e6:	e8 e9 d3 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00041eb:	81 c3 15 2e 00 00    	add    $0x2e15,%ebx
c00041f1:	83 ec 0c             	sub    $0xc,%esp
c00041f4:	ff 75 08             	pushl  0x8(%ebp)
c00041f7:	e8 9e ff ff ff       	call   c000419a <page_dir_activate>
c00041fc:	83 c4 10             	add    $0x10,%esp
c00041ff:	8b 45 08             	mov    0x8(%ebp),%eax
c0004202:	8b 40 34             	mov    0x34(%eax),%eax
c0004205:	85 c0                	test   %eax,%eax
c0004207:	74 0e                	je     c0004217 <process_activate+0x38>
c0004209:	83 ec 0c             	sub    $0xc,%esp
c000420c:	ff 75 08             	pushl  0x8(%ebp)
c000420f:	e8 ee fc ff ff       	call   c0003f02 <update_tss_esp>
c0004214:	83 c4 10             	add    $0x10,%esp
c0004217:	90                   	nop
c0004218:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000421b:	c9                   	leave  
c000421c:	c3                   	ret    

c000421d <create_page_dir>:
c000421d:	55                   	push   %ebp
c000421e:	89 e5                	mov    %esp,%ebp
c0004220:	53                   	push   %ebx
c0004221:	83 ec 14             	sub    $0x14,%esp
c0004224:	e8 ab d3 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0004229:	81 c3 d7 2d 00 00    	add    $0x2dd7,%ebx
c000422f:	83 ec 0c             	sub    $0xc,%esp
c0004232:	6a 01                	push   $0x1
c0004234:	e8 c3 e6 ff ff       	call   c00028fc <get_kernel_pages>
c0004239:	83 c4 10             	add    $0x10,%esp
c000423c:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000423f:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004242:	05 00 0c 00 00       	add    $0xc00,%eax
c0004247:	83 ec 04             	sub    $0x4,%esp
c000424a:	68 00 04 00 00       	push   $0x400
c000424f:	68 00 fc ff ff       	push   $0xfffffc00
c0004254:	50                   	push   %eax
c0004255:	e8 23 e9 ff ff       	call   c0002b7d <memcpy>
c000425a:	83 c4 10             	add    $0x10,%esp
c000425d:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004260:	83 ec 0c             	sub    $0xc,%esp
c0004263:	50                   	push   %eax
c0004264:	e8 72 e8 ff ff       	call   c0002adb <addr_v2p>
c0004269:	83 c4 10             	add    $0x10,%esp
c000426c:	89 45 f0             	mov    %eax,-0x10(%ebp)
c000426f:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004272:	05 fc 0f 00 00       	add    $0xffc,%eax
c0004277:	8b 55 f0             	mov    -0x10(%ebp),%edx
c000427a:	83 ca 07             	or     $0x7,%edx
c000427d:	89 10                	mov    %edx,(%eax)
c000427f:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004282:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0004285:	c9                   	leave  
c0004286:	c3                   	ret    

c0004287 <create_user_vaddr_bitmap>:
c0004287:	55                   	push   %ebp
c0004288:	89 e5                	mov    %esp,%ebp
c000428a:	53                   	push   %ebx
c000428b:	83 ec 14             	sub    $0x14,%esp
c000428e:	e8 41 d3 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c0004293:	81 c3 6d 2d 00 00    	add    $0x2d6d,%ebx
c0004299:	8b 45 08             	mov    0x8(%ebp),%eax
c000429c:	c7 40 40 00 80 04 08 	movl   $0x8048000,0x40(%eax)
c00042a3:	c7 45 f4 17 00 00 00 	movl   $0x17,-0xc(%ebp)
c00042aa:	83 ec 0c             	sub    $0xc,%esp
c00042ad:	ff 75 f4             	pushl  -0xc(%ebp)
c00042b0:	e8 47 e6 ff ff       	call   c00028fc <get_kernel_pages>
c00042b5:	83 c4 10             	add    $0x10,%esp
c00042b8:	89 c2                	mov    %eax,%edx
c00042ba:	8b 45 08             	mov    0x8(%ebp),%eax
c00042bd:	89 50 3c             	mov    %edx,0x3c(%eax)
c00042c0:	8b 45 08             	mov    0x8(%ebp),%eax
c00042c3:	c7 40 38 f7 6f 01 00 	movl   $0x16ff7,0x38(%eax)
c00042ca:	8b 45 08             	mov    0x8(%ebp),%eax
c00042cd:	83 c0 38             	add    $0x38,%eax
c00042d0:	83 ec 0c             	sub    $0xc,%esp
c00042d3:	50                   	push   %eax
c00042d4:	e8 d6 e0 ff ff       	call   c00023af <bitmap_init>
c00042d9:	83 c4 10             	add    $0x10,%esp
c00042dc:	90                   	nop
c00042dd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00042e0:	c9                   	leave  
c00042e1:	c3                   	ret    

c00042e2 <process_execute>:
c00042e2:	55                   	push   %ebp
c00042e3:	89 e5                	mov    %esp,%ebp
c00042e5:	53                   	push   %ebx
c00042e6:	83 ec 14             	sub    $0x14,%esp
c00042e9:	e8 e6 d2 ff ff       	call   c00015d4 <__x86.get_pc_thunk.bx>
c00042ee:	81 c3 12 2d 00 00    	add    $0x2d12,%ebx
c00042f4:	83 ec 0c             	sub    $0xc,%esp
c00042f7:	6a 01                	push   $0x1
c00042f9:	e8 fe e5 ff ff       	call   c00028fc <get_kernel_pages>
c00042fe:	83 c4 10             	add    $0x10,%esp
c0004301:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0004304:	83 ec 04             	sub    $0x4,%esp
c0004307:	6a 14                	push   $0x14
c0004309:	ff 75 0c             	pushl  0xc(%ebp)
c000430c:	ff 75 f4             	pushl  -0xc(%ebp)
c000430f:	e8 0b eb ff ff       	call   c0002e1f <init_thread>
c0004314:	83 c4 10             	add    $0x10,%esp
c0004317:	83 ec 0c             	sub    $0xc,%esp
c000431a:	ff 75 f4             	pushl  -0xc(%ebp)
c000431d:	e8 65 ff ff ff       	call   c0004287 <create_user_vaddr_bitmap>
c0004322:	83 c4 10             	add    $0x10,%esp
c0004325:	83 ec 04             	sub    $0x4,%esp
c0004328:	ff 75 08             	pushl  0x8(%ebp)
c000432b:	8d 83 90 d0 ff ff    	lea    -0x2f70(%ebx),%eax
c0004331:	50                   	push   %eax
c0004332:	ff 75 f4             	pushl  -0xc(%ebp)
c0004335:	e8 61 ea ff ff       	call   c0002d9b <thread_create>
c000433a:	83 c4 10             	add    $0x10,%esp
c000433d:	e8 db fe ff ff       	call   c000421d <create_page_dir>
c0004342:	89 c2                	mov    %eax,%edx
c0004344:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004347:	89 50 34             	mov    %edx,0x34(%eax)
c000434a:	e8 75 df ff ff       	call   c00022c4 <intr_status>
c000434f:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0004352:	e8 41 df ff ff       	call   c0002298 <intclose>
c0004357:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000435a:	83 c0 24             	add    $0x24,%eax
c000435d:	83 ec 08             	sub    $0x8,%esp
c0004360:	50                   	push   %eax
c0004361:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c0004367:	50                   	push   %eax
c0004368:	e8 40 f0 ff ff       	call   c00033ad <_list_add_back>
c000436d:	83 c4 10             	add    $0x10,%esp
c0004370:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004373:	83 c0 2c             	add    $0x2c,%eax
c0004376:	83 ec 08             	sub    $0x8,%esp
c0004379:	50                   	push   %eax
c000437a:	c7 c0 b4 75 00 c0    	mov    $0xc00075b4,%eax
c0004380:	50                   	push   %eax
c0004381:	e8 27 f0 ff ff       	call   c00033ad <_list_add_back>
c0004386:	83 c4 10             	add    $0x10,%esp
c0004389:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
c000438d:	74 05                	je     c0004394 <process_execute+0xb2>
c000438f:	e8 d8 de ff ff       	call   c000226c <intopen>
c0004394:	90                   	nop
c0004395:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0004398:	c9                   	leave  
c0004399:	c3                   	ret    
