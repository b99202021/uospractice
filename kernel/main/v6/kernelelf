
kernel：     檔案格式 elf32-i386


Disassembly of section .text:

c0001500 <main>:
c0001500:	8d 4c 24 04          	lea    0x4(%esp),%ecx
c0001504:	83 e4 f0             	and    $0xfffffff0,%esp
c0001507:	ff 71 fc             	pushl  -0x4(%ecx)
c000150a:	55                   	push   %ebp
c000150b:	89 e5                	mov    %esp,%ebp
c000150d:	53                   	push   %ebx
c000150e:	51                   	push   %ecx
c000150f:	83 ec 10             	sub    $0x10,%esp
c0001512:	e8 66 01 00 00       	call   c000167d <__x86.get_pc_thunk.bx>
c0001517:	81 c3 e9 4a 00 00    	add    $0x4ae9,%ebx
c000151d:	e8 76 0c 00 00       	call   c0002198 <intclose>
c0001522:	c7 c0 d4 61 00 c0    	mov    $0xc00061d4,%eax
c0001528:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c000152e:	e8 1d 15 00 00       	call   c0002a50 <running_thread>
c0001533:	89 c2                	mov    %eax,%edx
c0001535:	c7 c0 d0 61 00 c0    	mov    $0xc00061d0,%eax
c000153b:	89 10                	mov    %edx,(%eax)
c000153d:	e8 09 01 00 00       	call   c000164b <initialize_all>
c0001542:	83 ec 0c             	sub    $0xc,%esp
c0001545:	c7 c0 bc 61 00 c0    	mov    $0xc00061bc,%eax
c000154b:	50                   	push   %eax
c000154c:	e8 a4 19 00 00       	call   c0002ef5 <init_lock>
c0001551:	83 c4 10             	add    $0x10,%esp
c0001554:	83 ec 0c             	sub    $0xc,%esp
c0001557:	8d 83 78 d5 ff ff    	lea    -0x2a88(%ebx),%eax
c000155d:	50                   	push   %eax
c000155e:	e8 21 02 00 00       	call   c0001784 <put_str>
c0001563:	83 c4 10             	add    $0x10,%esp
c0001566:	83 ec 08             	sub    $0x8,%esp
c0001569:	6a 0a                	push   $0xa
c000156b:	8d 83 94 d5 ff ff    	lea    -0x2a6c(%ebx),%eax
c0001571:	50                   	push   %eax
c0001572:	e8 34 17 00 00       	call   c0002cab <set_prio>
c0001577:	83 c4 10             	add    $0x10,%esp
c000157a:	6a 0a                	push   $0xa
c000157c:	6a 00                	push   $0x0
c000157e:	8d 83 df b5 ff ff    	lea    -0x4a21(%ebx),%eax
c0001584:	50                   	push   %eax
c0001585:	8d 83 a0 d5 ff ff    	lea    -0x2a60(%ebx),%eax
c000158b:	50                   	push   %eax
c000158c:	e8 34 16 00 00       	call   c0002bc5 <thread_start>
c0001591:	83 c4 10             	add    $0x10,%esp
c0001594:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c000159b:	eb 37                	jmp    c00015d4 <main+0xd4>
c000159d:	83 ec 0c             	sub    $0xc,%esp
c00015a0:	6a 02                	push   $0x2
c00015a2:	e8 4c 18 00 00       	call   c0002df3 <thread_block>
c00015a7:	83 c4 10             	add    $0x10,%esp
c00015aa:	83 ec 0c             	sub    $0xc,%esp
c00015ad:	8d 83 a8 d5 ff ff    	lea    -0x2a58(%ebx),%eax
c00015b3:	50                   	push   %eax
c00015b4:	e8 cb 01 00 00       	call   c0001784 <put_str>
c00015b9:	83 c4 10             	add    $0x10,%esp
c00015bc:	c7 c0 d4 61 00 c0    	mov    $0xc00061d4,%eax
c00015c2:	8b 00                	mov    (%eax),%eax
c00015c4:	83 ec 0c             	sub    $0xc,%esp
c00015c7:	50                   	push   %eax
c00015c8:	e8 90 18 00 00       	call   c0002e5d <thread_unblock>
c00015cd:	83 c4 10             	add    $0x10,%esp
c00015d0:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c00015d4:	81 7d f4 e7 03 00 00 	cmpl   $0x3e7,-0xc(%ebp)
c00015db:	7e c0                	jle    c000159d <main+0x9d>
c00015dd:	eb fe                	jmp    c00015dd <main+0xdd>

c00015df <threada>:
c00015df:	55                   	push   %ebp
c00015e0:	89 e5                	mov    %esp,%ebp
c00015e2:	53                   	push   %ebx
c00015e3:	83 ec 14             	sub    $0x14,%esp
c00015e6:	e8 92 00 00 00       	call   c000167d <__x86.get_pc_thunk.bx>
c00015eb:	81 c3 15 4a 00 00    	add    $0x4a15,%ebx
c00015f1:	e8 5a 14 00 00       	call   c0002a50 <running_thread>
c00015f6:	89 c2                	mov    %eax,%edx
c00015f8:	c7 c0 d4 61 00 c0    	mov    $0xc00061d4,%eax
c00015fe:	89 10                	mov    %edx,(%eax)
c0001600:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001607:	eb 37                	jmp    c0001640 <threada+0x61>
c0001609:	c7 c0 d0 61 00 c0    	mov    $0xc00061d0,%eax
c000160f:	8b 00                	mov    (%eax),%eax
c0001611:	83 ec 0c             	sub    $0xc,%esp
c0001614:	50                   	push   %eax
c0001615:	e8 43 18 00 00       	call   c0002e5d <thread_unblock>
c000161a:	83 c4 10             	add    $0x10,%esp
c000161d:	83 ec 0c             	sub    $0xc,%esp
c0001620:	8d 83 b6 d5 ff ff    	lea    -0x2a4a(%ebx),%eax
c0001626:	50                   	push   %eax
c0001627:	e8 58 01 00 00       	call   c0001784 <put_str>
c000162c:	83 c4 10             	add    $0x10,%esp
c000162f:	83 ec 0c             	sub    $0xc,%esp
c0001632:	6a 02                	push   $0x2
c0001634:	e8 ba 17 00 00       	call   c0002df3 <thread_block>
c0001639:	83 c4 10             	add    $0x10,%esp
c000163c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001640:	81 7d f4 e7 03 00 00 	cmpl   $0x3e7,-0xc(%ebp)
c0001647:	7e c0                	jle    c0001609 <threada+0x2a>
c0001649:	eb fe                	jmp    c0001649 <threada+0x6a>

c000164b <initialize_all>:
c000164b:	55                   	push   %ebp
c000164c:	89 e5                	mov    %esp,%ebp
c000164e:	53                   	push   %ebx
c000164f:	83 ec 04             	sub    $0x4,%esp
c0001652:	e8 26 00 00 00       	call   c000167d <__x86.get_pc_thunk.bx>
c0001657:	81 c3 a9 49 00 00    	add    $0x49a9,%ebx
c000165d:	e8 9a 0a 00 00       	call   c00020fc <idt_init>
c0001662:	e8 1f 0d 00 00       	call   c0002386 <bitmap_init_all>
c0001667:	e8 60 1d 00 00       	call   c00033cc <timer_init>
c000166c:	e8 41 17 00 00       	call   c0002db2 <thread_init>
c0001671:	e8 f1 1d 00 00       	call   c0003467 <console_init>
c0001676:	90                   	nop
c0001677:	83 c4 04             	add    $0x4,%esp
c000167a:	5b                   	pop    %ebx
c000167b:	5d                   	pop    %ebp
c000167c:	c3                   	ret    

c000167d <__x86.get_pc_thunk.bx>:
c000167d:	8b 1c 24             	mov    (%esp),%ebx
c0001680:	c3                   	ret    
c0001681:	66 90                	xchg   %ax,%ax
c0001683:	66 90                	xchg   %ax,%ax
c0001685:	66 90                	xchg   %ax,%ax
c0001687:	66 90                	xchg   %ax,%ax
c0001689:	66 90                	xchg   %ax,%ax
c000168b:	66 90                	xchg   %ax,%ax
c000168d:	66 90                	xchg   %ax,%ax
c000168f:	90                   	nop

c0001690 <put_char>:
c0001690:	60                   	pusha  
c0001691:	66 b8 18 00          	mov    $0x18,%ax
c0001695:	8e e8                	mov    %eax,%gs
c0001697:	66 ba d4 03          	mov    $0x3d4,%dx
c000169b:	b0 0e                	mov    $0xe,%al
c000169d:	ee                   	out    %al,(%dx)
c000169e:	66 ba d5 03          	mov    $0x3d5,%dx
c00016a2:	ec                   	in     (%dx),%al
c00016a3:	88 c4                	mov    %al,%ah
c00016a5:	66 ba d4 03          	mov    $0x3d4,%dx
c00016a9:	b0 0f                	mov    $0xf,%al
c00016ab:	ee                   	out    %al,(%dx)
c00016ac:	66 ba d5 03          	mov    $0x3d5,%dx
c00016b0:	ec                   	in     (%dx),%al
c00016b1:	66 89 c3             	mov    %ax,%bx
c00016b4:	8a 44 24 24          	mov    0x24(%esp),%al
c00016b8:	3c 0a                	cmp    $0xa,%al
c00016ba:	74 0a                	je     c00016c6 <put_char.is_enter>
c00016bc:	3c 0d                	cmp    $0xd,%al
c00016be:	74 06                	je     c00016c6 <put_char.is_enter>
c00016c0:	3c 08                	cmp    $0x8,%al
c00016c2:	74 18                	je     c00016dc <put_char.is_backspace>
c00016c4:	eb 34                	jmp    c00016fa <put_char.normal_case>

c00016c6 <put_char.is_enter>:
c00016c6:	66 31 d2             	xor    %dx,%dx
c00016c9:	66 89 d8             	mov    %bx,%ax
c00016cc:	66 b9 50 00          	mov    $0x50,%cx
c00016d0:	66 f7 f1             	div    %cx
c00016d3:	66 29 d3             	sub    %dx,%bx
c00016d6:	66 83 c3 50          	add    $0x50,%bx
c00016da:	eb 33                	jmp    c000170f <put_char.page_roll>

c00016dc <put_char.is_backspace>:
c00016dc:	66 83 fb 00          	cmp    $0x0,%bx
c00016e0:	74 7f                	je     c0001761 <put_char.putchar_end>
c00016e2:	66 83 eb 01          	sub    $0x1,%bx
c00016e6:	66 d1 e3             	shl    %bx
c00016e9:	65 67 c6 07 00       	movb   $0x0,%gs:(%bx)
c00016ee:	66 43                	inc    %bx
c00016f0:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c00016f5:	66 d1 eb             	shr    %bx
c00016f8:	eb 15                	jmp    c000170f <put_char.page_roll>

c00016fa <put_char.normal_case>:
c00016fa:	66 d1 e3             	shl    %bx
c00016fd:	65 67 88 07          	mov    %al,%gs:(%bx)
c0001701:	66 43                	inc    %bx
c0001703:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c0001708:	66 43                	inc    %bx
c000170a:	66 d1 eb             	shr    %bx
c000170d:	eb 00                	jmp    c000170f <put_char.page_roll>

c000170f <put_char.page_roll>:
c000170f:	66 81 fb d0 07       	cmp    $0x7d0,%bx
c0001714:	7c 2f                	jl     c0001745 <put_char.reset_cursor>
c0001716:	fc                   	cld    
c0001717:	b9 c0 03 00 00       	mov    $0x3c0,%ecx
c000171c:	be a0 80 0b c0       	mov    $0xc00b80a0,%esi
c0001721:	bf 00 80 0b c0       	mov    $0xc00b8000,%edi
c0001726:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
c0001728:	b9 50 00 00 00       	mov    $0x50,%ecx
c000172d:	66 bb 00 0f          	mov    $0xf00,%bx

c0001731 <put_char.clr>:
c0001731:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c0001736:	66 43                	inc    %bx
c0001738:	65 67 c6 07 20       	movb   $0x20,%gs:(%bx)
c000173d:	66 43                	inc    %bx
c000173f:	e2 f0                	loop   c0001731 <put_char.clr>
c0001741:	66 bb 80 07          	mov    $0x780,%bx

c0001745 <put_char.reset_cursor>:
c0001745:	66 ba d4 03          	mov    $0x3d4,%dx
c0001749:	b0 0e                	mov    $0xe,%al
c000174b:	ee                   	out    %al,(%dx)
c000174c:	66 ba d5 03          	mov    $0x3d5,%dx
c0001750:	88 f8                	mov    %bh,%al
c0001752:	ee                   	out    %al,(%dx)
c0001753:	66 ba d4 03          	mov    $0x3d4,%dx
c0001757:	b0 0f                	mov    $0xf,%al
c0001759:	ee                   	out    %al,(%dx)
c000175a:	66 ba d5 03          	mov    $0x3d5,%dx
c000175e:	88 d8                	mov    %bl,%al
c0001760:	ee                   	out    %al,(%dx)

c0001761 <put_char.putchar_end>:
c0001761:	61                   	popa   
c0001762:	c3                   	ret    

c0001763 <set_cursor>:
c0001763:	8b 5c 24 04          	mov    0x4(%esp),%ebx
c0001767:	66 ba d4 03          	mov    $0x3d4,%dx
c000176b:	b0 0e                	mov    $0xe,%al
c000176d:	ee                   	out    %al,(%dx)
c000176e:	66 ba d5 03          	mov    $0x3d5,%dx
c0001772:	88 f8                	mov    %bh,%al
c0001774:	ee                   	out    %al,(%dx)
c0001775:	66 ba d4 03          	mov    $0x3d4,%dx
c0001779:	b0 0f                	mov    $0xf,%al
c000177b:	ee                   	out    %al,(%dx)
c000177c:	66 ba d5 03          	mov    $0x3d5,%dx
c0001780:	88 d8                	mov    %bl,%al
c0001782:	ee                   	out    %al,(%dx)
c0001783:	c3                   	ret    

c0001784 <put_str>:
c0001784:	55                   	push   %ebp
c0001785:	89 e5                	mov    %esp,%ebp
c0001787:	53                   	push   %ebx
c0001788:	83 ec 14             	sub    $0x14,%esp
c000178b:	e8 ed fe ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0001790:	81 c3 70 48 00 00    	add    $0x4870,%ebx
c0001796:	8b 45 08             	mov    0x8(%ebp),%eax
c0001799:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000179c:	eb 19                	jmp    c00017b7 <put_str+0x33>
c000179e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00017a1:	0f b6 00             	movzbl (%eax),%eax
c00017a4:	0f b6 c0             	movzbl %al,%eax
c00017a7:	83 ec 0c             	sub    $0xc,%esp
c00017aa:	50                   	push   %eax
c00017ab:	e8 e0 fe ff ff       	call   c0001690 <put_char>
c00017b0:	83 c4 10             	add    $0x10,%esp
c00017b3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c00017b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00017ba:	0f b6 00             	movzbl (%eax),%eax
c00017bd:	84 c0                	test   %al,%al
c00017bf:	75 dd                	jne    c000179e <put_str+0x1a>
c00017c1:	90                   	nop
c00017c2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00017c5:	c9                   	leave  
c00017c6:	c3                   	ret    

c00017c7 <put_int>:
c00017c7:	55                   	push   %ebp
c00017c8:	89 e5                	mov    %esp,%ebp
c00017ca:	53                   	push   %ebx
c00017cb:	83 ec 14             	sub    $0x14,%esp
c00017ce:	e8 aa fe ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c00017d3:	81 c3 2d 48 00 00    	add    $0x482d,%ebx
c00017d9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c00017dd:	75 0d                	jne    c00017ec <put_int+0x25>
c00017df:	83 ec 0c             	sub    $0xc,%esp
c00017e2:	6a 30                	push   $0x30
c00017e4:	e8 a7 fe ff ff       	call   c0001690 <put_char>
c00017e9:	83 c4 10             	add    $0x10,%esp
c00017ec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c00017f3:	eb 44                	jmp    c0001839 <put_int+0x72>
c00017f5:	8b 45 08             	mov    0x8(%ebp),%eax
c00017f8:	83 e0 0f             	and    $0xf,%eax
c00017fb:	83 f8 09             	cmp    $0x9,%eax
c00017fe:	76 17                	jbe    c0001817 <put_int+0x50>
c0001800:	8b 45 08             	mov    0x8(%ebp),%eax
c0001803:	83 e0 0f             	and    $0xf,%eax
c0001806:	8d 50 57             	lea    0x57(%eax),%edx
c0001809:	b8 07 00 00 00       	mov    $0x7,%eax
c000180e:	2b 45 f4             	sub    -0xc(%ebp),%eax
c0001811:	88 54 05 ec          	mov    %dl,-0x14(%ebp,%eax,1)
c0001815:	eb 15                	jmp    c000182c <put_int+0x65>
c0001817:	8b 45 08             	mov    0x8(%ebp),%eax
c000181a:	83 e0 0f             	and    $0xf,%eax
c000181d:	8d 50 30             	lea    0x30(%eax),%edx
c0001820:	b8 07 00 00 00       	mov    $0x7,%eax
c0001825:	2b 45 f4             	sub    -0xc(%ebp),%eax
c0001828:	88 54 05 ec          	mov    %dl,-0x14(%ebp,%eax,1)
c000182c:	8b 45 08             	mov    0x8(%ebp),%eax
c000182f:	c1 e8 04             	shr    $0x4,%eax
c0001832:	89 45 08             	mov    %eax,0x8(%ebp)
c0001835:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001839:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)
c000183d:	7e b6                	jle    c00017f5 <put_int+0x2e>
c000183f:	83 ec 0c             	sub    $0xc,%esp
c0001842:	6a 30                	push   $0x30
c0001844:	e8 47 fe ff ff       	call   c0001690 <put_char>
c0001849:	83 c4 10             	add    $0x10,%esp
c000184c:	83 ec 0c             	sub    $0xc,%esp
c000184f:	6a 78                	push   $0x78
c0001851:	e8 3a fe ff ff       	call   c0001690 <put_char>
c0001856:	83 c4 10             	add    $0x10,%esp
c0001859:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001860:	eb 1e                	jmp    c0001880 <put_int+0xb9>
c0001862:	8d 55 ec             	lea    -0x14(%ebp),%edx
c0001865:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0001868:	01 d0                	add    %edx,%eax
c000186a:	0f b6 00             	movzbl (%eax),%eax
c000186d:	0f b6 c0             	movzbl %al,%eax
c0001870:	83 ec 0c             	sub    $0xc,%esp
c0001873:	50                   	push   %eax
c0001874:	e8 17 fe ff ff       	call   c0001690 <put_char>
c0001879:	83 c4 10             	add    $0x10,%esp
c000187c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001880:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)
c0001884:	7e dc                	jle    c0001862 <put_int+0x9b>
c0001886:	90                   	nop
c0001887:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000188a:	c9                   	leave  
c000188b:	c3                   	ret    
c000188c:	66 90                	xchg   %ax,%ax
c000188e:	66 90                	xchg   %ax,%ax

c0001890 <intr0x0entry>:
c0001890:	6a 00                	push   $0x0
c0001892:	1e                   	push   %ds
c0001893:	06                   	push   %es
c0001894:	0f a0                	push   %fs
c0001896:	0f a8                	push   %gs
c0001898:	60                   	pusha  
c0001899:	b0 20                	mov    $0x20,%al
c000189b:	e6 a0                	out    %al,$0xa0
c000189d:	e6 20                	out    %al,$0x20
c000189f:	6a 00                	push   $0x0
c00018a1:	ff 15 80 62 00 c0    	call   *0xc0006280
c00018a7:	e9 60 47 00 00       	jmp    c000600c <intr_exit>

c00018ac <intr1entry>:
c00018ac:	6a 00                	push   $0x0
c00018ae:	1e                   	push   %ds
c00018af:	06                   	push   %es
c00018b0:	0f a0                	push   %fs
c00018b2:	0f a8                	push   %gs
c00018b4:	60                   	pusha  
c00018b5:	b0 20                	mov    $0x20,%al
c00018b7:	e6 a0                	out    %al,$0xa0
c00018b9:	e6 20                	out    %al,$0x20
c00018bb:	6a 01                	push   $0x1
c00018bd:	ff 15 84 62 00 c0    	call   *0xc0006284
c00018c3:	e9 44 47 00 00       	jmp    c000600c <intr_exit>

c00018c8 <intr2entry>:
c00018c8:	6a 00                	push   $0x0
c00018ca:	1e                   	push   %ds
c00018cb:	06                   	push   %es
c00018cc:	0f a0                	push   %fs
c00018ce:	0f a8                	push   %gs
c00018d0:	60                   	pusha  
c00018d1:	b0 20                	mov    $0x20,%al
c00018d3:	e6 a0                	out    %al,$0xa0
c00018d5:	e6 20                	out    %al,$0x20
c00018d7:	6a 02                	push   $0x2
c00018d9:	ff 15 88 62 00 c0    	call   *0xc0006288
c00018df:	e9 28 47 00 00       	jmp    c000600c <intr_exit>

c00018e4 <intr3entry>:
c00018e4:	6a 00                	push   $0x0
c00018e6:	1e                   	push   %ds
c00018e7:	06                   	push   %es
c00018e8:	0f a0                	push   %fs
c00018ea:	0f a8                	push   %gs
c00018ec:	60                   	pusha  
c00018ed:	b0 20                	mov    $0x20,%al
c00018ef:	e6 a0                	out    %al,$0xa0
c00018f1:	e6 20                	out    %al,$0x20
c00018f3:	6a 03                	push   $0x3
c00018f5:	ff 15 8c 62 00 c0    	call   *0xc000628c
c00018fb:	e9 0c 47 00 00       	jmp    c000600c <intr_exit>

c0001900 <intr4entry>:
c0001900:	6a 00                	push   $0x0
c0001902:	1e                   	push   %ds
c0001903:	06                   	push   %es
c0001904:	0f a0                	push   %fs
c0001906:	0f a8                	push   %gs
c0001908:	60                   	pusha  
c0001909:	b0 20                	mov    $0x20,%al
c000190b:	e6 a0                	out    %al,$0xa0
c000190d:	e6 20                	out    %al,$0x20
c000190f:	6a 04                	push   $0x4
c0001911:	ff 15 90 62 00 c0    	call   *0xc0006290
c0001917:	e9 f0 46 00 00       	jmp    c000600c <intr_exit>

c000191c <intr5entry>:
c000191c:	6a 00                	push   $0x0
c000191e:	1e                   	push   %ds
c000191f:	06                   	push   %es
c0001920:	0f a0                	push   %fs
c0001922:	0f a8                	push   %gs
c0001924:	60                   	pusha  
c0001925:	b0 20                	mov    $0x20,%al
c0001927:	e6 a0                	out    %al,$0xa0
c0001929:	e6 20                	out    %al,$0x20
c000192b:	6a 05                	push   $0x5
c000192d:	ff 15 94 62 00 c0    	call   *0xc0006294
c0001933:	e9 d4 46 00 00       	jmp    c000600c <intr_exit>

c0001938 <intr6entry>:
c0001938:	6a 00                	push   $0x0
c000193a:	1e                   	push   %ds
c000193b:	06                   	push   %es
c000193c:	0f a0                	push   %fs
c000193e:	0f a8                	push   %gs
c0001940:	60                   	pusha  
c0001941:	b0 20                	mov    $0x20,%al
c0001943:	e6 a0                	out    %al,$0xa0
c0001945:	e6 20                	out    %al,$0x20
c0001947:	6a 06                	push   $0x6
c0001949:	ff 15 98 62 00 c0    	call   *0xc0006298
c000194f:	e9 b8 46 00 00       	jmp    c000600c <intr_exit>

c0001954 <intr7entry>:
c0001954:	6a 00                	push   $0x0
c0001956:	1e                   	push   %ds
c0001957:	06                   	push   %es
c0001958:	0f a0                	push   %fs
c000195a:	0f a8                	push   %gs
c000195c:	60                   	pusha  
c000195d:	b0 20                	mov    $0x20,%al
c000195f:	e6 a0                	out    %al,$0xa0
c0001961:	e6 20                	out    %al,$0x20
c0001963:	6a 07                	push   $0x7
c0001965:	ff 15 9c 62 00 c0    	call   *0xc000629c
c000196b:	e9 9c 46 00 00       	jmp    c000600c <intr_exit>

c0001970 <intr8entry>:
c0001970:	6a 00                	push   $0x0
c0001972:	1e                   	push   %ds
c0001973:	06                   	push   %es
c0001974:	0f a0                	push   %fs
c0001976:	0f a8                	push   %gs
c0001978:	60                   	pusha  
c0001979:	b0 20                	mov    $0x20,%al
c000197b:	e6 a0                	out    %al,$0xa0
c000197d:	e6 20                	out    %al,$0x20
c000197f:	6a 08                	push   $0x8
c0001981:	ff 15 a0 62 00 c0    	call   *0xc00062a0
c0001987:	e9 80 46 00 00       	jmp    c000600c <intr_exit>

c000198c <intr9entry>:
c000198c:	6a 00                	push   $0x0
c000198e:	1e                   	push   %ds
c000198f:	06                   	push   %es
c0001990:	0f a0                	push   %fs
c0001992:	0f a8                	push   %gs
c0001994:	60                   	pusha  
c0001995:	b0 20                	mov    $0x20,%al
c0001997:	e6 a0                	out    %al,$0xa0
c0001999:	e6 20                	out    %al,$0x20
c000199b:	6a 09                	push   $0x9
c000199d:	ff 15 a4 62 00 c0    	call   *0xc00062a4
c00019a3:	e9 64 46 00 00       	jmp    c000600c <intr_exit>

c00019a8 <intr10entry>:
c00019a8:	6a 00                	push   $0x0
c00019aa:	1e                   	push   %ds
c00019ab:	06                   	push   %es
c00019ac:	0f a0                	push   %fs
c00019ae:	0f a8                	push   %gs
c00019b0:	60                   	pusha  
c00019b1:	b0 20                	mov    $0x20,%al
c00019b3:	e6 a0                	out    %al,$0xa0
c00019b5:	e6 20                	out    %al,$0x20
c00019b7:	6a 0a                	push   $0xa
c00019b9:	ff 15 a8 62 00 c0    	call   *0xc00062a8
c00019bf:	e9 48 46 00 00       	jmp    c000600c <intr_exit>

c00019c4 <intr11entry>:
c00019c4:	6a 00                	push   $0x0
c00019c6:	1e                   	push   %ds
c00019c7:	06                   	push   %es
c00019c8:	0f a0                	push   %fs
c00019ca:	0f a8                	push   %gs
c00019cc:	60                   	pusha  
c00019cd:	b0 20                	mov    $0x20,%al
c00019cf:	e6 a0                	out    %al,$0xa0
c00019d1:	e6 20                	out    %al,$0x20
c00019d3:	6a 0b                	push   $0xb
c00019d5:	ff 15 ac 62 00 c0    	call   *0xc00062ac
c00019db:	e9 2c 46 00 00       	jmp    c000600c <intr_exit>

c00019e0 <intr12entry>:
c00019e0:	6a 00                	push   $0x0
c00019e2:	1e                   	push   %ds
c00019e3:	06                   	push   %es
c00019e4:	0f a0                	push   %fs
c00019e6:	0f a8                	push   %gs
c00019e8:	60                   	pusha  
c00019e9:	b0 20                	mov    $0x20,%al
c00019eb:	e6 a0                	out    %al,$0xa0
c00019ed:	e6 20                	out    %al,$0x20
c00019ef:	6a 0c                	push   $0xc
c00019f1:	ff 15 b0 62 00 c0    	call   *0xc00062b0
c00019f7:	e9 10 46 00 00       	jmp    c000600c <intr_exit>

c00019fc <intr13entry>:
c00019fc:	6a 00                	push   $0x0
c00019fe:	1e                   	push   %ds
c00019ff:	06                   	push   %es
c0001a00:	0f a0                	push   %fs
c0001a02:	0f a8                	push   %gs
c0001a04:	60                   	pusha  
c0001a05:	b0 20                	mov    $0x20,%al
c0001a07:	e6 a0                	out    %al,$0xa0
c0001a09:	e6 20                	out    %al,$0x20
c0001a0b:	6a 0d                	push   $0xd
c0001a0d:	ff 15 b4 62 00 c0    	call   *0xc00062b4
c0001a13:	e9 f4 45 00 00       	jmp    c000600c <intr_exit>

c0001a18 <intr14entry>:
c0001a18:	6a 00                	push   $0x0
c0001a1a:	1e                   	push   %ds
c0001a1b:	06                   	push   %es
c0001a1c:	0f a0                	push   %fs
c0001a1e:	0f a8                	push   %gs
c0001a20:	60                   	pusha  
c0001a21:	b0 20                	mov    $0x20,%al
c0001a23:	e6 a0                	out    %al,$0xa0
c0001a25:	e6 20                	out    %al,$0x20
c0001a27:	6a 0e                	push   $0xe
c0001a29:	ff 15 b8 62 00 c0    	call   *0xc00062b8
c0001a2f:	e9 d8 45 00 00       	jmp    c000600c <intr_exit>

c0001a34 <intr15entry>:
c0001a34:	6a 00                	push   $0x0
c0001a36:	1e                   	push   %ds
c0001a37:	06                   	push   %es
c0001a38:	0f a0                	push   %fs
c0001a3a:	0f a8                	push   %gs
c0001a3c:	60                   	pusha  
c0001a3d:	b0 20                	mov    $0x20,%al
c0001a3f:	e6 a0                	out    %al,$0xa0
c0001a41:	e6 20                	out    %al,$0x20
c0001a43:	6a 0f                	push   $0xf
c0001a45:	ff 15 bc 62 00 c0    	call   *0xc00062bc
c0001a4b:	e9 bc 45 00 00       	jmp    c000600c <intr_exit>

c0001a50 <intr16entry>:
c0001a50:	6a 00                	push   $0x0
c0001a52:	1e                   	push   %ds
c0001a53:	06                   	push   %es
c0001a54:	0f a0                	push   %fs
c0001a56:	0f a8                	push   %gs
c0001a58:	60                   	pusha  
c0001a59:	b0 20                	mov    $0x20,%al
c0001a5b:	e6 a0                	out    %al,$0xa0
c0001a5d:	e6 20                	out    %al,$0x20
c0001a5f:	6a 10                	push   $0x10
c0001a61:	ff 15 c0 62 00 c0    	call   *0xc00062c0
c0001a67:	e9 a0 45 00 00       	jmp    c000600c <intr_exit>

c0001a6c <intr17entry>:
c0001a6c:	6a 00                	push   $0x0
c0001a6e:	1e                   	push   %ds
c0001a6f:	06                   	push   %es
c0001a70:	0f a0                	push   %fs
c0001a72:	0f a8                	push   %gs
c0001a74:	60                   	pusha  
c0001a75:	b0 20                	mov    $0x20,%al
c0001a77:	e6 a0                	out    %al,$0xa0
c0001a79:	e6 20                	out    %al,$0x20
c0001a7b:	6a 11                	push   $0x11
c0001a7d:	ff 15 c4 62 00 c0    	call   *0xc00062c4
c0001a83:	e9 84 45 00 00       	jmp    c000600c <intr_exit>

c0001a88 <intr18entry>:
c0001a88:	6a 00                	push   $0x0
c0001a8a:	1e                   	push   %ds
c0001a8b:	06                   	push   %es
c0001a8c:	0f a0                	push   %fs
c0001a8e:	0f a8                	push   %gs
c0001a90:	60                   	pusha  
c0001a91:	b0 20                	mov    $0x20,%al
c0001a93:	e6 a0                	out    %al,$0xa0
c0001a95:	e6 20                	out    %al,$0x20
c0001a97:	6a 12                	push   $0x12
c0001a99:	ff 15 c8 62 00 c0    	call   *0xc00062c8
c0001a9f:	e9 68 45 00 00       	jmp    c000600c <intr_exit>

c0001aa4 <intr19entry>:
c0001aa4:	6a 00                	push   $0x0
c0001aa6:	1e                   	push   %ds
c0001aa7:	06                   	push   %es
c0001aa8:	0f a0                	push   %fs
c0001aaa:	0f a8                	push   %gs
c0001aac:	60                   	pusha  
c0001aad:	b0 20                	mov    $0x20,%al
c0001aaf:	e6 a0                	out    %al,$0xa0
c0001ab1:	e6 20                	out    %al,$0x20
c0001ab3:	6a 13                	push   $0x13
c0001ab5:	ff 15 cc 62 00 c0    	call   *0xc00062cc
c0001abb:	e9 4c 45 00 00       	jmp    c000600c <intr_exit>

c0001ac0 <intr20entry>:
c0001ac0:	6a 00                	push   $0x0
c0001ac2:	1e                   	push   %ds
c0001ac3:	06                   	push   %es
c0001ac4:	0f a0                	push   %fs
c0001ac6:	0f a8                	push   %gs
c0001ac8:	60                   	pusha  
c0001ac9:	b0 20                	mov    $0x20,%al
c0001acb:	e6 a0                	out    %al,$0xa0
c0001acd:	e6 20                	out    %al,$0x20
c0001acf:	6a 14                	push   $0x14
c0001ad1:	ff 15 d0 62 00 c0    	call   *0xc00062d0
c0001ad7:	e9 30 45 00 00       	jmp    c000600c <intr_exit>

c0001adc <intr21entry>:
c0001adc:	6a 00                	push   $0x0
c0001ade:	1e                   	push   %ds
c0001adf:	06                   	push   %es
c0001ae0:	0f a0                	push   %fs
c0001ae2:	0f a8                	push   %gs
c0001ae4:	60                   	pusha  
c0001ae5:	b0 20                	mov    $0x20,%al
c0001ae7:	e6 a0                	out    %al,$0xa0
c0001ae9:	e6 20                	out    %al,$0x20
c0001aeb:	6a 15                	push   $0x15
c0001aed:	ff 15 d4 62 00 c0    	call   *0xc00062d4
c0001af3:	e9 14 45 00 00       	jmp    c000600c <intr_exit>

c0001af8 <intr22entry>:
c0001af8:	6a 00                	push   $0x0
c0001afa:	1e                   	push   %ds
c0001afb:	06                   	push   %es
c0001afc:	0f a0                	push   %fs
c0001afe:	0f a8                	push   %gs
c0001b00:	60                   	pusha  
c0001b01:	b0 20                	mov    $0x20,%al
c0001b03:	e6 a0                	out    %al,$0xa0
c0001b05:	e6 20                	out    %al,$0x20
c0001b07:	6a 16                	push   $0x16
c0001b09:	ff 15 d8 62 00 c0    	call   *0xc00062d8
c0001b0f:	e9 f8 44 00 00       	jmp    c000600c <intr_exit>

c0001b14 <intr23entry>:
c0001b14:	6a 00                	push   $0x0
c0001b16:	1e                   	push   %ds
c0001b17:	06                   	push   %es
c0001b18:	0f a0                	push   %fs
c0001b1a:	0f a8                	push   %gs
c0001b1c:	60                   	pusha  
c0001b1d:	b0 20                	mov    $0x20,%al
c0001b1f:	e6 a0                	out    %al,$0xa0
c0001b21:	e6 20                	out    %al,$0x20
c0001b23:	6a 17                	push   $0x17
c0001b25:	ff 15 dc 62 00 c0    	call   *0xc00062dc
c0001b2b:	e9 dc 44 00 00       	jmp    c000600c <intr_exit>

c0001b30 <intr24entry>:
c0001b30:	6a 00                	push   $0x0
c0001b32:	1e                   	push   %ds
c0001b33:	06                   	push   %es
c0001b34:	0f a0                	push   %fs
c0001b36:	0f a8                	push   %gs
c0001b38:	60                   	pusha  
c0001b39:	b0 20                	mov    $0x20,%al
c0001b3b:	e6 a0                	out    %al,$0xa0
c0001b3d:	e6 20                	out    %al,$0x20
c0001b3f:	6a 18                	push   $0x18
c0001b41:	ff 15 e0 62 00 c0    	call   *0xc00062e0
c0001b47:	e9 c0 44 00 00       	jmp    c000600c <intr_exit>

c0001b4c <intr25entry>:
c0001b4c:	6a 00                	push   $0x0
c0001b4e:	1e                   	push   %ds
c0001b4f:	06                   	push   %es
c0001b50:	0f a0                	push   %fs
c0001b52:	0f a8                	push   %gs
c0001b54:	60                   	pusha  
c0001b55:	b0 20                	mov    $0x20,%al
c0001b57:	e6 a0                	out    %al,$0xa0
c0001b59:	e6 20                	out    %al,$0x20
c0001b5b:	6a 19                	push   $0x19
c0001b5d:	ff 15 e4 62 00 c0    	call   *0xc00062e4
c0001b63:	e9 a4 44 00 00       	jmp    c000600c <intr_exit>

c0001b68 <intr26entry>:
c0001b68:	6a 00                	push   $0x0
c0001b6a:	1e                   	push   %ds
c0001b6b:	06                   	push   %es
c0001b6c:	0f a0                	push   %fs
c0001b6e:	0f a8                	push   %gs
c0001b70:	60                   	pusha  
c0001b71:	b0 20                	mov    $0x20,%al
c0001b73:	e6 a0                	out    %al,$0xa0
c0001b75:	e6 20                	out    %al,$0x20
c0001b77:	6a 1a                	push   $0x1a
c0001b79:	ff 15 e8 62 00 c0    	call   *0xc00062e8
c0001b7f:	e9 88 44 00 00       	jmp    c000600c <intr_exit>

c0001b84 <intr27entry>:
c0001b84:	6a 00                	push   $0x0
c0001b86:	1e                   	push   %ds
c0001b87:	06                   	push   %es
c0001b88:	0f a0                	push   %fs
c0001b8a:	0f a8                	push   %gs
c0001b8c:	60                   	pusha  
c0001b8d:	b0 20                	mov    $0x20,%al
c0001b8f:	e6 a0                	out    %al,$0xa0
c0001b91:	e6 20                	out    %al,$0x20
c0001b93:	6a 1b                	push   $0x1b
c0001b95:	ff 15 ec 62 00 c0    	call   *0xc00062ec
c0001b9b:	e9 6c 44 00 00       	jmp    c000600c <intr_exit>

c0001ba0 <intr28entry>:
c0001ba0:	6a 00                	push   $0x0
c0001ba2:	1e                   	push   %ds
c0001ba3:	06                   	push   %es
c0001ba4:	0f a0                	push   %fs
c0001ba6:	0f a8                	push   %gs
c0001ba8:	60                   	pusha  
c0001ba9:	b0 20                	mov    $0x20,%al
c0001bab:	e6 a0                	out    %al,$0xa0
c0001bad:	e6 20                	out    %al,$0x20
c0001baf:	6a 1c                	push   $0x1c
c0001bb1:	ff 15 f0 62 00 c0    	call   *0xc00062f0
c0001bb7:	e9 50 44 00 00       	jmp    c000600c <intr_exit>

c0001bbc <intr29entry>:
c0001bbc:	6a 00                	push   $0x0
c0001bbe:	1e                   	push   %ds
c0001bbf:	06                   	push   %es
c0001bc0:	0f a0                	push   %fs
c0001bc2:	0f a8                	push   %gs
c0001bc4:	60                   	pusha  
c0001bc5:	b0 20                	mov    $0x20,%al
c0001bc7:	e6 a0                	out    %al,$0xa0
c0001bc9:	e6 20                	out    %al,$0x20
c0001bcb:	6a 1d                	push   $0x1d
c0001bcd:	ff 15 f4 62 00 c0    	call   *0xc00062f4
c0001bd3:	e9 34 44 00 00       	jmp    c000600c <intr_exit>

c0001bd8 <intr30entry>:
c0001bd8:	6a 00                	push   $0x0
c0001bda:	1e                   	push   %ds
c0001bdb:	06                   	push   %es
c0001bdc:	0f a0                	push   %fs
c0001bde:	0f a8                	push   %gs
c0001be0:	60                   	pusha  
c0001be1:	b0 20                	mov    $0x20,%al
c0001be3:	e6 a0                	out    %al,$0xa0
c0001be5:	e6 20                	out    %al,$0x20
c0001be7:	6a 1e                	push   $0x1e
c0001be9:	ff 15 f8 62 00 c0    	call   *0xc00062f8
c0001bef:	e9 18 44 00 00       	jmp    c000600c <intr_exit>

c0001bf4 <intr31entry>:
c0001bf4:	6a 00                	push   $0x0
c0001bf6:	1e                   	push   %ds
c0001bf7:	06                   	push   %es
c0001bf8:	0f a0                	push   %fs
c0001bfa:	0f a8                	push   %gs
c0001bfc:	60                   	pusha  
c0001bfd:	b0 20                	mov    $0x20,%al
c0001bff:	e6 a0                	out    %al,$0xa0
c0001c01:	e6 20                	out    %al,$0x20
c0001c03:	6a 1f                	push   $0x1f
c0001c05:	ff 15 fc 62 00 c0    	call   *0xc00062fc
c0001c0b:	e9 fc 43 00 00       	jmp    c000600c <intr_exit>

c0001c10 <intr32entry>:
c0001c10:	6a 00                	push   $0x0
c0001c12:	1e                   	push   %ds
c0001c13:	06                   	push   %es
c0001c14:	0f a0                	push   %fs
c0001c16:	0f a8                	push   %gs
c0001c18:	60                   	pusha  
c0001c19:	b0 20                	mov    $0x20,%al
c0001c1b:	e6 a0                	out    %al,$0xa0
c0001c1d:	e6 20                	out    %al,$0x20
c0001c1f:	6a 20                	push   $0x20
c0001c21:	ff 15 00 63 00 c0    	call   *0xc0006300
c0001c27:	e9 e0 43 00 00       	jmp    c000600c <intr_exit>

c0001c2c <outb>:
c0001c2c:	55                   	push   %ebp
c0001c2d:	89 e5                	mov    %esp,%ebp
c0001c2f:	83 ec 08             	sub    $0x8,%esp
c0001c32:	e8 e2 05 00 00       	call   c0002219 <__x86.get_pc_thunk.ax>
c0001c37:	05 c9 43 00 00       	add    $0x43c9,%eax
c0001c3c:	8b 55 08             	mov    0x8(%ebp),%edx
c0001c3f:	8b 45 0c             	mov    0xc(%ebp),%eax
c0001c42:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c0001c46:	88 45 f8             	mov    %al,-0x8(%ebp)
c0001c49:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c0001c4d:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c0001c51:	ee                   	out    %al,(%dx)
c0001c52:	90                   	nop
c0001c53:	c9                   	leave  
c0001c54:	c3                   	ret    

c0001c55 <outsw>:
c0001c55:	55                   	push   %ebp
c0001c56:	89 e5                	mov    %esp,%ebp
c0001c58:	56                   	push   %esi
c0001c59:	53                   	push   %ebx
c0001c5a:	83 ec 04             	sub    $0x4,%esp
c0001c5d:	e8 b7 05 00 00       	call   c0002219 <__x86.get_pc_thunk.ax>
c0001c62:	05 9e 43 00 00       	add    $0x439e,%eax
c0001c67:	8b 45 08             	mov    0x8(%ebp),%eax
c0001c6a:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0001c6e:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0001c72:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0001c75:	8b 45 10             	mov    0x10(%ebp),%eax
c0001c78:	89 cb                	mov    %ecx,%ebx
c0001c7a:	89 de                	mov    %ebx,%esi
c0001c7c:	89 c1                	mov    %eax,%ecx
c0001c7e:	fc                   	cld    
c0001c7f:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c0001c82:	89 c8                	mov    %ecx,%eax
c0001c84:	89 f3                	mov    %esi,%ebx
c0001c86:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0001c89:	89 45 10             	mov    %eax,0x10(%ebp)
c0001c8c:	90                   	nop
c0001c8d:	83 c4 04             	add    $0x4,%esp
c0001c90:	5b                   	pop    %ebx
c0001c91:	5e                   	pop    %esi
c0001c92:	5d                   	pop    %ebp
c0001c93:	c3                   	ret    

c0001c94 <inb>:
c0001c94:	55                   	push   %ebp
c0001c95:	89 e5                	mov    %esp,%ebp
c0001c97:	83 ec 14             	sub    $0x14,%esp
c0001c9a:	e8 7a 05 00 00       	call   c0002219 <__x86.get_pc_thunk.ax>
c0001c9f:	05 61 43 00 00       	add    $0x4361,%eax
c0001ca4:	8b 45 08             	mov    0x8(%ebp),%eax
c0001ca7:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0001cab:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c0001caf:	89 c2                	mov    %eax,%edx
c0001cb1:	ec                   	in     (%dx),%al
c0001cb2:	88 45 ff             	mov    %al,-0x1(%ebp)
c0001cb5:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c0001cb9:	c9                   	leave  
c0001cba:	c3                   	ret    

c0001cbb <insw>:
c0001cbb:	55                   	push   %ebp
c0001cbc:	89 e5                	mov    %esp,%ebp
c0001cbe:	57                   	push   %edi
c0001cbf:	53                   	push   %ebx
c0001cc0:	83 ec 04             	sub    $0x4,%esp
c0001cc3:	e8 51 05 00 00       	call   c0002219 <__x86.get_pc_thunk.ax>
c0001cc8:	05 38 43 00 00       	add    $0x4338,%eax
c0001ccd:	8b 45 08             	mov    0x8(%ebp),%eax
c0001cd0:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0001cd4:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0001cd8:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0001cdb:	8b 45 10             	mov    0x10(%ebp),%eax
c0001cde:	89 cb                	mov    %ecx,%ebx
c0001ce0:	89 df                	mov    %ebx,%edi
c0001ce2:	89 c1                	mov    %eax,%ecx
c0001ce4:	fc                   	cld    
c0001ce5:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0001ce8:	89 c8                	mov    %ecx,%eax
c0001cea:	89 fb                	mov    %edi,%ebx
c0001cec:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0001cef:	89 45 10             	mov    %eax,0x10(%ebp)
c0001cf2:	90                   	nop
c0001cf3:	83 c4 04             	add    $0x4,%esp
c0001cf6:	5b                   	pop    %ebx
c0001cf7:	5f                   	pop    %edi
c0001cf8:	5d                   	pop    %ebp
c0001cf9:	c3                   	ret    

c0001cfa <make_idt_desc>:
c0001cfa:	55                   	push   %ebp
c0001cfb:	89 e5                	mov    %esp,%ebp
c0001cfd:	83 ec 04             	sub    $0x4,%esp
c0001d00:	e8 14 05 00 00       	call   c0002219 <__x86.get_pc_thunk.ax>
c0001d05:	05 fb 42 00 00       	add    $0x42fb,%eax
c0001d0a:	8b 45 0c             	mov    0xc(%ebp),%eax
c0001d0d:	88 45 fc             	mov    %al,-0x4(%ebp)
c0001d10:	8b 45 10             	mov    0x10(%ebp),%eax
c0001d13:	89 c2                	mov    %eax,%edx
c0001d15:	8b 45 08             	mov    0x8(%ebp),%eax
c0001d18:	66 89 10             	mov    %dx,(%eax)
c0001d1b:	8b 45 08             	mov    0x8(%ebp),%eax
c0001d1e:	66 c7 40 02 08 00    	movw   $0x8,0x2(%eax)
c0001d24:	8b 45 08             	mov    0x8(%ebp),%eax
c0001d27:	c6 40 04 00          	movb   $0x0,0x4(%eax)
c0001d2b:	8b 45 08             	mov    0x8(%ebp),%eax
c0001d2e:	0f b6 55 fc          	movzbl -0x4(%ebp),%edx
c0001d32:	88 50 05             	mov    %dl,0x5(%eax)
c0001d35:	8b 45 10             	mov    0x10(%ebp),%eax
c0001d38:	c1 e8 10             	shr    $0x10,%eax
c0001d3b:	89 c2                	mov    %eax,%edx
c0001d3d:	8b 45 08             	mov    0x8(%ebp),%eax
c0001d40:	66 89 50 06          	mov    %dx,0x6(%eax)
c0001d44:	90                   	nop
c0001d45:	c9                   	leave  
c0001d46:	c3                   	ret    

c0001d47 <idt_desc_init>:
c0001d47:	55                   	push   %ebp
c0001d48:	89 e5                	mov    %esp,%ebp
c0001d4a:	53                   	push   %ebx
c0001d4b:	83 ec 14             	sub    $0x14,%esp
c0001d4e:	e8 2a f9 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0001d53:	81 c3 ad 42 00 00    	add    $0x42ad,%ebx
c0001d59:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001d60:	eb 31                	jmp    c0001d93 <idt_desc_init+0x4c>
c0001d62:	c7 c0 1a 60 00 c0    	mov    $0xc000601a,%eax
c0001d68:	8b 55 f4             	mov    -0xc(%ebp),%edx
c0001d6b:	8b 04 90             	mov    (%eax,%edx,4),%eax
c0001d6e:	8b 55 f4             	mov    -0xc(%ebp),%edx
c0001d71:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
c0001d78:	8d 93 a0 00 00 00    	lea    0xa0(%ebx),%edx
c0001d7e:	01 ca                	add    %ecx,%edx
c0001d80:	50                   	push   %eax
c0001d81:	68 8e 00 00 00       	push   $0x8e
c0001d86:	52                   	push   %edx
c0001d87:	e8 6e ff ff ff       	call   c0001cfa <make_idt_desc>
c0001d8c:	83 c4 0c             	add    $0xc,%esp
c0001d8f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001d93:	83 7d f4 20          	cmpl   $0x20,-0xc(%ebp)
c0001d97:	7e c9                	jle    c0001d62 <idt_desc_init+0x1b>
c0001d99:	83 ec 0c             	sub    $0xc,%esp
c0001d9c:	8d 83 c8 d5 ff ff    	lea    -0x2a38(%ebx),%eax
c0001da2:	50                   	push   %eax
c0001da3:	e8 dc f9 ff ff       	call   c0001784 <put_str>
c0001da8:	83 c4 10             	add    $0x10,%esp
c0001dab:	90                   	nop
c0001dac:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001daf:	c9                   	leave  
c0001db0:	c3                   	ret    

c0001db1 <pic_init>:
c0001db1:	55                   	push   %ebp
c0001db2:	89 e5                	mov    %esp,%ebp
c0001db4:	53                   	push   %ebx
c0001db5:	83 ec 04             	sub    $0x4,%esp
c0001db8:	e8 c0 f8 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0001dbd:	81 c3 43 42 00 00    	add    $0x4243,%ebx
c0001dc3:	6a 11                	push   $0x11
c0001dc5:	6a 20                	push   $0x20
c0001dc7:	e8 60 fe ff ff       	call   c0001c2c <outb>
c0001dcc:	83 c4 08             	add    $0x8,%esp
c0001dcf:	6a 20                	push   $0x20
c0001dd1:	6a 21                	push   $0x21
c0001dd3:	e8 54 fe ff ff       	call   c0001c2c <outb>
c0001dd8:	83 c4 08             	add    $0x8,%esp
c0001ddb:	6a 04                	push   $0x4
c0001ddd:	6a 21                	push   $0x21
c0001ddf:	e8 48 fe ff ff       	call   c0001c2c <outb>
c0001de4:	83 c4 08             	add    $0x8,%esp
c0001de7:	6a 01                	push   $0x1
c0001de9:	6a 21                	push   $0x21
c0001deb:	e8 3c fe ff ff       	call   c0001c2c <outb>
c0001df0:	83 c4 08             	add    $0x8,%esp
c0001df3:	6a 11                	push   $0x11
c0001df5:	68 a0 00 00 00       	push   $0xa0
c0001dfa:	e8 2d fe ff ff       	call   c0001c2c <outb>
c0001dff:	83 c4 08             	add    $0x8,%esp
c0001e02:	6a 28                	push   $0x28
c0001e04:	68 a1 00 00 00       	push   $0xa1
c0001e09:	e8 1e fe ff ff       	call   c0001c2c <outb>
c0001e0e:	83 c4 08             	add    $0x8,%esp
c0001e11:	6a 02                	push   $0x2
c0001e13:	68 a1 00 00 00       	push   $0xa1
c0001e18:	e8 0f fe ff ff       	call   c0001c2c <outb>
c0001e1d:	83 c4 08             	add    $0x8,%esp
c0001e20:	6a 01                	push   $0x1
c0001e22:	68 a1 00 00 00       	push   $0xa1
c0001e27:	e8 00 fe ff ff       	call   c0001c2c <outb>
c0001e2c:	83 c4 08             	add    $0x8,%esp
c0001e2f:	68 fe 00 00 00       	push   $0xfe
c0001e34:	6a 21                	push   $0x21
c0001e36:	e8 f1 fd ff ff       	call   c0001c2c <outb>
c0001e3b:	83 c4 08             	add    $0x8,%esp
c0001e3e:	68 ff 00 00 00       	push   $0xff
c0001e43:	68 a1 00 00 00       	push   $0xa1
c0001e48:	e8 df fd ff ff       	call   c0001c2c <outb>
c0001e4d:	83 c4 08             	add    $0x8,%esp
c0001e50:	83 ec 0c             	sub    $0xc,%esp
c0001e53:	8d 83 e0 d5 ff ff    	lea    -0x2a20(%ebx),%eax
c0001e59:	50                   	push   %eax
c0001e5a:	e8 25 f9 ff ff       	call   c0001784 <put_str>
c0001e5f:	83 c4 10             	add    $0x10,%esp
c0001e62:	90                   	nop
c0001e63:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001e66:	c9                   	leave  
c0001e67:	c3                   	ret    

c0001e68 <general>:
c0001e68:	55                   	push   %ebp
c0001e69:	89 e5                	mov    %esp,%ebp
c0001e6b:	53                   	push   %ebx
c0001e6c:	83 ec 14             	sub    $0x14,%esp
c0001e6f:	e8 09 f8 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0001e74:	81 c3 8c 41 00 00    	add    $0x418c,%ebx
c0001e7a:	83 7d 08 27          	cmpl   $0x27,0x8(%ebp)
c0001e7e:	0f 84 e5 00 00 00    	je     c0001f69 <general+0x101>
c0001e84:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)
c0001e88:	0f 84 db 00 00 00    	je     c0001f69 <general+0x101>
c0001e8e:	83 ec 0c             	sub    $0xc,%esp
c0001e91:	8d 83 f6 d5 ff ff    	lea    -0x2a0a(%ebx),%eax
c0001e97:	50                   	push   %eax
c0001e98:	e8 e7 f8 ff ff       	call   c0001784 <put_str>
c0001e9d:	83 c4 10             	add    $0x10,%esp
c0001ea0:	83 ec 0c             	sub    $0xc,%esp
c0001ea3:	ff 75 08             	pushl  0x8(%ebp)
c0001ea6:	e8 1c f9 ff ff       	call   c00017c7 <put_int>
c0001eab:	83 c4 10             	add    $0x10,%esp
c0001eae:	83 ec 0c             	sub    $0xc,%esp
c0001eb1:	6a 0a                	push   $0xa
c0001eb3:	e8 d8 f7 ff ff       	call   c0001690 <put_char>
c0001eb8:	83 c4 10             	add    $0x10,%esp
c0001ebb:	83 ec 0c             	sub    $0xc,%esp
c0001ebe:	6a 00                	push   $0x0
c0001ec0:	e8 9e f8 ff ff       	call   c0001763 <set_cursor>
c0001ec5:	83 c4 10             	add    $0x10,%esp
c0001ec8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001ecf:	eb 11                	jmp    c0001ee2 <general+0x7a>
c0001ed1:	83 ec 0c             	sub    $0xc,%esp
c0001ed4:	6a 20                	push   $0x20
c0001ed6:	e8 b5 f7 ff ff       	call   c0001690 <put_char>
c0001edb:	83 c4 10             	add    $0x10,%esp
c0001ede:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001ee2:	81 7d f4 3f 01 00 00 	cmpl   $0x13f,-0xc(%ebp)
c0001ee9:	7e e6                	jle    c0001ed1 <general+0x69>
c0001eeb:	83 ec 0c             	sub    $0xc,%esp
c0001eee:	8d 83 14 d6 ff ff    	lea    -0x29ec(%ebx),%eax
c0001ef4:	50                   	push   %eax
c0001ef5:	e8 8a f8 ff ff       	call   c0001784 <put_str>
c0001efa:	83 c4 10             	add    $0x10,%esp
c0001efd:	83 ec 0c             	sub    $0xc,%esp
c0001f00:	6a 58                	push   $0x58
c0001f02:	e8 5c f8 ff ff       	call   c0001763 <set_cursor>
c0001f07:	83 c4 10             	add    $0x10,%esp
c0001f0a:	c7 c0 e0 61 00 c0    	mov    $0xc00061e0,%eax
c0001f10:	8b 55 08             	mov    0x8(%ebp),%edx
c0001f13:	8b 04 90             	mov    (%eax,%edx,4),%eax
c0001f16:	83 ec 0c             	sub    $0xc,%esp
c0001f19:	50                   	push   %eax
c0001f1a:	e8 65 f8 ff ff       	call   c0001784 <put_str>
c0001f1f:	83 c4 10             	add    $0x10,%esp
c0001f22:	83 7d 08 0e          	cmpl   $0xe,0x8(%ebp)
c0001f26:	75 2d                	jne    c0001f55 <general+0xed>
c0001f28:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
c0001f2f:	0f 20 d0             	mov    %cr2,%eax
c0001f32:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0001f35:	83 ec 0c             	sub    $0xc,%esp
c0001f38:	8d 83 35 d6 ff ff    	lea    -0x29cb(%ebx),%eax
c0001f3e:	50                   	push   %eax
c0001f3f:	e8 40 f8 ff ff       	call   c0001784 <put_str>
c0001f44:	83 c4 10             	add    $0x10,%esp
c0001f47:	83 ec 0c             	sub    $0xc,%esp
c0001f4a:	ff 75 f0             	pushl  -0x10(%ebp)
c0001f4d:	e8 75 f8 ff ff       	call   c00017c7 <put_int>
c0001f52:	83 c4 10             	add    $0x10,%esp
c0001f55:	83 ec 0c             	sub    $0xc,%esp
c0001f58:	8d 83 54 d6 ff ff    	lea    -0x29ac(%ebx),%eax
c0001f5e:	50                   	push   %eax
c0001f5f:	e8 20 f8 ff ff       	call   c0001784 <put_str>
c0001f64:	83 c4 10             	add    $0x10,%esp
c0001f67:	eb fe                	jmp    c0001f67 <general+0xff>
c0001f69:	90                   	nop
c0001f6a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001f6d:	c9                   	leave  
c0001f6e:	c3                   	ret    

c0001f6f <exception_init>:
c0001f6f:	55                   	push   %ebp
c0001f70:	89 e5                	mov    %esp,%ebp
c0001f72:	53                   	push   %ebx
c0001f73:	83 ec 10             	sub    $0x10,%esp
c0001f76:	e8 9e 02 00 00       	call   c0002219 <__x86.get_pc_thunk.ax>
c0001f7b:	05 85 40 00 00       	add    $0x4085,%eax
c0001f80:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0001f86:	8d 88 73 d6 ff ff    	lea    -0x298d(%eax),%ecx
c0001f8c:	89 0a                	mov    %ecx,(%edx)
c0001f8e:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0001f94:	8d 88 80 d6 ff ff    	lea    -0x2980(%eax),%ecx
c0001f9a:	89 4a 04             	mov    %ecx,0x4(%edx)
c0001f9d:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0001fa3:	8d 88 90 d6 ff ff    	lea    -0x2970(%eax),%ecx
c0001fa9:	89 4a 08             	mov    %ecx,0x8(%edx)
c0001fac:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0001fb2:	8d 88 9e d6 ff ff    	lea    -0x2962(%eax),%ecx
c0001fb8:	89 4a 0c             	mov    %ecx,0xc(%edx)
c0001fbb:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0001fc1:	8d 88 b3 d6 ff ff    	lea    -0x294d(%eax),%ecx
c0001fc7:	89 4a 10             	mov    %ecx,0x10(%edx)
c0001fca:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0001fd0:	8d 88 c6 d6 ff ff    	lea    -0x293a(%eax),%ecx
c0001fd6:	89 4a 14             	mov    %ecx,0x14(%edx)
c0001fd9:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0001fdf:	8d 88 e3 d6 ff ff    	lea    -0x291d(%eax),%ecx
c0001fe5:	89 4a 18             	mov    %ecx,0x18(%edx)
c0001fe8:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0001fee:	8d 88 f2 d6 ff ff    	lea    -0x290e(%eax),%ecx
c0001ff4:	89 4a 1c             	mov    %ecx,0x1c(%edx)
c0001ff7:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0001ffd:	8d 88 07 d7 ff ff    	lea    -0x28f9(%eax),%ecx
c0002003:	89 4a 20             	mov    %ecx,0x20(%edx)
c0002006:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c000200c:	8d 88 1e d7 ff ff    	lea    -0x28e2(%eax),%ecx
c0002012:	89 4a 24             	mov    %ecx,0x24(%edx)
c0002015:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c000201b:	8d 88 3a d7 ff ff    	lea    -0x28c6(%eax),%ecx
c0002021:	89 4a 28             	mov    %ecx,0x28(%edx)
c0002024:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c000202a:	8d 88 50 d7 ff ff    	lea    -0x28b0(%eax),%ecx
c0002030:	89 4a 2c             	mov    %ecx,0x2c(%edx)
c0002033:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0002039:	8d 88 64 d7 ff ff    	lea    -0x289c(%eax),%ecx
c000203f:	89 4a 30             	mov    %ecx,0x30(%edx)
c0002042:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0002048:	8d 88 7a d7 ff ff    	lea    -0x2886(%eax),%ecx
c000204e:	89 4a 34             	mov    %ecx,0x34(%edx)
c0002051:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0002057:	8d 88 98 d7 ff ff    	lea    -0x2868(%eax),%ecx
c000205d:	89 4a 38             	mov    %ecx,0x38(%edx)
c0002060:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0002066:	8d 88 a3 d7 ff ff    	lea    -0x285d(%eax),%ecx
c000206c:	89 4a 3c             	mov    %ecx,0x3c(%edx)
c000206f:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0002075:	8d 88 ac d7 ff ff    	lea    -0x2854(%eax),%ecx
c000207b:	89 4a 40             	mov    %ecx,0x40(%edx)
c000207e:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0002084:	8d 88 c1 d7 ff ff    	lea    -0x283f(%eax),%ecx
c000208a:	89 4a 44             	mov    %ecx,0x44(%edx)
c000208d:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c0002093:	8d 88 d4 d7 ff ff    	lea    -0x282c(%eax),%ecx
c0002099:	89 4a 48             	mov    %ecx,0x48(%edx)
c000209c:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c00020a2:	8d 88 e6 d7 ff ff    	lea    -0x281a(%eax),%ecx
c00020a8:	89 4a 4c             	mov    %ecx,0x4c(%edx)
c00020ab:	c7 45 f8 14 00 00 00 	movl   $0x14,-0x8(%ebp)
c00020b2:	eb 16                	jmp    c00020ca <exception_init+0x15b>
c00020b4:	c7 c2 e0 61 00 c0    	mov    $0xc00061e0,%edx
c00020ba:	8b 4d f8             	mov    -0x8(%ebp),%ecx
c00020bd:	8d 98 fe d7 ff ff    	lea    -0x2802(%eax),%ebx
c00020c3:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
c00020c6:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c00020ca:	83 7d f8 20          	cmpl   $0x20,-0x8(%ebp)
c00020ce:	7e e4                	jle    c00020b4 <exception_init+0x145>
c00020d0:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c00020d7:	eb 16                	jmp    c00020ef <exception_init+0x180>
c00020d9:	c7 c2 80 62 00 c0    	mov    $0xc0006280,%edx
c00020df:	8b 4d f8             	mov    -0x8(%ebp),%ecx
c00020e2:	8d 98 68 be ff ff    	lea    -0x4198(%eax),%ebx
c00020e8:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
c00020eb:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c00020ef:	83 7d f8 20          	cmpl   $0x20,-0x8(%ebp)
c00020f3:	7e e4                	jle    c00020d9 <exception_init+0x16a>
c00020f5:	90                   	nop
c00020f6:	83 c4 10             	add    $0x10,%esp
c00020f9:	5b                   	pop    %ebx
c00020fa:	5d                   	pop    %ebp
c00020fb:	c3                   	ret    

c00020fc <idt_init>:
c00020fc:	55                   	push   %ebp
c00020fd:	89 e5                	mov    %esp,%ebp
c00020ff:	57                   	push   %edi
c0002100:	56                   	push   %esi
c0002101:	53                   	push   %ebx
c0002102:	83 ec 1c             	sub    $0x1c,%esp
c0002105:	e8 13 01 00 00       	call   c000221d <__x86.get_pc_thunk.di>
c000210a:	81 c7 f6 3e 00 00    	add    $0x3ef6,%edi
c0002110:	e8 32 fc ff ff       	call   c0001d47 <idt_desc_init>
c0002115:	e8 97 fc ff ff       	call   c0001db1 <pic_init>
c000211a:	e8 50 fe ff ff       	call   c0001f6f <exception_init>
c000211f:	8d 87 a0 00 00 00    	lea    0xa0(%edi),%eax
c0002125:	ba 00 00 00 00       	mov    $0x0,%edx
c000212a:	0f a4 c2 10          	shld   $0x10,%eax,%edx
c000212e:	c1 e0 10             	shl    $0x10,%eax
c0002131:	89 d1                	mov    %edx,%ecx
c0002133:	89 c2                	mov    %eax,%edx
c0002135:	89 d0                	mov    %edx,%eax
c0002137:	0d 07 01 00 00       	or     $0x107,%eax
c000213c:	89 c3                	mov    %eax,%ebx
c000213e:	89 c8                	mov    %ecx,%eax
c0002140:	80 cc 00             	or     $0x0,%ah
c0002143:	89 c6                	mov    %eax,%esi
c0002145:	89 5d e0             	mov    %ebx,-0x20(%ebp)
c0002148:	89 75 e4             	mov    %esi,-0x1c(%ebp)
c000214b:	0f 01 5d e0          	lidtl  -0x20(%ebp)
c000214f:	83 ec 0c             	sub    $0xc,%esp
c0002152:	8d 87 08 d8 ff ff    	lea    -0x27f8(%edi),%eax
c0002158:	50                   	push   %eax
c0002159:	89 fb                	mov    %edi,%ebx
c000215b:	e8 24 f6 ff ff       	call   c0001784 <put_str>
c0002160:	83 c4 10             	add    $0x10,%esp
c0002163:	90                   	nop
c0002164:	8d 65 f4             	lea    -0xc(%ebp),%esp
c0002167:	5b                   	pop    %ebx
c0002168:	5e                   	pop    %esi
c0002169:	5f                   	pop    %edi
c000216a:	5d                   	pop    %ebp
c000216b:	c3                   	ret    

c000216c <intopen>:
c000216c:	55                   	push   %ebp
c000216d:	89 e5                	mov    %esp,%ebp
c000216f:	83 ec 10             	sub    $0x10,%esp
c0002172:	e8 a2 00 00 00       	call   c0002219 <__x86.get_pc_thunk.ax>
c0002177:	05 89 3e 00 00       	add    $0x3e89,%eax
c000217c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c0002183:	9c                   	pushf  
c0002184:	58                   	pop    %eax
c0002185:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002188:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000218b:	25 00 02 00 00       	and    $0x200,%eax
c0002190:	85 c0                	test   %eax,%eax
c0002192:	75 01                	jne    c0002195 <intopen+0x29>
c0002194:	fb                   	sti    
c0002195:	90                   	nop
c0002196:	c9                   	leave  
c0002197:	c3                   	ret    

c0002198 <intclose>:
c0002198:	55                   	push   %ebp
c0002199:	89 e5                	mov    %esp,%ebp
c000219b:	83 ec 10             	sub    $0x10,%esp
c000219e:	e8 76 00 00 00       	call   c0002219 <__x86.get_pc_thunk.ax>
c00021a3:	05 5d 3e 00 00       	add    $0x3e5d,%eax
c00021a8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c00021af:	9c                   	pushf  
c00021b0:	58                   	pop    %eax
c00021b1:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00021b4:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00021b7:	25 00 02 00 00       	and    $0x200,%eax
c00021bc:	85 c0                	test   %eax,%eax
c00021be:	74 01                	je     c00021c1 <intclose+0x29>
c00021c0:	fa                   	cli    
c00021c1:	90                   	nop
c00021c2:	c9                   	leave  
c00021c3:	c3                   	ret    

c00021c4 <intr_status>:
c00021c4:	55                   	push   %ebp
c00021c5:	89 e5                	mov    %esp,%ebp
c00021c7:	83 ec 10             	sub    $0x10,%esp
c00021ca:	e8 4a 00 00 00       	call   c0002219 <__x86.get_pc_thunk.ax>
c00021cf:	05 31 3e 00 00       	add    $0x3e31,%eax
c00021d4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c00021db:	9c                   	pushf  
c00021dc:	58                   	pop    %eax
c00021dd:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00021e0:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00021e3:	25 00 02 00 00       	and    $0x200,%eax
c00021e8:	85 c0                	test   %eax,%eax
c00021ea:	74 07                	je     c00021f3 <intr_status+0x2f>
c00021ec:	b8 01 00 00 00       	mov    $0x1,%eax
c00021f1:	eb 05                	jmp    c00021f8 <intr_status+0x34>
c00021f3:	b8 00 00 00 00       	mov    $0x0,%eax
c00021f8:	c9                   	leave  
c00021f9:	c3                   	ret    

c00021fa <register_handler>:
c00021fa:	55                   	push   %ebp
c00021fb:	89 e5                	mov    %esp,%ebp
c00021fd:	e8 17 00 00 00       	call   c0002219 <__x86.get_pc_thunk.ax>
c0002202:	05 fe 3d 00 00       	add    $0x3dfe,%eax
c0002207:	c7 c0 80 62 00 c0    	mov    $0xc0006280,%eax
c000220d:	8b 55 08             	mov    0x8(%ebp),%edx
c0002210:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0002213:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
c0002216:	90                   	nop
c0002217:	5d                   	pop    %ebp
c0002218:	c3                   	ret    

c0002219 <__x86.get_pc_thunk.ax>:
c0002219:	8b 04 24             	mov    (%esp),%eax
c000221c:	c3                   	ret    

c000221d <__x86.get_pc_thunk.di>:
c000221d:	8b 3c 24             	mov    (%esp),%edi
c0002220:	c3                   	ret    

c0002221 <bitmap_set>:
c0002221:	55                   	push   %ebp
c0002222:	89 e5                	mov    %esp,%ebp
c0002224:	83 ec 14             	sub    $0x14,%esp
c0002227:	e8 ed ff ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c000222c:	05 d4 3d 00 00       	add    $0x3dd4,%eax
c0002231:	8b 45 10             	mov    0x10(%ebp),%eax
c0002234:	88 45 ec             	mov    %al,-0x14(%ebp)
c0002237:	8b 45 0c             	mov    0xc(%ebp),%eax
c000223a:	c1 e8 03             	shr    $0x3,%eax
c000223d:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002240:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002243:	83 e0 07             	and    $0x7,%eax
c0002246:	89 45 f8             	mov    %eax,-0x8(%ebp)
c0002249:	80 7d ec 00          	cmpb   $0x0,-0x14(%ebp)
c000224d:	74 30                	je     c000227f <bitmap_set+0x5e>
c000224f:	0f b6 55 ec          	movzbl -0x14(%ebp),%edx
c0002253:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002256:	89 c1                	mov    %eax,%ecx
c0002258:	d3 e2                	shl    %cl,%edx
c000225a:	89 d0                	mov    %edx,%eax
c000225c:	88 45 ec             	mov    %al,-0x14(%ebp)
c000225f:	8b 45 08             	mov    0x8(%ebp),%eax
c0002262:	8b 50 04             	mov    0x4(%eax),%edx
c0002265:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002268:	01 d0                	add    %edx,%eax
c000226a:	0f b6 00             	movzbl (%eax),%eax
c000226d:	8b 55 08             	mov    0x8(%ebp),%edx
c0002270:	8b 4a 04             	mov    0x4(%edx),%ecx
c0002273:	8b 55 fc             	mov    -0x4(%ebp),%edx
c0002276:	01 ca                	add    %ecx,%edx
c0002278:	0a 45 ec             	or     -0x14(%ebp),%al
c000227b:	88 02                	mov    %al,(%edx)
c000227d:	eb 31                	jmp    c00022b0 <bitmap_set+0x8f>
c000227f:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002282:	ba 01 00 00 00       	mov    $0x1,%edx
c0002287:	89 c1                	mov    %eax,%ecx
c0002289:	d3 e2                	shl    %cl,%edx
c000228b:	89 d0                	mov    %edx,%eax
c000228d:	f7 d0                	not    %eax
c000228f:	88 45 ec             	mov    %al,-0x14(%ebp)
c0002292:	8b 45 08             	mov    0x8(%ebp),%eax
c0002295:	8b 50 04             	mov    0x4(%eax),%edx
c0002298:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000229b:	01 d0                	add    %edx,%eax
c000229d:	0f b6 00             	movzbl (%eax),%eax
c00022a0:	8b 55 08             	mov    0x8(%ebp),%edx
c00022a3:	8b 4a 04             	mov    0x4(%edx),%ecx
c00022a6:	8b 55 fc             	mov    -0x4(%ebp),%edx
c00022a9:	01 ca                	add    %ecx,%edx
c00022ab:	22 45 ec             	and    -0x14(%ebp),%al
c00022ae:	88 02                	mov    %al,(%edx)
c00022b0:	90                   	nop
c00022b1:	c9                   	leave  
c00022b2:	c3                   	ret    

c00022b3 <bitmap_init>:
c00022b3:	55                   	push   %ebp
c00022b4:	89 e5                	mov    %esp,%ebp
c00022b6:	83 ec 10             	sub    $0x10,%esp
c00022b9:	e8 5b ff ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c00022be:	05 42 3d 00 00       	add    $0x3d42,%eax
c00022c3:	8b 45 08             	mov    0x8(%ebp),%eax
c00022c6:	8b 40 04             	mov    0x4(%eax),%eax
c00022c9:	89 45 f8             	mov    %eax,-0x8(%ebp)
c00022cc:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c00022d3:	eb 10                	jmp    c00022e5 <bitmap_init+0x32>
c00022d5:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00022d8:	8d 50 01             	lea    0x1(%eax),%edx
c00022db:	89 55 f8             	mov    %edx,-0x8(%ebp)
c00022de:	c6 00 00             	movb   $0x0,(%eax)
c00022e1:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
c00022e5:	8b 45 08             	mov    0x8(%ebp),%eax
c00022e8:	8b 10                	mov    (%eax),%edx
c00022ea:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00022ed:	39 c2                	cmp    %eax,%edx
c00022ef:	77 e4                	ja     c00022d5 <bitmap_init+0x22>
c00022f1:	90                   	nop
c00022f2:	c9                   	leave  
c00022f3:	c3                   	ret    

c00022f4 <bitmap_state>:
c00022f4:	55                   	push   %ebp
c00022f5:	89 e5                	mov    %esp,%ebp
c00022f7:	83 ec 10             	sub    $0x10,%esp
c00022fa:	e8 1a ff ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c00022ff:	05 01 3d 00 00       	add    $0x3d01,%eax
c0002304:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002307:	c1 e8 03             	shr    $0x3,%eax
c000230a:	89 45 fc             	mov    %eax,-0x4(%ebp)
c000230d:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002310:	83 e0 07             	and    $0x7,%eax
c0002313:	89 45 f8             	mov    %eax,-0x8(%ebp)
c0002316:	8b 45 08             	mov    0x8(%ebp),%eax
c0002319:	8b 50 04             	mov    0x4(%eax),%edx
c000231c:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000231f:	01 d0                	add    %edx,%eax
c0002321:	0f b6 00             	movzbl (%eax),%eax
c0002324:	0f b6 d0             	movzbl %al,%edx
c0002327:	8b 45 f8             	mov    -0x8(%ebp),%eax
c000232a:	89 c1                	mov    %eax,%ecx
c000232c:	d3 fa                	sar    %cl,%edx
c000232e:	89 d0                	mov    %edx,%eax
c0002330:	83 e0 01             	and    $0x1,%eax
c0002333:	c9                   	leave  
c0002334:	c3                   	ret    

c0002335 <memory_pool_init>:
c0002335:	55                   	push   %ebp
c0002336:	89 e5                	mov    %esp,%ebp
c0002338:	e8 dc fe ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c000233d:	05 c3 3c 00 00       	add    $0x3cc3,%eax
c0002342:	8b 45 10             	mov    0x10(%ebp),%eax
c0002345:	8d 50 07             	lea    0x7(%eax),%edx
c0002348:	85 c0                	test   %eax,%eax
c000234a:	0f 48 c2             	cmovs  %edx,%eax
c000234d:	c1 f8 03             	sar    $0x3,%eax
c0002350:	89 c2                	mov    %eax,%edx
c0002352:	8b 45 08             	mov    0x8(%ebp),%eax
c0002355:	89 10                	mov    %edx,(%eax)
c0002357:	8b 55 14             	mov    0x14(%ebp),%edx
c000235a:	8b 45 08             	mov    0x8(%ebp),%eax
c000235d:	89 50 04             	mov    %edx,0x4(%eax)
c0002360:	8b 45 10             	mov    0x10(%ebp),%eax
c0002363:	c1 e0 0c             	shl    $0xc,%eax
c0002366:	89 c2                	mov    %eax,%edx
c0002368:	8b 45 08             	mov    0x8(%ebp),%eax
c000236b:	89 50 08             	mov    %edx,0x8(%eax)
c000236e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002371:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002374:	89 50 0c             	mov    %edx,0xc(%eax)
c0002377:	8b 45 08             	mov    0x8(%ebp),%eax
c000237a:	50                   	push   %eax
c000237b:	e8 33 ff ff ff       	call   c00022b3 <bitmap_init>
c0002380:	83 c4 04             	add    $0x4,%esp
c0002383:	90                   	nop
c0002384:	c9                   	leave  
c0002385:	c3                   	ret    

c0002386 <bitmap_init_all>:
c0002386:	55                   	push   %ebp
c0002387:	89 e5                	mov    %esp,%ebp
c0002389:	53                   	push   %ebx
c000238a:	83 ec 30             	sub    $0x30,%esp
c000238d:	e8 eb f2 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002392:	81 c3 6e 3c 00 00    	add    $0x3c6e,%ebx
c0002398:	c7 45 f8 00 00 00 02 	movl   $0x2000000,-0x8(%ebp)
c000239f:	c7 45 f4 00 00 20 00 	movl   $0x200000,-0xc(%ebp)
c00023a6:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00023a9:	2b 45 f4             	sub    -0xc(%ebp),%eax
c00023ac:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00023af:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00023b2:	c1 e8 0c             	shr    $0xc,%eax
c00023b5:	89 45 ec             	mov    %eax,-0x14(%ebp)
c00023b8:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00023bb:	d1 e8                	shr    %eax
c00023bd:	89 45 e8             	mov    %eax,-0x18(%ebp)
c00023c0:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00023c3:	2b 45 e8             	sub    -0x18(%ebp),%eax
c00023c6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
c00023c9:	8b 45 e8             	mov    -0x18(%ebp),%eax
c00023cc:	c1 e8 03             	shr    $0x3,%eax
c00023cf:	89 45 e0             	mov    %eax,-0x20(%ebp)
c00023d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c00023d5:	c1 e8 03             	shr    $0x3,%eax
c00023d8:	89 45 dc             	mov    %eax,-0x24(%ebp)
c00023db:	c7 45 d8 00 00 20 00 	movl   $0x200000,-0x28(%ebp)
c00023e2:	8b 45 e8             	mov    -0x18(%ebp),%eax
c00023e5:	c1 e0 0c             	shl    $0xc,%eax
c00023e8:	89 c2                	mov    %eax,%edx
c00023ea:	8b 45 d8             	mov    -0x28(%ebp),%eax
c00023ed:	01 d0                	add    %edx,%eax
c00023ef:	89 45 d4             	mov    %eax,-0x2c(%ebp)
c00023f2:	c7 45 d0 00 a0 09 c0 	movl   $0xc009a000,-0x30(%ebp)
c00023f9:	8b 55 d0             	mov    -0x30(%ebp),%edx
c00023fc:	8b 45 e0             	mov    -0x20(%ebp),%eax
c00023ff:	01 d0                	add    %edx,%eax
c0002401:	89 45 cc             	mov    %eax,-0x34(%ebp)
c0002404:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002407:	ff 75 d0             	pushl  -0x30(%ebp)
c000240a:	50                   	push   %eax
c000240b:	ff 75 d8             	pushl  -0x28(%ebp)
c000240e:	c7 c0 20 63 00 c0    	mov    $0xc0006320,%eax
c0002414:	50                   	push   %eax
c0002415:	e8 1b ff ff ff       	call   c0002335 <memory_pool_init>
c000241a:	83 c4 10             	add    $0x10,%esp
c000241d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c0002420:	ff 75 cc             	pushl  -0x34(%ebp)
c0002423:	50                   	push   %eax
c0002424:	ff 75 d4             	pushl  -0x2c(%ebp)
c0002427:	c7 c0 10 63 00 c0    	mov    $0xc0006310,%eax
c000242d:	50                   	push   %eax
c000242e:	e8 02 ff ff ff       	call   c0002335 <memory_pool_init>
c0002433:	83 c4 10             	add    $0x10,%esp
c0002436:	c7 c0 04 63 00 c0    	mov    $0xc0006304,%eax
c000243c:	c7 40 08 00 00 10 c0 	movl   $0xc0100000,0x8(%eax)
c0002443:	c7 c0 04 63 00 c0    	mov    $0xc0006304,%eax
c0002449:	8b 55 e0             	mov    -0x20(%ebp),%edx
c000244c:	89 10                	mov    %edx,(%eax)
c000244e:	8b 55 e0             	mov    -0x20(%ebp),%edx
c0002451:	8b 45 dc             	mov    -0x24(%ebp),%eax
c0002454:	01 d0                	add    %edx,%eax
c0002456:	2d 00 60 f6 3f       	sub    $0x3ff66000,%eax
c000245b:	89 c2                	mov    %eax,%edx
c000245d:	c7 c0 04 63 00 c0    	mov    $0xc0006304,%eax
c0002463:	89 50 04             	mov    %edx,0x4(%eax)
c0002466:	c7 c0 04 63 00 c0    	mov    $0xc0006304,%eax
c000246c:	50                   	push   %eax
c000246d:	e8 41 fe ff ff       	call   c00022b3 <bitmap_init>
c0002472:	83 c4 04             	add    $0x4,%esp
c0002475:	90                   	nop
c0002476:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002479:	c9                   	leave  
c000247a:	c3                   	ret    

c000247b <bitmap_scan>:
c000247b:	55                   	push   %ebp
c000247c:	89 e5                	mov    %esp,%ebp
c000247e:	83 ec 10             	sub    $0x10,%esp
c0002481:	e8 93 fd ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0002486:	05 7a 3b 00 00       	add    $0x3b7a,%eax
c000248b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c0002492:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c0002499:	eb 24                	jmp    c00024bf <bitmap_scan+0x44>
c000249b:	8b 45 f8             	mov    -0x8(%ebp),%eax
c000249e:	50                   	push   %eax
c000249f:	ff 75 08             	pushl  0x8(%ebp)
c00024a2:	e8 4d fe ff ff       	call   c00022f4 <bitmap_state>
c00024a7:	83 c4 08             	add    $0x8,%esp
c00024aa:	85 c0                	test   %eax,%eax
c00024ac:	75 06                	jne    c00024b4 <bitmap_scan+0x39>
c00024ae:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
c00024b2:	eb 07                	jmp    c00024bb <bitmap_scan+0x40>
c00024b4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c00024bb:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c00024bf:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00024c2:	39 45 0c             	cmp    %eax,0xc(%ebp)
c00024c5:	76 13                	jbe    c00024da <bitmap_scan+0x5f>
c00024c7:	8b 45 08             	mov    0x8(%ebp),%eax
c00024ca:	8b 00                	mov    (%eax),%eax
c00024cc:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx
c00024d3:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00024d6:	39 c2                	cmp    %eax,%edx
c00024d8:	77 c1                	ja     c000249b <bitmap_scan+0x20>
c00024da:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00024dd:	39 45 0c             	cmp    %eax,0xc(%ebp)
c00024e0:	75 08                	jne    c00024ea <bitmap_scan+0x6f>
c00024e2:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00024e5:	2b 45 0c             	sub    0xc(%ebp),%eax
c00024e8:	eb 05                	jmp    c00024ef <bitmap_scan+0x74>
c00024ea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
c00024ef:	c9                   	leave  
c00024f0:	c3                   	ret    

c00024f1 <vaddr_get>:
c00024f1:	55                   	push   %ebp
c00024f2:	89 e5                	mov    %esp,%ebp
c00024f4:	53                   	push   %ebx
c00024f5:	83 ec 10             	sub    $0x10,%esp
c00024f8:	e8 80 f1 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c00024fd:	81 c3 03 3b 00 00    	add    $0x3b03,%ebx
c0002503:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002507:	75 6b                	jne    c0002574 <vaddr_get+0x83>
c0002509:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
c0002510:	ff 75 0c             	pushl  0xc(%ebp)
c0002513:	c7 c0 04 63 00 c0    	mov    $0xc0006304,%eax
c0002519:	50                   	push   %eax
c000251a:	e8 5c ff ff ff       	call   c000247b <bitmap_scan>
c000251f:	83 c4 08             	add    $0x8,%esp
c0002522:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002525:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
c0002529:	75 07                	jne    c0002532 <vaddr_get+0x41>
c000252b:	b8 00 00 00 00       	mov    $0x0,%eax
c0002530:	eb 47                	jmp    c0002579 <vaddr_get+0x88>
c0002532:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c0002539:	eb 1e                	jmp    c0002559 <vaddr_get+0x68>
c000253b:	8b 55 f4             	mov    -0xc(%ebp),%edx
c000253e:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002541:	01 d0                	add    %edx,%eax
c0002543:	6a 01                	push   $0x1
c0002545:	50                   	push   %eax
c0002546:	c7 c0 04 63 00 c0    	mov    $0xc0006304,%eax
c000254c:	50                   	push   %eax
c000254d:	e8 cf fc ff ff       	call   c0002221 <bitmap_set>
c0002552:	83 c4 0c             	add    $0xc,%esp
c0002555:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c0002559:	8b 45 f8             	mov    -0x8(%ebp),%eax
c000255c:	39 45 0c             	cmp    %eax,0xc(%ebp)
c000255f:	77 da                	ja     c000253b <vaddr_get+0x4a>
c0002561:	c7 c0 04 63 00 c0    	mov    $0xc0006304,%eax
c0002567:	8b 40 08             	mov    0x8(%eax),%eax
c000256a:	8b 55 f4             	mov    -0xc(%ebp),%edx
c000256d:	c1 e2 0c             	shl    $0xc,%edx
c0002570:	01 d0                	add    %edx,%eax
c0002572:	eb 05                	jmp    c0002579 <vaddr_get+0x88>
c0002574:	b8 00 00 00 00       	mov    $0x0,%eax
c0002579:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000257c:	c9                   	leave  
c000257d:	c3                   	ret    

c000257e <pde_ptr>:
c000257e:	55                   	push   %ebp
c000257f:	89 e5                	mov    %esp,%ebp
c0002581:	83 ec 10             	sub    $0x10,%esp
c0002584:	e8 90 fc ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0002589:	05 77 3a 00 00       	add    $0x3a77,%eax
c000258e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002591:	c1 e8 16             	shr    $0x16,%eax
c0002594:	05 00 fc ff 3f       	add    $0x3ffffc00,%eax
c0002599:	c1 e0 02             	shl    $0x2,%eax
c000259c:	89 45 fc             	mov    %eax,-0x4(%ebp)
c000259f:	90                   	nop
c00025a0:	c9                   	leave  
c00025a1:	c3                   	ret    

c00025a2 <pte_ptr>:
c00025a2:	55                   	push   %ebp
c00025a3:	89 e5                	mov    %esp,%ebp
c00025a5:	83 ec 10             	sub    $0x10,%esp
c00025a8:	e8 6c fc ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c00025ad:	05 53 3a 00 00       	add    $0x3a53,%eax
c00025b2:	8b 45 08             	mov    0x8(%ebp),%eax
c00025b5:	c1 e8 0a             	shr    $0xa,%eax
c00025b8:	25 00 f0 3f 00       	and    $0x3ff000,%eax
c00025bd:	89 c2                	mov    %eax,%edx
c00025bf:	8b 45 08             	mov    0x8(%ebp),%eax
c00025c2:	c1 e8 0c             	shr    $0xc,%eax
c00025c5:	25 ff 03 00 00       	and    $0x3ff,%eax
c00025ca:	c1 e0 02             	shl    $0x2,%eax
c00025cd:	01 d0                	add    %edx,%eax
c00025cf:	2d 00 00 40 00       	sub    $0x400000,%eax
c00025d4:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00025d7:	90                   	nop
c00025d8:	c9                   	leave  
c00025d9:	c3                   	ret    

c00025da <palloc>:
c00025da:	55                   	push   %ebp
c00025db:	89 e5                	mov    %esp,%ebp
c00025dd:	83 ec 10             	sub    $0x10,%esp
c00025e0:	e8 34 fc ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c00025e5:	05 1b 3a 00 00       	add    $0x3a1b,%eax
c00025ea:	8b 45 08             	mov    0x8(%ebp),%eax
c00025ed:	6a 01                	push   $0x1
c00025ef:	50                   	push   %eax
c00025f0:	e8 86 fe ff ff       	call   c000247b <bitmap_scan>
c00025f5:	83 c4 08             	add    $0x8,%esp
c00025f8:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00025fb:	8b 55 fc             	mov    -0x4(%ebp),%edx
c00025fe:	8b 45 08             	mov    0x8(%ebp),%eax
c0002601:	6a 01                	push   $0x1
c0002603:	52                   	push   %edx
c0002604:	50                   	push   %eax
c0002605:	e8 17 fc ff ff       	call   c0002221 <bitmap_set>
c000260a:	83 c4 0c             	add    $0xc,%esp
c000260d:	8b 45 08             	mov    0x8(%ebp),%eax
c0002610:	8b 40 0c             	mov    0xc(%eax),%eax
c0002613:	8b 55 fc             	mov    -0x4(%ebp),%edx
c0002616:	c1 e2 0c             	shl    $0xc,%edx
c0002619:	01 d0                	add    %edx,%eax
c000261b:	c9                   	leave  
c000261c:	c3                   	ret    

c000261d <page_table_add>:
c000261d:	55                   	push   %ebp
c000261e:	89 e5                	mov    %esp,%ebp
c0002620:	53                   	push   %ebx
c0002621:	83 ec 14             	sub    $0x14,%esp
c0002624:	e8 54 f0 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002629:	81 c3 d7 39 00 00    	add    $0x39d7,%ebx
c000262f:	8b 45 08             	mov    0x8(%ebp),%eax
c0002632:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002635:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002638:	89 45 f0             	mov    %eax,-0x10(%ebp)
c000263b:	83 ec 0c             	sub    $0xc,%esp
c000263e:	8d 83 15 d8 ff ff    	lea    -0x27eb(%ebx),%eax
c0002644:	50                   	push   %eax
c0002645:	e8 3a f1 ff ff       	call   c0001784 <put_str>
c000264a:	83 c4 10             	add    $0x10,%esp
c000264d:	83 ec 0c             	sub    $0xc,%esp
c0002650:	ff 75 f4             	pushl  -0xc(%ebp)
c0002653:	e8 6f f1 ff ff       	call   c00017c7 <put_int>
c0002658:	83 c4 10             	add    $0x10,%esp
c000265b:	83 ec 0c             	sub    $0xc,%esp
c000265e:	6a 20                	push   $0x20
c0002660:	e8 2b f0 ff ff       	call   c0001690 <put_char>
c0002665:	83 c4 10             	add    $0x10,%esp
c0002668:	83 ec 0c             	sub    $0xc,%esp
c000266b:	8d 83 1c d8 ff ff    	lea    -0x27e4(%ebx),%eax
c0002671:	50                   	push   %eax
c0002672:	e8 0d f1 ff ff       	call   c0001784 <put_str>
c0002677:	83 c4 10             	add    $0x10,%esp
c000267a:	83 ec 0c             	sub    $0xc,%esp
c000267d:	ff 75 f0             	pushl  -0x10(%ebp)
c0002680:	e8 42 f1 ff ff       	call   c00017c7 <put_int>
c0002685:	83 c4 10             	add    $0x10,%esp
c0002688:	83 ec 0c             	sub    $0xc,%esp
c000268b:	6a 0a                	push   $0xa
c000268d:	e8 fe ef ff ff       	call   c0001690 <put_char>
c0002692:	83 c4 10             	add    $0x10,%esp
c0002695:	83 ec 0c             	sub    $0xc,%esp
c0002698:	ff 75 f4             	pushl  -0xc(%ebp)
c000269b:	e8 de fe ff ff       	call   c000257e <pde_ptr>
c00026a0:	83 c4 10             	add    $0x10,%esp
c00026a3:	89 45 ec             	mov    %eax,-0x14(%ebp)
c00026a6:	83 ec 0c             	sub    $0xc,%esp
c00026a9:	ff 75 f4             	pushl  -0xc(%ebp)
c00026ac:	e8 f1 fe ff ff       	call   c00025a2 <pte_ptr>
c00026b1:	83 c4 10             	add    $0x10,%esp
c00026b4:	89 45 e8             	mov    %eax,-0x18(%ebp)
c00026b7:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00026ba:	8b 00                	mov    (%eax),%eax
c00026bc:	83 e0 01             	and    $0x1,%eax
c00026bf:	85 c0                	test   %eax,%eax
c00026c1:	75 46                	jne    c0002709 <page_table_add+0xec>
c00026c3:	83 ec 0c             	sub    $0xc,%esp
c00026c6:	c7 c0 20 63 00 c0    	mov    $0xc0006320,%eax
c00026cc:	50                   	push   %eax
c00026cd:	e8 08 ff ff ff       	call   c00025da <palloc>
c00026d2:	83 c4 10             	add    $0x10,%esp
c00026d5:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c00026da:	83 c8 07             	or     $0x7,%eax
c00026dd:	89 c2                	mov    %eax,%edx
c00026df:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00026e2:	89 10                	mov    %edx,(%eax)
c00026e4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
c00026e8:	74 07                	je     c00026f1 <page_table_add+0xd4>
c00026ea:	b8 01 00 00 00       	mov    $0x1,%eax
c00026ef:	eb 05                	jmp    c00026f6 <page_table_add+0xd9>
c00026f1:	b8 00 00 00 00       	mov    $0x0,%eax
c00026f6:	83 ec 04             	sub    $0x4,%esp
c00026f9:	68 00 10 00 00       	push   $0x1000
c00026fe:	6a 00                	push   $0x0
c0002700:	50                   	push   %eax
c0002701:	e8 0e 01 00 00       	call   c0002814 <memset>
c0002706:	83 c4 10             	add    $0x10,%esp
c0002709:	8b 45 e8             	mov    -0x18(%ebp),%eax
c000270c:	8b 00                	mov    (%eax),%eax
c000270e:	83 e0 01             	and    $0x1,%eax
c0002711:	85 c0                	test   %eax,%eax
c0002713:	74 26                	je     c000273b <page_table_add+0x11e>
c0002715:	e8 7e fa ff ff       	call   c0002198 <intclose>
c000271a:	83 ec 0c             	sub    $0xc,%esp
c000271d:	6a 0a                	push   $0xa
c000271f:	e8 6c ef ff ff       	call   c0001690 <put_char>
c0002724:	83 c4 10             	add    $0x10,%esp
c0002727:	83 ec 0c             	sub    $0xc,%esp
c000272a:	8d 83 23 d8 ff ff    	lea    -0x27dd(%ebx),%eax
c0002730:	50                   	push   %eax
c0002731:	e8 4e f0 ff ff       	call   c0001784 <put_str>
c0002736:	83 c4 10             	add    $0x10,%esp
c0002739:	eb fe                	jmp    c0002739 <page_table_add+0x11c>
c000273b:	8b 45 f0             	mov    -0x10(%ebp),%eax
c000273e:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002743:	83 c8 07             	or     $0x7,%eax
c0002746:	89 c2                	mov    %eax,%edx
c0002748:	8b 45 e8             	mov    -0x18(%ebp),%eax
c000274b:	89 10                	mov    %edx,(%eax)
c000274d:	90                   	nop
c000274e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002751:	c9                   	leave  
c0002752:	c3                   	ret    

c0002753 <malloc>:
c0002753:	55                   	push   %ebp
c0002754:	89 e5                	mov    %esp,%ebp
c0002756:	53                   	push   %ebx
c0002757:	83 ec 14             	sub    $0x14,%esp
c000275a:	e8 1e ef ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c000275f:	81 c3 a1 38 00 00    	add    $0x38a1,%ebx
c0002765:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002769:	75 55                	jne    c00027c0 <malloc+0x6d>
c000276b:	ff 75 0c             	pushl  0xc(%ebp)
c000276e:	6a 00                	push   $0x0
c0002770:	e8 7c fd ff ff       	call   c00024f1 <vaddr_get>
c0002775:	83 c4 08             	add    $0x8,%esp
c0002778:	89 45 f0             	mov    %eax,-0x10(%ebp)
c000277b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0002782:	eb 2f                	jmp    c00027b3 <malloc+0x60>
c0002784:	c7 c0 20 63 00 c0    	mov    $0xc0006320,%eax
c000278a:	50                   	push   %eax
c000278b:	e8 4a fe ff ff       	call   c00025da <palloc>
c0002790:	83 c4 04             	add    $0x4,%esp
c0002793:	89 c2                	mov    %eax,%edx
c0002795:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002798:	c1 e0 0c             	shl    $0xc,%eax
c000279b:	89 c1                	mov    %eax,%ecx
c000279d:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00027a0:	01 c8                	add    %ecx,%eax
c00027a2:	83 ec 08             	sub    $0x8,%esp
c00027a5:	52                   	push   %edx
c00027a6:	50                   	push   %eax
c00027a7:	e8 71 fe ff ff       	call   c000261d <page_table_add>
c00027ac:	83 c4 10             	add    $0x10,%esp
c00027af:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c00027b3:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00027b6:	39 45 0c             	cmp    %eax,0xc(%ebp)
c00027b9:	77 c9                	ja     c0002784 <malloc+0x31>
c00027bb:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00027be:	eb 05                	jmp    c00027c5 <malloc+0x72>
c00027c0:	b8 00 00 00 00       	mov    $0x0,%eax
c00027c5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00027c8:	c9                   	leave  
c00027c9:	c3                   	ret    

c00027ca <get_kernel_pages>:
c00027ca:	55                   	push   %ebp
c00027cb:	89 e5                	mov    %esp,%ebp
c00027cd:	53                   	push   %ebx
c00027ce:	83 ec 14             	sub    $0x14,%esp
c00027d1:	e8 a7 ee ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c00027d6:	81 c3 2a 38 00 00    	add    $0x382a,%ebx
c00027dc:	83 ec 08             	sub    $0x8,%esp
c00027df:	ff 75 08             	pushl  0x8(%ebp)
c00027e2:	6a 00                	push   $0x0
c00027e4:	e8 6a ff ff ff       	call   c0002753 <malloc>
c00027e9:	83 c4 10             	add    $0x10,%esp
c00027ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00027ef:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00027f3:	74 17                	je     c000280c <get_kernel_pages+0x42>
c00027f5:	8b 45 08             	mov    0x8(%ebp),%eax
c00027f8:	c1 e0 0c             	shl    $0xc,%eax
c00027fb:	83 ec 04             	sub    $0x4,%esp
c00027fe:	50                   	push   %eax
c00027ff:	6a 00                	push   $0x0
c0002801:	ff 75 f4             	pushl  -0xc(%ebp)
c0002804:	e8 0b 00 00 00       	call   c0002814 <memset>
c0002809:	83 c4 10             	add    $0x10,%esp
c000280c:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000280f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002812:	c9                   	leave  
c0002813:	c3                   	ret    

c0002814 <memset>:
c0002814:	55                   	push   %ebp
c0002815:	89 e5                	mov    %esp,%ebp
c0002817:	53                   	push   %ebx
c0002818:	83 ec 24             	sub    $0x24,%esp
c000281b:	e8 5d ee ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002820:	81 c3 e0 37 00 00    	add    $0x37e0,%ebx
c0002826:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002829:	88 45 e4             	mov    %al,-0x1c(%ebp)
c000282c:	8b 45 08             	mov    0x8(%ebp),%eax
c000282f:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002832:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002836:	75 35                	jne    c000286d <memset+0x59>
c0002838:	e8 5b f9 ff ff       	call   c0002198 <intclose>
c000283d:	83 ec 0c             	sub    $0xc,%esp
c0002840:	6a 0a                	push   $0xa
c0002842:	e8 49 ee ff ff       	call   c0001690 <put_char>
c0002847:	83 c4 10             	add    $0x10,%esp
c000284a:	83 ec 0c             	sub    $0xc,%esp
c000284d:	8d 83 31 d8 ff ff    	lea    -0x27cf(%ebx),%eax
c0002853:	50                   	push   %eax
c0002854:	e8 2b ef ff ff       	call   c0001784 <put_str>
c0002859:	83 c4 10             	add    $0x10,%esp
c000285c:	eb fe                	jmp    c000285c <memset+0x48>
c000285e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002861:	8d 50 01             	lea    0x1(%eax),%edx
c0002864:	89 55 f4             	mov    %edx,-0xc(%ebp)
c0002867:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx
c000286b:	88 10                	mov    %dl,(%eax)
c000286d:	8b 45 10             	mov    0x10(%ebp),%eax
c0002870:	8d 50 ff             	lea    -0x1(%eax),%edx
c0002873:	89 55 10             	mov    %edx,0x10(%ebp)
c0002876:	85 c0                	test   %eax,%eax
c0002878:	75 e4                	jne    c000285e <memset+0x4a>
c000287a:	90                   	nop
c000287b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000287e:	c9                   	leave  
c000287f:	c3                   	ret    

c0002880 <memcpy>:
c0002880:	55                   	push   %ebp
c0002881:	89 e5                	mov    %esp,%ebp
c0002883:	53                   	push   %ebx
c0002884:	83 ec 14             	sub    $0x14,%esp
c0002887:	e8 f1 ed ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c000288c:	81 c3 74 37 00 00    	add    $0x3774,%ebx
c0002892:	8b 45 08             	mov    0x8(%ebp),%eax
c0002895:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002898:	8b 45 0c             	mov    0xc(%ebp),%eax
c000289b:	89 45 f0             	mov    %eax,-0x10(%ebp)
c000289e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c00028a2:	74 06                	je     c00028aa <memcpy+0x2a>
c00028a4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
c00028a8:	75 26                	jne    c00028d0 <memcpy+0x50>
c00028aa:	e8 e9 f8 ff ff       	call   c0002198 <intclose>
c00028af:	83 ec 0c             	sub    $0xc,%esp
c00028b2:	6a 0a                	push   $0xa
c00028b4:	e8 d7 ed ff ff       	call   c0001690 <put_char>
c00028b9:	83 c4 10             	add    $0x10,%esp
c00028bc:	83 ec 0c             	sub    $0xc,%esp
c00028bf:	8d 83 38 d8 ff ff    	lea    -0x27c8(%ebx),%eax
c00028c5:	50                   	push   %eax
c00028c6:	e8 b9 ee ff ff       	call   c0001784 <put_str>
c00028cb:	83 c4 10             	add    $0x10,%esp
c00028ce:	eb fe                	jmp    c00028ce <memcpy+0x4e>
c00028d0:	eb 17                	jmp    c00028e9 <memcpy+0x69>
c00028d2:	8b 55 f0             	mov    -0x10(%ebp),%edx
c00028d5:	8d 42 01             	lea    0x1(%edx),%eax
c00028d8:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00028db:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00028de:	8d 48 01             	lea    0x1(%eax),%ecx
c00028e1:	89 4d f4             	mov    %ecx,-0xc(%ebp)
c00028e4:	0f b6 12             	movzbl (%edx),%edx
c00028e7:	88 10                	mov    %dl,(%eax)
c00028e9:	8b 45 10             	mov    0x10(%ebp),%eax
c00028ec:	8d 50 ff             	lea    -0x1(%eax),%edx
c00028ef:	89 55 10             	mov    %edx,0x10(%ebp)
c00028f2:	85 c0                	test   %eax,%eax
c00028f4:	75 dc                	jne    c00028d2 <memcpy+0x52>
c00028f6:	90                   	nop
c00028f7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00028fa:	c9                   	leave  
c00028fb:	c3                   	ret    

c00028fc <memcmp>:
c00028fc:	55                   	push   %ebp
c00028fd:	89 e5                	mov    %esp,%ebp
c00028ff:	53                   	push   %ebx
c0002900:	83 ec 14             	sub    $0x14,%esp
c0002903:	e8 75 ed ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002908:	81 c3 f8 36 00 00    	add    $0x36f8,%ebx
c000290e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002912:	74 06                	je     c000291a <memcmp+0x1e>
c0002914:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
c0002918:	75 26                	jne    c0002940 <memcmp+0x44>
c000291a:	e8 79 f8 ff ff       	call   c0002198 <intclose>
c000291f:	83 ec 0c             	sub    $0xc,%esp
c0002922:	6a 0a                	push   $0xa
c0002924:	e8 67 ed ff ff       	call   c0001690 <put_char>
c0002929:	83 c4 10             	add    $0x10,%esp
c000292c:	83 ec 0c             	sub    $0xc,%esp
c000292f:	8d 83 49 d8 ff ff    	lea    -0x27b7(%ebx),%eax
c0002935:	50                   	push   %eax
c0002936:	e8 49 ee ff ff       	call   c0001784 <put_str>
c000293b:	83 c4 10             	add    $0x10,%esp
c000293e:	eb fe                	jmp    c000293e <memcmp+0x42>
c0002940:	8b 45 08             	mov    0x8(%ebp),%eax
c0002943:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002946:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002949:	89 45 f0             	mov    %eax,-0x10(%ebp)
c000294c:	eb 36                	jmp    c0002984 <memcmp+0x88>
c000294e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002951:	0f b6 10             	movzbl (%eax),%edx
c0002954:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002957:	0f b6 00             	movzbl (%eax),%eax
c000295a:	38 c2                	cmp    %al,%dl
c000295c:	74 1e                	je     c000297c <memcmp+0x80>
c000295e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002961:	0f b6 10             	movzbl (%eax),%edx
c0002964:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002967:	0f b6 00             	movzbl (%eax),%eax
c000296a:	38 c2                	cmp    %al,%dl
c000296c:	7e 07                	jle    c0002975 <memcmp+0x79>
c000296e:	b8 01 00 00 00       	mov    $0x1,%eax
c0002973:	eb 21                	jmp    c0002996 <memcmp+0x9a>
c0002975:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
c000297a:	eb 1a                	jmp    c0002996 <memcmp+0x9a>
c000297c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0002980:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
c0002984:	8b 45 10             	mov    0x10(%ebp),%eax
c0002987:	8d 50 ff             	lea    -0x1(%eax),%edx
c000298a:	89 55 10             	mov    %edx,0x10(%ebp)
c000298d:	85 c0                	test   %eax,%eax
c000298f:	75 bd                	jne    c000294e <memcmp+0x52>
c0002991:	b8 00 00 00 00       	mov    $0x0,%eax
c0002996:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002999:	c9                   	leave  
c000299a:	c3                   	ret    

c000299b <strcpy>:
c000299b:	55                   	push   %ebp
c000299c:	89 e5                	mov    %esp,%ebp
c000299e:	e8 76 f8 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c00029a3:	05 5d 36 00 00       	add    $0x365d,%eax
c00029a8:	eb 17                	jmp    c00029c1 <strcpy+0x26>
c00029aa:	8b 55 0c             	mov    0xc(%ebp),%edx
c00029ad:	8d 42 01             	lea    0x1(%edx),%eax
c00029b0:	89 45 0c             	mov    %eax,0xc(%ebp)
c00029b3:	8b 45 08             	mov    0x8(%ebp),%eax
c00029b6:	8d 48 01             	lea    0x1(%eax),%ecx
c00029b9:	89 4d 08             	mov    %ecx,0x8(%ebp)
c00029bc:	0f b6 12             	movzbl (%edx),%edx
c00029bf:	88 10                	mov    %dl,(%eax)
c00029c1:	8b 45 0c             	mov    0xc(%ebp),%eax
c00029c4:	0f b6 00             	movzbl (%eax),%eax
c00029c7:	84 c0                	test   %al,%al
c00029c9:	75 df                	jne    c00029aa <strcpy+0xf>
c00029cb:	90                   	nop
c00029cc:	5d                   	pop    %ebp
c00029cd:	c3                   	ret    

c00029ce <strlen>:
c00029ce:	55                   	push   %ebp
c00029cf:	89 e5                	mov    %esp,%ebp
c00029d1:	83 ec 10             	sub    $0x10,%esp
c00029d4:	e8 40 f8 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c00029d9:	05 27 36 00 00       	add    $0x3627,%eax
c00029de:	8b 45 08             	mov    0x8(%ebp),%eax
c00029e1:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00029e4:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c00029eb:	eb 04                	jmp    c00029f1 <strlen+0x23>
c00029ed:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c00029f1:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00029f4:	8d 50 01             	lea    0x1(%eax),%edx
c00029f7:	89 55 fc             	mov    %edx,-0x4(%ebp)
c00029fa:	0f b6 00             	movzbl (%eax),%eax
c00029fd:	84 c0                	test   %al,%al
c00029ff:	75 ec                	jne    c00029ed <strlen+0x1f>
c0002a01:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002a04:	c9                   	leave  
c0002a05:	c3                   	ret    

c0002a06 <string_equal>:
c0002a06:	55                   	push   %ebp
c0002a07:	89 e5                	mov    %esp,%ebp
c0002a09:	e8 0b f8 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0002a0e:	05 f2 35 00 00       	add    $0x35f2,%eax
c0002a13:	eb 19                	jmp    c0002a2e <string_equal+0x28>
c0002a15:	8b 45 08             	mov    0x8(%ebp),%eax
c0002a18:	0f b6 00             	movzbl (%eax),%eax
c0002a1b:	84 c0                	test   %al,%al
c0002a1d:	75 07                	jne    c0002a26 <string_equal+0x20>
c0002a1f:	b8 01 00 00 00       	mov    $0x1,%eax
c0002a24:	eb 1d                	jmp    c0002a43 <string_equal+0x3d>
c0002a26:	83 45 08 01          	addl   $0x1,0x8(%ebp)
c0002a2a:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
c0002a2e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002a31:	0f b6 10             	movzbl (%eax),%edx
c0002a34:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002a37:	0f b6 00             	movzbl (%eax),%eax
c0002a3a:	38 c2                	cmp    %al,%dl
c0002a3c:	74 d7                	je     c0002a15 <string_equal+0xf>
c0002a3e:	b8 00 00 00 00       	mov    $0x0,%eax
c0002a43:	5d                   	pop    %ebp
c0002a44:	c3                   	ret    
c0002a45:	66 90                	xchg   %ax,%ax
c0002a47:	66 90                	xchg   %ax,%ax
c0002a49:	66 90                	xchg   %ax,%ax
c0002a4b:	66 90                	xchg   %ax,%ax
c0002a4d:	66 90                	xchg   %ax,%ax
c0002a4f:	90                   	nop

c0002a50 <running_thread>:
c0002a50:	55                   	push   %ebp
c0002a51:	89 e5                	mov    %esp,%ebp
c0002a53:	83 ec 10             	sub    $0x10,%esp
c0002a56:	e8 be f7 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0002a5b:	05 a5 35 00 00       	add    $0x35a5,%eax
c0002a60:	89 e0                	mov    %esp,%eax
c0002a62:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002a65:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002a68:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002a6d:	c9                   	leave  
c0002a6e:	c3                   	ret    

c0002a6f <kernel_thread>:
c0002a6f:	55                   	push   %ebp
c0002a70:	89 e5                	mov    %esp,%ebp
c0002a72:	53                   	push   %ebx
c0002a73:	83 ec 04             	sub    $0x4,%esp
c0002a76:	e8 9e f7 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0002a7b:	05 85 35 00 00       	add    $0x3585,%eax
c0002a80:	89 c3                	mov    %eax,%ebx
c0002a82:	e8 e5 f6 ff ff       	call   c000216c <intopen>
c0002a87:	83 ec 0c             	sub    $0xc,%esp
c0002a8a:	ff 75 0c             	pushl  0xc(%ebp)
c0002a8d:	8b 45 08             	mov    0x8(%ebp),%eax
c0002a90:	ff d0                	call   *%eax
c0002a92:	83 c4 10             	add    $0x10,%esp
c0002a95:	90                   	nop
c0002a96:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002a99:	c9                   	leave  
c0002a9a:	c3                   	ret    

c0002a9b <thread_create>:
c0002a9b:	55                   	push   %ebp
c0002a9c:	89 e5                	mov    %esp,%ebp
c0002a9e:	83 ec 10             	sub    $0x10,%esp
c0002aa1:	e8 9b 05 00 00       	call   c0003041 <__x86.get_pc_thunk.dx>
c0002aa6:	81 c2 5a 35 00 00    	add    $0x355a,%edx
c0002aac:	8b 45 08             	mov    0x8(%ebp),%eax
c0002aaf:	8b 00                	mov    (%eax),%eax
c0002ab1:	8d 88 d0 fe ff ff    	lea    -0x130(%eax),%ecx
c0002ab7:	8b 45 08             	mov    0x8(%ebp),%eax
c0002aba:	89 08                	mov    %ecx,(%eax)
c0002abc:	8b 45 08             	mov    0x8(%ebp),%eax
c0002abf:	8b 00                	mov    (%eax),%eax
c0002ac1:	8d 48 80             	lea    -0x80(%eax),%ecx
c0002ac4:	8b 45 08             	mov    0x8(%ebp),%eax
c0002ac7:	89 08                	mov    %ecx,(%eax)
c0002ac9:	8b 45 08             	mov    0x8(%ebp),%eax
c0002acc:	8b 00                	mov    (%eax),%eax
c0002ace:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002ad1:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002ad4:	8d 92 6f ca ff ff    	lea    -0x3591(%edx),%edx
c0002ada:	89 50 10             	mov    %edx,0x10(%eax)
c0002add:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002ae0:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002ae3:	89 50 18             	mov    %edx,0x18(%eax)
c0002ae6:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002ae9:	8b 55 10             	mov    0x10(%ebp),%edx
c0002aec:	89 50 1c             	mov    %edx,0x1c(%eax)
c0002aef:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002af2:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
c0002af9:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002afc:	8b 50 0c             	mov    0xc(%eax),%edx
c0002aff:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002b02:	89 50 08             	mov    %edx,0x8(%eax)
c0002b05:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002b08:	8b 50 08             	mov    0x8(%eax),%edx
c0002b0b:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002b0e:	89 50 04             	mov    %edx,0x4(%eax)
c0002b11:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002b14:	8b 50 04             	mov    0x4(%eax),%edx
c0002b17:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002b1a:	89 10                	mov    %edx,(%eax)
c0002b1c:	90                   	nop
c0002b1d:	c9                   	leave  
c0002b1e:	c3                   	ret    

c0002b1f <init_thread>:
c0002b1f:	55                   	push   %ebp
c0002b20:	89 e5                	mov    %esp,%ebp
c0002b22:	53                   	push   %ebx
c0002b23:	83 ec 04             	sub    $0x4,%esp
c0002b26:	e8 52 eb ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002b2b:	81 c3 d5 34 00 00    	add    $0x34d5,%ebx
c0002b31:	83 ec 04             	sub    $0x4,%esp
c0002b34:	68 00 10 00 00       	push   $0x1000
c0002b39:	6a 00                	push   $0x0
c0002b3b:	ff 75 08             	pushl  0x8(%ebp)
c0002b3e:	e8 d1 fc ff ff       	call   c0002814 <memset>
c0002b43:	83 c4 10             	add    $0x10,%esp
c0002b46:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b49:	83 c0 09             	add    $0x9,%eax
c0002b4c:	83 ec 08             	sub    $0x8,%esp
c0002b4f:	ff 75 0c             	pushl  0xc(%ebp)
c0002b52:	50                   	push   %eax
c0002b53:	e8 43 fe ff ff       	call   c000299b <strcpy>
c0002b58:	83 c4 10             	add    $0x10,%esp
c0002b5b:	c7 c0 50 63 00 c0    	mov    $0xc0006350,%eax
c0002b61:	8b 00                	mov    (%eax),%eax
c0002b63:	39 45 08             	cmp    %eax,0x8(%ebp)
c0002b66:	75 0c                	jne    c0002b74 <init_thread+0x55>
c0002b68:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b6b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
c0002b72:	eb 0a                	jmp    c0002b7e <init_thread+0x5f>
c0002b74:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b77:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
c0002b7e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b81:	05 00 10 00 00       	add    $0x1000,%eax
c0002b86:	89 c2                	mov    %eax,%edx
c0002b88:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b8b:	89 10                	mov    %edx,(%eax)
c0002b8d:	8b 45 10             	mov    0x10(%ebp),%eax
c0002b90:	89 c2                	mov    %eax,%edx
c0002b92:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b95:	88 50 08             	mov    %dl,0x8(%eax)
c0002b98:	8b 55 10             	mov    0x10(%ebp),%edx
c0002b9b:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b9e:	89 50 1c             	mov    %edx,0x1c(%eax)
c0002ba1:	8b 45 08             	mov    0x8(%ebp),%eax
c0002ba4:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)
c0002bab:	8b 45 08             	mov    0x8(%ebp),%eax
c0002bae:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
c0002bb5:	8b 45 08             	mov    0x8(%ebp),%eax
c0002bb8:	c7 40 38 06 07 92 19 	movl   $0x19920706,0x38(%eax)
c0002bbf:	90                   	nop
c0002bc0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002bc3:	c9                   	leave  
c0002bc4:	c3                   	ret    

c0002bc5 <thread_start>:
c0002bc5:	55                   	push   %ebp
c0002bc6:	89 e5                	mov    %esp,%ebp
c0002bc8:	53                   	push   %ebx
c0002bc9:	83 ec 14             	sub    $0x14,%esp
c0002bcc:	e8 ac ea ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002bd1:	81 c3 2f 34 00 00    	add    $0x342f,%ebx
c0002bd7:	83 ec 0c             	sub    $0xc,%esp
c0002bda:	6a 01                	push   $0x1
c0002bdc:	e8 e9 fb ff ff       	call   c00027ca <get_kernel_pages>
c0002be1:	83 c4 10             	add    $0x10,%esp
c0002be4:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002be7:	83 ec 04             	sub    $0x4,%esp
c0002bea:	ff 75 14             	pushl  0x14(%ebp)
c0002bed:	ff 75 08             	pushl  0x8(%ebp)
c0002bf0:	ff 75 f4             	pushl  -0xc(%ebp)
c0002bf3:	e8 27 ff ff ff       	call   c0002b1f <init_thread>
c0002bf8:	83 c4 10             	add    $0x10,%esp
c0002bfb:	83 ec 04             	sub    $0x4,%esp
c0002bfe:	ff 75 10             	pushl  0x10(%ebp)
c0002c01:	ff 75 0c             	pushl  0xc(%ebp)
c0002c04:	ff 75 f4             	pushl  -0xc(%ebp)
c0002c07:	e8 8f fe ff ff       	call   c0002a9b <thread_create>
c0002c0c:	83 c4 10             	add    $0x10,%esp
c0002c0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002c12:	83 c0 24             	add    $0x24,%eax
c0002c15:	83 ec 08             	sub    $0x8,%esp
c0002c18:	50                   	push   %eax
c0002c19:	c7 c0 30 63 00 c0    	mov    $0xc0006330,%eax
c0002c1f:	50                   	push   %eax
c0002c20:	e8 90 04 00 00       	call   c00030b5 <_list_add_back>
c0002c25:	83 c4 10             	add    $0x10,%esp
c0002c28:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002c2b:	83 c0 2c             	add    $0x2c,%eax
c0002c2e:	83 ec 08             	sub    $0x8,%esp
c0002c31:	50                   	push   %eax
c0002c32:	c7 c0 40 63 00 c0    	mov    $0xc0006340,%eax
c0002c38:	50                   	push   %eax
c0002c39:	e8 77 04 00 00       	call   c00030b5 <_list_add_back>
c0002c3e:	83 c4 10             	add    $0x10,%esp
c0002c41:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002c44:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002c47:	c9                   	leave  
c0002c48:	c3                   	ret    

c0002c49 <make_main_thread>:
c0002c49:	55                   	push   %ebp
c0002c4a:	89 e5                	mov    %esp,%ebp
c0002c4c:	53                   	push   %ebx
c0002c4d:	83 ec 04             	sub    $0x4,%esp
c0002c50:	e8 28 ea ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002c55:	81 c3 ab 33 00 00    	add    $0x33ab,%ebx
c0002c5b:	e8 f0 fd ff ff       	call   c0002a50 <running_thread>
c0002c60:	89 c2                	mov    %eax,%edx
c0002c62:	c7 c0 50 63 00 c0    	mov    $0xc0006350,%eax
c0002c68:	89 10                	mov    %edx,(%eax)
c0002c6a:	c7 c0 50 63 00 c0    	mov    $0xc0006350,%eax
c0002c70:	8b 00                	mov    (%eax),%eax
c0002c72:	83 ec 04             	sub    $0x4,%esp
c0002c75:	6a 3c                	push   $0x3c
c0002c77:	8d 93 58 d8 ff ff    	lea    -0x27a8(%ebx),%edx
c0002c7d:	52                   	push   %edx
c0002c7e:	50                   	push   %eax
c0002c7f:	e8 9b fe ff ff       	call   c0002b1f <init_thread>
c0002c84:	83 c4 10             	add    $0x10,%esp
c0002c87:	c7 c0 50 63 00 c0    	mov    $0xc0006350,%eax
c0002c8d:	8b 00                	mov    (%eax),%eax
c0002c8f:	83 c0 2c             	add    $0x2c,%eax
c0002c92:	83 ec 08             	sub    $0x8,%esp
c0002c95:	50                   	push   %eax
c0002c96:	c7 c0 40 63 00 c0    	mov    $0xc0006340,%eax
c0002c9c:	50                   	push   %eax
c0002c9d:	e8 13 04 00 00       	call   c00030b5 <_list_add_back>
c0002ca2:	83 c4 10             	add    $0x10,%esp
c0002ca5:	90                   	nop
c0002ca6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002ca9:	c9                   	leave  
c0002caa:	c3                   	ret    

c0002cab <set_prio>:
c0002cab:	55                   	push   %ebp
c0002cac:	89 e5                	mov    %esp,%ebp
c0002cae:	53                   	push   %ebx
c0002caf:	83 ec 24             	sub    $0x24,%esp
c0002cb2:	e8 c6 e9 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002cb7:	81 c3 49 33 00 00    	add    $0x3349,%ebx
c0002cbd:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002cc0:	88 45 e4             	mov    %al,-0x1c(%ebp)
c0002cc3:	83 ec 0c             	sub    $0xc,%esp
c0002cc6:	c7 c0 40 63 00 c0    	mov    $0xc0006340,%eax
c0002ccc:	50                   	push   %eax
c0002ccd:	e8 70 04 00 00       	call   c0003142 <_list_front>
c0002cd2:	83 c4 10             	add    $0x10,%esp
c0002cd5:	83 e8 2c             	sub    $0x2c,%eax
c0002cd8:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002cdb:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002cde:	83 c0 09             	add    $0x9,%eax
c0002ce1:	83 ec 08             	sub    $0x8,%esp
c0002ce4:	50                   	push   %eax
c0002ce5:	ff 75 08             	pushl  0x8(%ebp)
c0002ce8:	e8 19 fd ff ff       	call   c0002a06 <string_equal>
c0002ced:	83 c4 10             	add    $0x10,%esp
c0002cf0:	85 c0                	test   %eax,%eax
c0002cf2:	74 0a                	je     c0002cfe <set_prio+0x53>
c0002cf4:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002cf7:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx
c0002cfb:	88 50 08             	mov    %dl,0x8(%eax)
c0002cfe:	90                   	nop
c0002cff:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002d02:	c9                   	leave  
c0002d03:	c3                   	ret    

c0002d04 <sched>:
c0002d04:	55                   	push   %ebp
c0002d05:	89 e5                	mov    %esp,%ebp
c0002d07:	53                   	push   %ebx
c0002d08:	83 ec 14             	sub    $0x14,%esp
c0002d0b:	e8 6d e9 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002d10:	81 c3 f0 32 00 00    	add    $0x32f0,%ebx
c0002d16:	e8 35 fd ff ff       	call   c0002a50 <running_thread>
c0002d1b:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002d1e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002d21:	8b 40 04             	mov    0x4(%eax),%eax
c0002d24:	85 c0                	test   %eax,%eax
c0002d26:	75 33                	jne    c0002d5b <sched+0x57>
c0002d28:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002d2b:	83 c0 24             	add    $0x24,%eax
c0002d2e:	83 ec 08             	sub    $0x8,%esp
c0002d31:	50                   	push   %eax
c0002d32:	c7 c0 30 63 00 c0    	mov    $0xc0006330,%eax
c0002d38:	50                   	push   %eax
c0002d39:	e8 77 03 00 00       	call   c00030b5 <_list_add_back>
c0002d3e:	83 c4 10             	add    $0x10,%esp
c0002d41:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002d44:	0f b6 40 08          	movzbl 0x8(%eax),%eax
c0002d48:	0f b6 d0             	movzbl %al,%edx
c0002d4b:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002d4e:	89 50 1c             	mov    %edx,0x1c(%eax)
c0002d51:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002d54:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
c0002d5b:	c7 c0 54 63 00 c0    	mov    $0xc0006354,%eax
c0002d61:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c0002d67:	83 ec 0c             	sub    $0xc,%esp
c0002d6a:	c7 c0 30 63 00 c0    	mov    $0xc0006330,%eax
c0002d70:	50                   	push   %eax
c0002d71:	e8 7b 03 00 00       	call   c00030f1 <_list_pop_front>
c0002d76:	83 c4 10             	add    $0x10,%esp
c0002d79:	89 c2                	mov    %eax,%edx
c0002d7b:	c7 c0 54 63 00 c0    	mov    $0xc0006354,%eax
c0002d81:	89 10                	mov    %edx,(%eax)
c0002d83:	c7 c0 54 63 00 c0    	mov    $0xc0006354,%eax
c0002d89:	8b 00                	mov    (%eax),%eax
c0002d8b:	83 e8 24             	sub    $0x24,%eax
c0002d8e:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002d91:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002d94:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
c0002d9b:	83 ec 08             	sub    $0x8,%esp
c0002d9e:	ff 75 f0             	pushl  -0x10(%ebp)
c0002da1:	ff 75 f4             	pushl  -0xc(%ebp)
c0002da4:	e8 37 01 00 00       	call   c0002ee0 <switch_to>
c0002da9:	83 c4 10             	add    $0x10,%esp
c0002dac:	90                   	nop
c0002dad:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002db0:	c9                   	leave  
c0002db1:	c3                   	ret    

c0002db2 <thread_init>:
c0002db2:	55                   	push   %ebp
c0002db3:	89 e5                	mov    %esp,%ebp
c0002db5:	53                   	push   %ebx
c0002db6:	83 ec 04             	sub    $0x4,%esp
c0002db9:	e8 bf e8 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002dbe:	81 c3 42 32 00 00    	add    $0x3242,%ebx
c0002dc4:	83 ec 0c             	sub    $0xc,%esp
c0002dc7:	c7 c0 30 63 00 c0    	mov    $0xc0006330,%eax
c0002dcd:	50                   	push   %eax
c0002dce:	e8 72 02 00 00       	call   c0003045 <_list_init>
c0002dd3:	83 c4 10             	add    $0x10,%esp
c0002dd6:	83 ec 0c             	sub    $0xc,%esp
c0002dd9:	c7 c0 40 63 00 c0    	mov    $0xc0006340,%eax
c0002ddf:	50                   	push   %eax
c0002de0:	e8 60 02 00 00       	call   c0003045 <_list_init>
c0002de5:	83 c4 10             	add    $0x10,%esp
c0002de8:	e8 5c fe ff ff       	call   c0002c49 <make_main_thread>
c0002ded:	90                   	nop
c0002dee:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002df1:	c9                   	leave  
c0002df2:	c3                   	ret    

c0002df3 <thread_block>:
c0002df3:	55                   	push   %ebp
c0002df4:	89 e5                	mov    %esp,%ebp
c0002df6:	53                   	push   %ebx
c0002df7:	83 ec 14             	sub    $0x14,%esp
c0002dfa:	e8 7e e8 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002dff:	81 c3 01 32 00 00    	add    $0x3201,%ebx
c0002e05:	83 ec 0c             	sub    $0xc,%esp
c0002e08:	8d 83 64 d8 ff ff    	lea    -0x279c(%ebx),%eax
c0002e0e:	50                   	push   %eax
c0002e0f:	e8 70 e9 ff ff       	call   c0001784 <put_str>
c0002e14:	83 c4 10             	add    $0x10,%esp
c0002e17:	e8 a8 f3 ff ff       	call   c00021c4 <intr_status>
c0002e1c:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002e1f:	e8 74 f3 ff ff       	call   c0002198 <intclose>
c0002e24:	e8 27 fc ff ff       	call   c0002a50 <running_thread>
c0002e29:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002e2c:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002e2f:	8b 55 08             	mov    0x8(%ebp),%edx
c0002e32:	89 50 04             	mov    %edx,0x4(%eax)
c0002e35:	83 ec 0c             	sub    $0xc,%esp
c0002e38:	8d 83 72 d8 ff ff    	lea    -0x278e(%ebx),%eax
c0002e3e:	50                   	push   %eax
c0002e3f:	e8 40 e9 ff ff       	call   c0001784 <put_str>
c0002e44:	83 c4 10             	add    $0x10,%esp
c0002e47:	e8 b8 fe ff ff       	call   c0002d04 <sched>
c0002e4c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c0002e50:	74 05                	je     c0002e57 <thread_block+0x64>
c0002e52:	e8 15 f3 ff ff       	call   c000216c <intopen>
c0002e57:	90                   	nop
c0002e58:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002e5b:	c9                   	leave  
c0002e5c:	c3                   	ret    

c0002e5d <thread_unblock>:
c0002e5d:	55                   	push   %ebp
c0002e5e:	89 e5                	mov    %esp,%ebp
c0002e60:	53                   	push   %ebx
c0002e61:	83 ec 14             	sub    $0x14,%esp
c0002e64:	e8 14 e8 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002e69:	81 c3 97 31 00 00    	add    $0x3197,%ebx
c0002e6f:	83 ec 0c             	sub    $0xc,%esp
c0002e72:	8d 83 7e d8 ff ff    	lea    -0x2782(%ebx),%eax
c0002e78:	50                   	push   %eax
c0002e79:	e8 06 e9 ff ff       	call   c0001784 <put_str>
c0002e7e:	83 c4 10             	add    $0x10,%esp
c0002e81:	e8 3e f3 ff ff       	call   c00021c4 <intr_status>
c0002e86:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002e89:	e8 0a f3 ff ff       	call   c0002198 <intclose>
c0002e8e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e91:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
c0002e98:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e9b:	83 c0 24             	add    $0x24,%eax
c0002e9e:	83 ec 08             	sub    $0x8,%esp
c0002ea1:	50                   	push   %eax
c0002ea2:	c7 c0 30 63 00 c0    	mov    $0xc0006330,%eax
c0002ea8:	50                   	push   %eax
c0002ea9:	e8 cf 01 00 00       	call   c000307d <_list_add_front>
c0002eae:	83 c4 10             	add    $0x10,%esp
c0002eb1:	83 ec 0c             	sub    $0xc,%esp
c0002eb4:	8d 83 8e d8 ff ff    	lea    -0x2772(%ebx),%eax
c0002eba:	50                   	push   %eax
c0002ebb:	e8 c4 e8 ff ff       	call   c0001784 <put_str>
c0002ec0:	83 c4 10             	add    $0x10,%esp
c0002ec3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c0002ec7:	74 05                	je     c0002ece <thread_unblock+0x71>
c0002ec9:	e8 9e f2 ff ff       	call   c000216c <intopen>
c0002ece:	90                   	nop
c0002ecf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002ed2:	c9                   	leave  
c0002ed3:	c3                   	ret    
c0002ed4:	66 90                	xchg   %ax,%ax
c0002ed6:	66 90                	xchg   %ax,%ax
c0002ed8:	66 90                	xchg   %ax,%ax
c0002eda:	66 90                	xchg   %ax,%ax
c0002edc:	66 90                	xchg   %ax,%ax
c0002ede:	66 90                	xchg   %ax,%ax

c0002ee0 <switch_to>:
c0002ee0:	56                   	push   %esi
c0002ee1:	57                   	push   %edi
c0002ee2:	53                   	push   %ebx
c0002ee3:	55                   	push   %ebp
c0002ee4:	8b 44 24 14          	mov    0x14(%esp),%eax
c0002ee8:	89 20                	mov    %esp,(%eax)
c0002eea:	8b 44 24 18          	mov    0x18(%esp),%eax
c0002eee:	8b 20                	mov    (%eax),%esp
c0002ef0:	5d                   	pop    %ebp
c0002ef1:	5b                   	pop    %ebx
c0002ef2:	5f                   	pop    %edi
c0002ef3:	5e                   	pop    %esi
c0002ef4:	c3                   	ret    

c0002ef5 <init_lock>:
c0002ef5:	55                   	push   %ebp
c0002ef6:	89 e5                	mov    %esp,%ebp
c0002ef8:	53                   	push   %ebx
c0002ef9:	83 ec 04             	sub    $0x4,%esp
c0002efc:	e8 18 f3 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0002f01:	05 ff 30 00 00       	add    $0x30ff,%eax
c0002f06:	8b 55 08             	mov    0x8(%ebp),%edx
c0002f09:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
c0002f0f:	8b 55 08             	mov    0x8(%ebp),%edx
c0002f12:	83 c2 04             	add    $0x4,%edx
c0002f15:	83 ec 0c             	sub    $0xc,%esp
c0002f18:	52                   	push   %edx
c0002f19:	89 c3                	mov    %eax,%ebx
c0002f1b:	e8 25 01 00 00       	call   c0003045 <_list_init>
c0002f20:	83 c4 10             	add    $0x10,%esp
c0002f23:	90                   	nop
c0002f24:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002f27:	c9                   	leave  
c0002f28:	c3                   	ret    

c0002f29 <acquire_lock>:
c0002f29:	55                   	push   %ebp
c0002f2a:	89 e5                	mov    %esp,%ebp
c0002f2c:	53                   	push   %ebx
c0002f2d:	83 ec 14             	sub    $0x14,%esp
c0002f30:	e8 48 e7 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002f35:	81 c3 cb 30 00 00    	add    $0x30cb,%ebx
c0002f3b:	e8 84 f2 ff ff       	call   c00021c4 <intr_status>
c0002f40:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002f43:	e8 50 f2 ff ff       	call   c0002198 <intclose>
c0002f48:	e8 03 fb ff ff       	call   c0002a50 <running_thread>
c0002f4d:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002f50:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f53:	8b 00                	mov    (%eax),%eax
c0002f55:	85 c0                	test   %eax,%eax
c0002f57:	75 0a                	jne    c0002f63 <acquire_lock+0x3a>
c0002f59:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f5c:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002f5f:	89 10                	mov    %edx,(%eax)
c0002f61:	eb 26                	jmp    c0002f89 <acquire_lock+0x60>
c0002f63:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002f66:	8d 50 24             	lea    0x24(%eax),%edx
c0002f69:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f6c:	83 c0 04             	add    $0x4,%eax
c0002f6f:	83 ec 08             	sub    $0x8,%esp
c0002f72:	52                   	push   %edx
c0002f73:	50                   	push   %eax
c0002f74:	e8 3c 01 00 00       	call   c00030b5 <_list_add_back>
c0002f79:	83 c4 10             	add    $0x10,%esp
c0002f7c:	83 ec 0c             	sub    $0xc,%esp
c0002f7f:	6a 02                	push   $0x2
c0002f81:	e8 6d fe ff ff       	call   c0002df3 <thread_block>
c0002f86:	83 c4 10             	add    $0x10,%esp
c0002f89:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c0002f8d:	74 05                	je     c0002f94 <acquire_lock+0x6b>
c0002f8f:	e8 d8 f1 ff ff       	call   c000216c <intopen>
c0002f94:	90                   	nop
c0002f95:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002f98:	c9                   	leave  
c0002f99:	c3                   	ret    

c0002f9a <release_lock>:
c0002f9a:	55                   	push   %ebp
c0002f9b:	89 e5                	mov    %esp,%ebp
c0002f9d:	56                   	push   %esi
c0002f9e:	53                   	push   %ebx
c0002f9f:	83 ec 10             	sub    $0x10,%esp
c0002fa2:	e8 d6 e6 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0002fa7:	81 c3 59 30 00 00    	add    $0x3059,%ebx
c0002fad:	8b 45 08             	mov    0x8(%ebp),%eax
c0002fb0:	8b 30                	mov    (%eax),%esi
c0002fb2:	e8 99 fa ff ff       	call   c0002a50 <running_thread>
c0002fb7:	39 c6                	cmp    %eax,%esi
c0002fb9:	74 26                	je     c0002fe1 <release_lock+0x47>
c0002fbb:	e8 d8 f1 ff ff       	call   c0002198 <intclose>
c0002fc0:	83 ec 0c             	sub    $0xc,%esp
c0002fc3:	6a 0a                	push   $0xa
c0002fc5:	e8 c6 e6 ff ff       	call   c0001690 <put_char>
c0002fca:	83 c4 10             	add    $0x10,%esp
c0002fcd:	83 ec 0c             	sub    $0xc,%esp
c0002fd0:	8d 83 a0 d8 ff ff    	lea    -0x2760(%ebx),%eax
c0002fd6:	50                   	push   %eax
c0002fd7:	e8 a8 e7 ff ff       	call   c0001784 <put_str>
c0002fdc:	83 c4 10             	add    $0x10,%esp
c0002fdf:	eb fe                	jmp    c0002fdf <release_lock+0x45>
c0002fe1:	e8 de f1 ff ff       	call   c00021c4 <intr_status>
c0002fe6:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002fe9:	e8 aa f1 ff ff       	call   c0002198 <intclose>
c0002fee:	8b 45 08             	mov    0x8(%ebp),%eax
c0002ff1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c0002ff7:	8b 45 08             	mov    0x8(%ebp),%eax
c0002ffa:	83 c0 04             	add    $0x4,%eax
c0002ffd:	83 ec 0c             	sub    $0xc,%esp
c0003000:	50                   	push   %eax
c0003001:	e8 f2 01 00 00       	call   c00031f8 <_list_empty>
c0003006:	83 c4 10             	add    $0x10,%esp
c0003009:	84 c0                	test   %al,%al
c000300b:	75 21                	jne    c000302e <release_lock+0x94>
c000300d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003010:	83 c0 04             	add    $0x4,%eax
c0003013:	83 ec 0c             	sub    $0xc,%esp
c0003016:	50                   	push   %eax
c0003017:	e8 d5 00 00 00       	call   c00030f1 <_list_pop_front>
c000301c:	83 c4 10             	add    $0x10,%esp
c000301f:	83 e8 24             	sub    $0x24,%eax
c0003022:	83 ec 0c             	sub    $0xc,%esp
c0003025:	50                   	push   %eax
c0003026:	e8 32 fe ff ff       	call   c0002e5d <thread_unblock>
c000302b:	83 c4 10             	add    $0x10,%esp
c000302e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c0003032:	74 05                	je     c0003039 <release_lock+0x9f>
c0003034:	e8 33 f1 ff ff       	call   c000216c <intopen>
c0003039:	90                   	nop
c000303a:	8d 65 f8             	lea    -0x8(%ebp),%esp
c000303d:	5b                   	pop    %ebx
c000303e:	5e                   	pop    %esi
c000303f:	5d                   	pop    %ebp
c0003040:	c3                   	ret    

c0003041 <__x86.get_pc_thunk.dx>:
c0003041:	8b 14 24             	mov    (%esp),%edx
c0003044:	c3                   	ret    

c0003045 <_list_init>:
c0003045:	55                   	push   %ebp
c0003046:	89 e5                	mov    %esp,%ebp
c0003048:	e8 cc f1 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c000304d:	05 b3 2f 00 00       	add    $0x2fb3,%eax
c0003052:	8b 45 08             	mov    0x8(%ebp),%eax
c0003055:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c000305b:	8b 45 08             	mov    0x8(%ebp),%eax
c000305e:	8d 50 08             	lea    0x8(%eax),%edx
c0003061:	8b 45 08             	mov    0x8(%ebp),%eax
c0003064:	89 50 04             	mov    %edx,0x4(%eax)
c0003067:	8b 55 08             	mov    0x8(%ebp),%edx
c000306a:	8b 45 08             	mov    0x8(%ebp),%eax
c000306d:	89 50 08             	mov    %edx,0x8(%eax)
c0003070:	8b 45 08             	mov    0x8(%ebp),%eax
c0003073:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
c000307a:	90                   	nop
c000307b:	5d                   	pop    %ebp
c000307c:	c3                   	ret    

c000307d <_list_add_front>:
c000307d:	55                   	push   %ebp
c000307e:	89 e5                	mov    %esp,%ebp
c0003080:	e8 94 f1 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0003085:	05 7b 2f 00 00       	add    $0x2f7b,%eax
c000308a:	8b 55 08             	mov    0x8(%ebp),%edx
c000308d:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003090:	89 10                	mov    %edx,(%eax)
c0003092:	8b 45 08             	mov    0x8(%ebp),%eax
c0003095:	8b 50 04             	mov    0x4(%eax),%edx
c0003098:	8b 45 0c             	mov    0xc(%ebp),%eax
c000309b:	89 50 04             	mov    %edx,0x4(%eax)
c000309e:	8b 45 08             	mov    0x8(%ebp),%eax
c00030a1:	8b 40 04             	mov    0x4(%eax),%eax
c00030a4:	8b 55 0c             	mov    0xc(%ebp),%edx
c00030a7:	89 10                	mov    %edx,(%eax)
c00030a9:	8b 45 08             	mov    0x8(%ebp),%eax
c00030ac:	8b 55 0c             	mov    0xc(%ebp),%edx
c00030af:	89 50 04             	mov    %edx,0x4(%eax)
c00030b2:	90                   	nop
c00030b3:	5d                   	pop    %ebp
c00030b4:	c3                   	ret    

c00030b5 <_list_add_back>:
c00030b5:	55                   	push   %ebp
c00030b6:	89 e5                	mov    %esp,%ebp
c00030b8:	e8 5c f1 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c00030bd:	05 43 2f 00 00       	add    $0x2f43,%eax
c00030c2:	8b 45 08             	mov    0x8(%ebp),%eax
c00030c5:	8d 50 08             	lea    0x8(%eax),%edx
c00030c8:	8b 45 0c             	mov    0xc(%ebp),%eax
c00030cb:	89 50 04             	mov    %edx,0x4(%eax)
c00030ce:	8b 45 08             	mov    0x8(%ebp),%eax
c00030d1:	8b 50 08             	mov    0x8(%eax),%edx
c00030d4:	8b 45 0c             	mov    0xc(%ebp),%eax
c00030d7:	89 10                	mov    %edx,(%eax)
c00030d9:	8b 45 08             	mov    0x8(%ebp),%eax
c00030dc:	8b 40 08             	mov    0x8(%eax),%eax
c00030df:	8b 55 0c             	mov    0xc(%ebp),%edx
c00030e2:	89 50 04             	mov    %edx,0x4(%eax)
c00030e5:	8b 45 08             	mov    0x8(%ebp),%eax
c00030e8:	8b 55 0c             	mov    0xc(%ebp),%edx
c00030eb:	89 50 08             	mov    %edx,0x8(%eax)
c00030ee:	90                   	nop
c00030ef:	5d                   	pop    %ebp
c00030f0:	c3                   	ret    

c00030f1 <_list_pop_front>:
c00030f1:	55                   	push   %ebp
c00030f2:	89 e5                	mov    %esp,%ebp
c00030f4:	83 ec 18             	sub    $0x18,%esp
c00030f7:	e8 1d f1 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c00030fc:	05 04 2f 00 00       	add    $0x2f04,%eax
c0003101:	83 ec 0c             	sub    $0xc,%esp
c0003104:	ff 75 08             	pushl  0x8(%ebp)
c0003107:	e8 ec 00 00 00       	call   c00031f8 <_list_empty>
c000310c:	83 c4 10             	add    $0x10,%esp
c000310f:	84 c0                	test   %al,%al
c0003111:	74 07                	je     c000311a <_list_pop_front+0x29>
c0003113:	b8 00 00 00 00       	mov    $0x0,%eax
c0003118:	eb 26                	jmp    c0003140 <_list_pop_front+0x4f>
c000311a:	8b 45 08             	mov    0x8(%ebp),%eax
c000311d:	8b 40 04             	mov    0x4(%eax),%eax
c0003120:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003123:	8b 45 08             	mov    0x8(%ebp),%eax
c0003126:	8b 40 04             	mov    0x4(%eax),%eax
c0003129:	8b 50 04             	mov    0x4(%eax),%edx
c000312c:	8b 45 08             	mov    0x8(%ebp),%eax
c000312f:	89 50 04             	mov    %edx,0x4(%eax)
c0003132:	8b 45 08             	mov    0x8(%ebp),%eax
c0003135:	8b 40 04             	mov    0x4(%eax),%eax
c0003138:	8b 55 08             	mov    0x8(%ebp),%edx
c000313b:	89 10                	mov    %edx,(%eax)
c000313d:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003140:	c9                   	leave  
c0003141:	c3                   	ret    

c0003142 <_list_front>:
c0003142:	55                   	push   %ebp
c0003143:	89 e5                	mov    %esp,%ebp
c0003145:	83 ec 08             	sub    $0x8,%esp
c0003148:	e8 cc f0 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c000314d:	05 b3 2e 00 00       	add    $0x2eb3,%eax
c0003152:	83 ec 0c             	sub    $0xc,%esp
c0003155:	ff 75 08             	pushl  0x8(%ebp)
c0003158:	e8 9b 00 00 00       	call   c00031f8 <_list_empty>
c000315d:	83 c4 10             	add    $0x10,%esp
c0003160:	84 c0                	test   %al,%al
c0003162:	74 07                	je     c000316b <_list_front+0x29>
c0003164:	b8 00 00 00 00       	mov    $0x0,%eax
c0003169:	eb 06                	jmp    c0003171 <_list_front+0x2f>
c000316b:	8b 45 08             	mov    0x8(%ebp),%eax
c000316e:	8b 40 04             	mov    0x4(%eax),%eax
c0003171:	c9                   	leave  
c0003172:	c3                   	ret    

c0003173 <_list_pop_back>:
c0003173:	55                   	push   %ebp
c0003174:	89 e5                	mov    %esp,%ebp
c0003176:	83 ec 18             	sub    $0x18,%esp
c0003179:	e8 9b f0 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c000317e:	05 82 2e 00 00       	add    $0x2e82,%eax
c0003183:	83 ec 0c             	sub    $0xc,%esp
c0003186:	ff 75 08             	pushl  0x8(%ebp)
c0003189:	e8 6a 00 00 00       	call   c00031f8 <_list_empty>
c000318e:	83 c4 10             	add    $0x10,%esp
c0003191:	84 c0                	test   %al,%al
c0003193:	74 07                	je     c000319c <_list_pop_back+0x29>
c0003195:	b8 00 00 00 00       	mov    $0x0,%eax
c000319a:	eb 29                	jmp    c00031c5 <_list_pop_back+0x52>
c000319c:	8b 45 08             	mov    0x8(%ebp),%eax
c000319f:	8b 40 08             	mov    0x8(%eax),%eax
c00031a2:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00031a5:	8b 45 08             	mov    0x8(%ebp),%eax
c00031a8:	8b 40 08             	mov    0x8(%eax),%eax
c00031ab:	8b 10                	mov    (%eax),%edx
c00031ad:	8b 45 08             	mov    0x8(%ebp),%eax
c00031b0:	89 50 08             	mov    %edx,0x8(%eax)
c00031b3:	8b 45 08             	mov    0x8(%ebp),%eax
c00031b6:	8b 40 08             	mov    0x8(%eax),%eax
c00031b9:	8b 55 08             	mov    0x8(%ebp),%edx
c00031bc:	83 c2 08             	add    $0x8,%edx
c00031bf:	89 50 04             	mov    %edx,0x4(%eax)
c00031c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00031c5:	c9                   	leave  
c00031c6:	c3                   	ret    

c00031c7 <_list_back>:
c00031c7:	55                   	push   %ebp
c00031c8:	89 e5                	mov    %esp,%ebp
c00031ca:	83 ec 08             	sub    $0x8,%esp
c00031cd:	e8 47 f0 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c00031d2:	05 2e 2e 00 00       	add    $0x2e2e,%eax
c00031d7:	83 ec 0c             	sub    $0xc,%esp
c00031da:	ff 75 08             	pushl  0x8(%ebp)
c00031dd:	e8 16 00 00 00       	call   c00031f8 <_list_empty>
c00031e2:	83 c4 10             	add    $0x10,%esp
c00031e5:	84 c0                	test   %al,%al
c00031e7:	74 07                	je     c00031f0 <_list_back+0x29>
c00031e9:	b8 00 00 00 00       	mov    $0x0,%eax
c00031ee:	eb 06                	jmp    c00031f6 <_list_back+0x2f>
c00031f0:	8b 45 08             	mov    0x8(%ebp),%eax
c00031f3:	8b 40 08             	mov    0x8(%eax),%eax
c00031f6:	c9                   	leave  
c00031f7:	c3                   	ret    

c00031f8 <_list_empty>:
c00031f8:	55                   	push   %ebp
c00031f9:	89 e5                	mov    %esp,%ebp
c00031fb:	e8 19 f0 ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0003200:	05 00 2e 00 00       	add    $0x2e00,%eax
c0003205:	8b 45 08             	mov    0x8(%ebp),%eax
c0003208:	8b 40 04             	mov    0x4(%eax),%eax
c000320b:	8b 55 08             	mov    0x8(%ebp),%edx
c000320e:	83 c2 08             	add    $0x8,%edx
c0003211:	39 d0                	cmp    %edx,%eax
c0003213:	75 07                	jne    c000321c <_list_empty+0x24>
c0003215:	b8 01 00 00 00       	mov    $0x1,%eax
c000321a:	eb 05                	jmp    c0003221 <_list_empty+0x29>
c000321c:	b8 00 00 00 00       	mov    $0x0,%eax
c0003221:	5d                   	pop    %ebp
c0003222:	c3                   	ret    

c0003223 <_list_find>:
c0003223:	55                   	push   %ebp
c0003224:	89 e5                	mov    %esp,%ebp
c0003226:	83 ec 10             	sub    $0x10,%esp
c0003229:	e8 eb ef ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c000322e:	05 d2 2d 00 00       	add    $0x2dd2,%eax
c0003233:	8b 45 08             	mov    0x8(%ebp),%eax
c0003236:	8b 40 04             	mov    0x4(%eax),%eax
c0003239:	89 45 fc             	mov    %eax,-0x4(%ebp)
c000323c:	eb 0f                	jmp    c000324d <_list_find+0x2a>
c000323e:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0003241:	3b 45 0c             	cmp    0xc(%ebp),%eax
c0003244:	75 07                	jne    c000324d <_list_find+0x2a>
c0003246:	b8 01 00 00 00       	mov    $0x1,%eax
c000324b:	eb 18                	jmp    c0003265 <_list_find+0x42>
c000324d:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0003250:	8d 50 08             	lea    0x8(%eax),%edx
c0003253:	89 55 fc             	mov    %edx,-0x4(%ebp)
c0003256:	8b 55 08             	mov    0x8(%ebp),%edx
c0003259:	83 c2 08             	add    $0x8,%edx
c000325c:	39 d0                	cmp    %edx,%eax
c000325e:	75 de                	jne    c000323e <_list_find+0x1b>
c0003260:	b8 00 00 00 00       	mov    $0x0,%eax
c0003265:	c9                   	leave  
c0003266:	c3                   	ret    

c0003267 <outb>:
c0003267:	55                   	push   %ebp
c0003268:	89 e5                	mov    %esp,%ebp
c000326a:	83 ec 08             	sub    $0x8,%esp
c000326d:	e8 a7 ef ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0003272:	05 8e 2d 00 00       	add    $0x2d8e,%eax
c0003277:	8b 55 08             	mov    0x8(%ebp),%edx
c000327a:	8b 45 0c             	mov    0xc(%ebp),%eax
c000327d:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c0003281:	88 45 f8             	mov    %al,-0x8(%ebp)
c0003284:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c0003288:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c000328c:	ee                   	out    %al,(%dx)
c000328d:	90                   	nop
c000328e:	c9                   	leave  
c000328f:	c3                   	ret    

c0003290 <outsw>:
c0003290:	55                   	push   %ebp
c0003291:	89 e5                	mov    %esp,%ebp
c0003293:	56                   	push   %esi
c0003294:	53                   	push   %ebx
c0003295:	83 ec 04             	sub    $0x4,%esp
c0003298:	e8 7c ef ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c000329d:	05 63 2d 00 00       	add    $0x2d63,%eax
c00032a2:	8b 45 08             	mov    0x8(%ebp),%eax
c00032a5:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c00032a9:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c00032ad:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c00032b0:	8b 45 10             	mov    0x10(%ebp),%eax
c00032b3:	89 cb                	mov    %ecx,%ebx
c00032b5:	89 de                	mov    %ebx,%esi
c00032b7:	89 c1                	mov    %eax,%ecx
c00032b9:	fc                   	cld    
c00032ba:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c00032bd:	89 c8                	mov    %ecx,%eax
c00032bf:	89 f3                	mov    %esi,%ebx
c00032c1:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c00032c4:	89 45 10             	mov    %eax,0x10(%ebp)
c00032c7:	90                   	nop
c00032c8:	83 c4 04             	add    $0x4,%esp
c00032cb:	5b                   	pop    %ebx
c00032cc:	5e                   	pop    %esi
c00032cd:	5d                   	pop    %ebp
c00032ce:	c3                   	ret    

c00032cf <inb>:
c00032cf:	55                   	push   %ebp
c00032d0:	89 e5                	mov    %esp,%ebp
c00032d2:	83 ec 14             	sub    $0x14,%esp
c00032d5:	e8 3f ef ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c00032da:	05 26 2d 00 00       	add    $0x2d26,%eax
c00032df:	8b 45 08             	mov    0x8(%ebp),%eax
c00032e2:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c00032e6:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c00032ea:	89 c2                	mov    %eax,%edx
c00032ec:	ec                   	in     (%dx),%al
c00032ed:	88 45 ff             	mov    %al,-0x1(%ebp)
c00032f0:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c00032f4:	c9                   	leave  
c00032f5:	c3                   	ret    

c00032f6 <insw>:
c00032f6:	55                   	push   %ebp
c00032f7:	89 e5                	mov    %esp,%ebp
c00032f9:	57                   	push   %edi
c00032fa:	53                   	push   %ebx
c00032fb:	83 ec 04             	sub    $0x4,%esp
c00032fe:	e8 16 ef ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0003303:	05 fd 2c 00 00       	add    $0x2cfd,%eax
c0003308:	8b 45 08             	mov    0x8(%ebp),%eax
c000330b:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c000330f:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0003313:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0003316:	8b 45 10             	mov    0x10(%ebp),%eax
c0003319:	89 cb                	mov    %ecx,%ebx
c000331b:	89 df                	mov    %ebx,%edi
c000331d:	89 c1                	mov    %eax,%ecx
c000331f:	fc                   	cld    
c0003320:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0003323:	89 c8                	mov    %ecx,%eax
c0003325:	89 fb                	mov    %edi,%ebx
c0003327:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c000332a:	89 45 10             	mov    %eax,0x10(%ebp)
c000332d:	90                   	nop
c000332e:	83 c4 04             	add    $0x4,%esp
c0003331:	5b                   	pop    %ebx
c0003332:	5f                   	pop    %edi
c0003333:	5d                   	pop    %ebp
c0003334:	c3                   	ret    

c0003335 <frequency_set>:
c0003335:	55                   	push   %ebp
c0003336:	89 e5                	mov    %esp,%ebp
c0003338:	57                   	push   %edi
c0003339:	56                   	push   %esi
c000333a:	53                   	push   %ebx
c000333b:	83 ec 14             	sub    $0x14,%esp
c000333e:	e8 d6 ee ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0003343:	05 bd 2c 00 00       	add    $0x2cbd,%eax
c0003348:	8b 75 08             	mov    0x8(%ebp),%esi
c000334b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
c000334e:	8b 4d 10             	mov    0x10(%ebp),%ecx
c0003351:	8b 55 14             	mov    0x14(%ebp),%edx
c0003354:	8b 7d 18             	mov    0x18(%ebp),%edi
c0003357:	89 f0                	mov    %esi,%eax
c0003359:	88 45 f0             	mov    %al,-0x10(%ebp)
c000335c:	88 5d ec             	mov    %bl,-0x14(%ebp)
c000335f:	88 4d e8             	mov    %cl,-0x18(%ebp)
c0003362:	88 55 e4             	mov    %dl,-0x1c(%ebp)
c0003365:	89 f8                	mov    %edi,%eax
c0003367:	66 89 45 e0          	mov    %ax,-0x20(%ebp)
c000336b:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
c000336f:	c1 e0 06             	shl    $0x6,%eax
c0003372:	89 c2                	mov    %eax,%edx
c0003374:	0f b6 45 e8          	movzbl -0x18(%ebp),%eax
c0003378:	c1 e0 04             	shl    $0x4,%eax
c000337b:	09 c2                	or     %eax,%edx
c000337d:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
c0003381:	01 c0                	add    %eax,%eax
c0003383:	09 d0                	or     %edx,%eax
c0003385:	0f b6 c0             	movzbl %al,%eax
c0003388:	50                   	push   %eax
c0003389:	6a 43                	push   $0x43
c000338b:	e8 d7 fe ff ff       	call   c0003267 <outb>
c0003390:	83 c4 08             	add    $0x8,%esp
c0003393:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
c0003397:	0f b6 d0             	movzbl %al,%edx
c000339a:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c000339e:	52                   	push   %edx
c000339f:	50                   	push   %eax
c00033a0:	e8 c2 fe ff ff       	call   c0003267 <outb>
c00033a5:	83 c4 08             	add    $0x8,%esp
c00033a8:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
c00033ac:	0f b6 c0             	movzbl %al,%eax
c00033af:	c1 f8 08             	sar    $0x8,%eax
c00033b2:	0f b6 d0             	movzbl %al,%edx
c00033b5:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c00033b9:	52                   	push   %edx
c00033ba:	50                   	push   %eax
c00033bb:	e8 a7 fe ff ff       	call   c0003267 <outb>
c00033c0:	83 c4 08             	add    $0x8,%esp
c00033c3:	90                   	nop
c00033c4:	8d 65 f4             	lea    -0xc(%ebp),%esp
c00033c7:	5b                   	pop    %ebx
c00033c8:	5e                   	pop    %esi
c00033c9:	5f                   	pop    %edi
c00033ca:	5d                   	pop    %ebp
c00033cb:	c3                   	ret    

c00033cc <timer_init>:
c00033cc:	55                   	push   %ebp
c00033cd:	89 e5                	mov    %esp,%ebp
c00033cf:	53                   	push   %ebx
c00033d0:	83 ec 04             	sub    $0x4,%esp
c00033d3:	e8 a5 e2 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c00033d8:	81 c3 28 2c 00 00    	add    $0x2c28,%ebx
c00033de:	68 4d 17 00 00       	push   $0x174d
c00033e3:	6a 02                	push   $0x2
c00033e5:	6a 03                	push   $0x3
c00033e7:	6a 00                	push   $0x0
c00033e9:	6a 40                	push   $0x40
c00033eb:	e8 45 ff ff ff       	call   c0003335 <frequency_set>
c00033f0:	83 c4 14             	add    $0x14,%esp
c00033f3:	83 ec 08             	sub    $0x8,%esp
c00033f6:	8d 83 0d d4 ff ff    	lea    -0x2bf3(%ebx),%eax
c00033fc:	50                   	push   %eax
c00033fd:	6a 20                	push   $0x20
c00033ff:	e8 f6 ed ff ff       	call   c00021fa <register_handler>
c0003404:	83 c4 10             	add    $0x10,%esp
c0003407:	90                   	nop
c0003408:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000340b:	c9                   	leave  
c000340c:	c3                   	ret    

c000340d <intr_timer_handler>:
c000340d:	55                   	push   %ebp
c000340e:	89 e5                	mov    %esp,%ebp
c0003410:	53                   	push   %ebx
c0003411:	83 ec 14             	sub    $0x14,%esp
c0003414:	e8 64 e2 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c0003419:	81 c3 e7 2b 00 00    	add    $0x2be7,%ebx
c000341f:	e8 2c f6 ff ff       	call   c0002a50 <running_thread>
c0003424:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003427:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000342a:	c7 40 38 06 07 92 19 	movl   $0x19920706,0x38(%eax)
c0003431:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003434:	8b 40 20             	mov    0x20(%eax),%eax
c0003437:	8d 50 01             	lea    0x1(%eax),%edx
c000343a:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000343d:	89 50 20             	mov    %edx,0x20(%eax)
c0003440:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003443:	8b 40 1c             	mov    0x1c(%eax),%eax
c0003446:	85 c0                	test   %eax,%eax
c0003448:	75 07                	jne    c0003451 <intr_timer_handler+0x44>
c000344a:	e8 b5 f8 ff ff       	call   c0002d04 <sched>
c000344f:	eb 0f                	jmp    c0003460 <intr_timer_handler+0x53>
c0003451:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003454:	8b 40 1c             	mov    0x1c(%eax),%eax
c0003457:	8d 50 ff             	lea    -0x1(%eax),%edx
c000345a:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000345d:	89 50 1c             	mov    %edx,0x1c(%eax)
c0003460:	90                   	nop
c0003461:	83 c4 14             	add    $0x14,%esp
c0003464:	5b                   	pop    %ebx
c0003465:	5d                   	pop    %ebp
c0003466:	c3                   	ret    

c0003467 <console_init>:
c0003467:	55                   	push   %ebp
c0003468:	89 e5                	mov    %esp,%ebp
c000346a:	53                   	push   %ebx
c000346b:	83 ec 04             	sub    $0x4,%esp
c000346e:	e8 a6 ed ff ff       	call   c0002219 <__x86.get_pc_thunk.ax>
c0003473:	05 8d 2b 00 00       	add    $0x2b8d,%eax
c0003478:	83 ec 0c             	sub    $0xc,%esp
c000347b:	8d 90 a8 01 00 00    	lea    0x1a8(%eax),%edx
c0003481:	52                   	push   %edx
c0003482:	89 c3                	mov    %eax,%ebx
c0003484:	e8 6c fa ff ff       	call   c0002ef5 <init_lock>
c0003489:	83 c4 10             	add    $0x10,%esp
c000348c:	90                   	nop
c000348d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003490:	c9                   	leave  
c0003491:	c3                   	ret    

c0003492 <console_put_char>:
c0003492:	55                   	push   %ebp
c0003493:	89 e5                	mov    %esp,%ebp
c0003495:	53                   	push   %ebx
c0003496:	83 ec 14             	sub    $0x14,%esp
c0003499:	e8 df e1 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c000349e:	81 c3 62 2b 00 00    	add    $0x2b62,%ebx
c00034a4:	8b 45 08             	mov    0x8(%ebp),%eax
c00034a7:	88 45 f4             	mov    %al,-0xc(%ebp)
c00034aa:	83 ec 0c             	sub    $0xc,%esp
c00034ad:	8d 83 a8 01 00 00    	lea    0x1a8(%ebx),%eax
c00034b3:	50                   	push   %eax
c00034b4:	e8 70 fa ff ff       	call   c0002f29 <acquire_lock>
c00034b9:	83 c4 10             	add    $0x10,%esp
c00034bc:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
c00034c0:	83 ec 0c             	sub    $0xc,%esp
c00034c3:	50                   	push   %eax
c00034c4:	e8 c7 e1 ff ff       	call   c0001690 <put_char>
c00034c9:	83 c4 10             	add    $0x10,%esp
c00034cc:	83 ec 0c             	sub    $0xc,%esp
c00034cf:	8d 83 a8 01 00 00    	lea    0x1a8(%ebx),%eax
c00034d5:	50                   	push   %eax
c00034d6:	e8 bf fa ff ff       	call   c0002f9a <release_lock>
c00034db:	83 c4 10             	add    $0x10,%esp
c00034de:	90                   	nop
c00034df:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00034e2:	c9                   	leave  
c00034e3:	c3                   	ret    

c00034e4 <console_put_str>:
c00034e4:	55                   	push   %ebp
c00034e5:	89 e5                	mov    %esp,%ebp
c00034e7:	53                   	push   %ebx
c00034e8:	83 ec 04             	sub    $0x4,%esp
c00034eb:	e8 8d e1 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c00034f0:	81 c3 10 2b 00 00    	add    $0x2b10,%ebx
c00034f6:	83 ec 0c             	sub    $0xc,%esp
c00034f9:	8d 83 a8 01 00 00    	lea    0x1a8(%ebx),%eax
c00034ff:	50                   	push   %eax
c0003500:	e8 24 fa ff ff       	call   c0002f29 <acquire_lock>
c0003505:	83 c4 10             	add    $0x10,%esp
c0003508:	83 ec 0c             	sub    $0xc,%esp
c000350b:	ff 75 08             	pushl  0x8(%ebp)
c000350e:	e8 71 e2 ff ff       	call   c0001784 <put_str>
c0003513:	83 c4 10             	add    $0x10,%esp
c0003516:	83 ec 0c             	sub    $0xc,%esp
c0003519:	8d 83 a8 01 00 00    	lea    0x1a8(%ebx),%eax
c000351f:	50                   	push   %eax
c0003520:	e8 75 fa ff ff       	call   c0002f9a <release_lock>
c0003525:	83 c4 10             	add    $0x10,%esp
c0003528:	90                   	nop
c0003529:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000352c:	c9                   	leave  
c000352d:	c3                   	ret    

c000352e <console_put_int>:
c000352e:	55                   	push   %ebp
c000352f:	89 e5                	mov    %esp,%ebp
c0003531:	53                   	push   %ebx
c0003532:	83 ec 04             	sub    $0x4,%esp
c0003535:	e8 43 e1 ff ff       	call   c000167d <__x86.get_pc_thunk.bx>
c000353a:	81 c3 c6 2a 00 00    	add    $0x2ac6,%ebx
c0003540:	83 ec 0c             	sub    $0xc,%esp
c0003543:	8d 83 a8 01 00 00    	lea    0x1a8(%ebx),%eax
c0003549:	50                   	push   %eax
c000354a:	e8 da f9 ff ff       	call   c0002f29 <acquire_lock>
c000354f:	83 c4 10             	add    $0x10,%esp
c0003552:	83 ec 0c             	sub    $0xc,%esp
c0003555:	ff 75 08             	pushl  0x8(%ebp)
c0003558:	e8 6a e2 ff ff       	call   c00017c7 <put_int>
c000355d:	83 c4 10             	add    $0x10,%esp
c0003560:	83 ec 0c             	sub    $0xc,%esp
c0003563:	8d 83 a8 01 00 00    	lea    0x1a8(%ebx),%eax
c0003569:	50                   	push   %eax
c000356a:	e8 2b fa ff ff       	call   c0002f9a <release_lock>
c000356f:	83 c4 10             	add    $0x10,%esp
c0003572:	90                   	nop
c0003573:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003576:	c9                   	leave  
c0003577:	c3                   	ret    
