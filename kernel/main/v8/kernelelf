
kernel：     檔案格式 elf32-i386


Disassembly of section .text:

c0001500 <main>:
c0001500:	8d 4c 24 04          	lea    0x4(%esp),%ecx
c0001504:	83 e4 f0             	and    $0xfffffff0,%esp
c0001507:	ff 71 fc             	pushl  -0x4(%ecx)
c000150a:	55                   	push   %ebp
c000150b:	89 e5                	mov    %esp,%ebp
c000150d:	53                   	push   %ebx
c000150e:	51                   	push   %ecx
c000150f:	e8 4e 00 00 00       	call   c0001562 <__x86.get_pc_thunk.bx>
c0001514:	81 c3 ec 5a 00 00    	add    $0x5aec,%ebx
c000151a:	e8 07 00 00 00       	call   c0001526 <initialize_all>
c000151f:	e8 d8 0c 00 00       	call   c00021fc <intopen>
c0001524:	eb fe                	jmp    c0001524 <main+0x24>

c0001526 <initialize_all>:
c0001526:	55                   	push   %ebp
c0001527:	89 e5                	mov    %esp,%ebp
c0001529:	53                   	push   %ebx
c000152a:	83 ec 04             	sub    $0x4,%esp
c000152d:	e8 30 00 00 00       	call   c0001562 <__x86.get_pc_thunk.bx>
c0001532:	81 c3 ce 5a 00 00    	add    $0x5ace,%ebx
c0001538:	e8 4f 0c 00 00       	call   c000218c <idt_init>
c000153d:	e8 d4 0e 00 00       	call   c0002416 <bitmap_init_all>
c0001542:	e8 d2 21 00 00       	call   c0003719 <timer_init>
c0001547:	e8 66 1b 00 00       	call   c00030b2 <thread_init>
c000154c:	e8 63 22 00 00       	call   c00037b4 <console_init>
c0001551:	e8 f2 26 00 00       	call   c0003c48 <keyboard_init>
c0001556:	e8 4e 2a 00 00       	call   c0003fa9 <tss_init>
c000155b:	90                   	nop
c000155c:	83 c4 04             	add    $0x4,%esp
c000155f:	5b                   	pop    %ebx
c0001560:	5d                   	pop    %ebp
c0001561:	c3                   	ret    

c0001562 <__x86.get_pc_thunk.bx>:
c0001562:	8b 1c 24             	mov    (%esp),%ebx
c0001565:	c3                   	ret    
c0001566:	66 90                	xchg   %ax,%ax
c0001568:	66 90                	xchg   %ax,%ax
c000156a:	66 90                	xchg   %ax,%ax
c000156c:	66 90                	xchg   %ax,%ax
c000156e:	66 90                	xchg   %ax,%ax

c0001570 <put_char>:
c0001570:	60                   	pusha  
c0001571:	66 b8 18 00          	mov    $0x18,%ax
c0001575:	8e e8                	mov    %eax,%gs
c0001577:	66 ba d4 03          	mov    $0x3d4,%dx
c000157b:	b0 0e                	mov    $0xe,%al
c000157d:	ee                   	out    %al,(%dx)
c000157e:	66 ba d5 03          	mov    $0x3d5,%dx
c0001582:	ec                   	in     (%dx),%al
c0001583:	88 c4                	mov    %al,%ah
c0001585:	66 ba d4 03          	mov    $0x3d4,%dx
c0001589:	b0 0f                	mov    $0xf,%al
c000158b:	ee                   	out    %al,(%dx)
c000158c:	66 ba d5 03          	mov    $0x3d5,%dx
c0001590:	ec                   	in     (%dx),%al
c0001591:	66 89 c3             	mov    %ax,%bx
c0001594:	8a 44 24 24          	mov    0x24(%esp),%al
c0001598:	3c 0a                	cmp    $0xa,%al
c000159a:	74 0a                	je     c00015a6 <put_char.is_enter>
c000159c:	3c 0d                	cmp    $0xd,%al
c000159e:	74 06                	je     c00015a6 <put_char.is_enter>
c00015a0:	3c 08                	cmp    $0x8,%al
c00015a2:	74 18                	je     c00015bc <put_char.is_backspace>
c00015a4:	eb 34                	jmp    c00015da <put_char.normal_case>

c00015a6 <put_char.is_enter>:
c00015a6:	66 31 d2             	xor    %dx,%dx
c00015a9:	66 89 d8             	mov    %bx,%ax
c00015ac:	66 b9 50 00          	mov    $0x50,%cx
c00015b0:	66 f7 f1             	div    %cx
c00015b3:	66 29 d3             	sub    %dx,%bx
c00015b6:	66 83 c3 50          	add    $0x50,%bx
c00015ba:	eb 33                	jmp    c00015ef <put_char.page_roll>

c00015bc <put_char.is_backspace>:
c00015bc:	66 83 fb 00          	cmp    $0x0,%bx
c00015c0:	74 7f                	je     c0001641 <put_char.putchar_end>
c00015c2:	66 83 eb 01          	sub    $0x1,%bx
c00015c6:	66 d1 e3             	shl    %bx
c00015c9:	65 67 c6 07 00       	movb   $0x0,%gs:(%bx)
c00015ce:	66 43                	inc    %bx
c00015d0:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c00015d5:	66 d1 eb             	shr    %bx
c00015d8:	eb 15                	jmp    c00015ef <put_char.page_roll>

c00015da <put_char.normal_case>:
c00015da:	66 d1 e3             	shl    %bx
c00015dd:	65 67 88 07          	mov    %al,%gs:(%bx)
c00015e1:	66 43                	inc    %bx
c00015e3:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c00015e8:	66 43                	inc    %bx
c00015ea:	66 d1 eb             	shr    %bx
c00015ed:	eb 00                	jmp    c00015ef <put_char.page_roll>

c00015ef <put_char.page_roll>:
c00015ef:	66 81 fb d0 07       	cmp    $0x7d0,%bx
c00015f4:	7c 2f                	jl     c0001625 <put_char.reset_cursor>
c00015f6:	fc                   	cld    
c00015f7:	b9 c0 03 00 00       	mov    $0x3c0,%ecx
c00015fc:	be a0 80 0b c0       	mov    $0xc00b80a0,%esi
c0001601:	bf 00 80 0b c0       	mov    $0xc00b8000,%edi
c0001606:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
c0001608:	b9 50 00 00 00       	mov    $0x50,%ecx
c000160d:	66 bb 00 0f          	mov    $0xf00,%bx

c0001611 <put_char.clr>:
c0001611:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c0001616:	66 43                	inc    %bx
c0001618:	65 67 c6 07 20       	movb   $0x20,%gs:(%bx)
c000161d:	66 43                	inc    %bx
c000161f:	e2 f0                	loop   c0001611 <put_char.clr>
c0001621:	66 bb 80 07          	mov    $0x780,%bx

c0001625 <put_char.reset_cursor>:
c0001625:	66 ba d4 03          	mov    $0x3d4,%dx
c0001629:	b0 0e                	mov    $0xe,%al
c000162b:	ee                   	out    %al,(%dx)
c000162c:	66 ba d5 03          	mov    $0x3d5,%dx
c0001630:	88 f8                	mov    %bh,%al
c0001632:	ee                   	out    %al,(%dx)
c0001633:	66 ba d4 03          	mov    $0x3d4,%dx
c0001637:	b0 0f                	mov    $0xf,%al
c0001639:	ee                   	out    %al,(%dx)
c000163a:	66 ba d5 03          	mov    $0x3d5,%dx
c000163e:	88 d8                	mov    %bl,%al
c0001640:	ee                   	out    %al,(%dx)

c0001641 <put_char.putchar_end>:
c0001641:	61                   	popa   
c0001642:	c3                   	ret    

c0001643 <set_cursor>:
c0001643:	8b 5c 24 04          	mov    0x4(%esp),%ebx
c0001647:	66 ba d4 03          	mov    $0x3d4,%dx
c000164b:	b0 0e                	mov    $0xe,%al
c000164d:	ee                   	out    %al,(%dx)
c000164e:	66 ba d5 03          	mov    $0x3d5,%dx
c0001652:	88 f8                	mov    %bh,%al
c0001654:	ee                   	out    %al,(%dx)
c0001655:	66 ba d4 03          	mov    $0x3d4,%dx
c0001659:	b0 0f                	mov    $0xf,%al
c000165b:	ee                   	out    %al,(%dx)
c000165c:	66 ba d5 03          	mov    $0x3d5,%dx
c0001660:	88 d8                	mov    %bl,%al
c0001662:	ee                   	out    %al,(%dx)
c0001663:	c3                   	ret    

c0001664 <put_str>:
c0001664:	55                   	push   %ebp
c0001665:	89 e5                	mov    %esp,%ebp
c0001667:	53                   	push   %ebx
c0001668:	83 ec 14             	sub    $0x14,%esp
c000166b:	e8 f2 fe ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0001670:	81 c3 90 59 00 00    	add    $0x5990,%ebx
c0001676:	8b 45 08             	mov    0x8(%ebp),%eax
c0001679:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000167c:	eb 19                	jmp    c0001697 <put_str+0x33>
c000167e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0001681:	0f b6 00             	movzbl (%eax),%eax
c0001684:	0f b6 c0             	movzbl %al,%eax
c0001687:	83 ec 0c             	sub    $0xc,%esp
c000168a:	50                   	push   %eax
c000168b:	e8 e0 fe ff ff       	call   c0001570 <put_char>
c0001690:	83 c4 10             	add    $0x10,%esp
c0001693:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001697:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000169a:	0f b6 00             	movzbl (%eax),%eax
c000169d:	84 c0                	test   %al,%al
c000169f:	75 dd                	jne    c000167e <put_str+0x1a>
c00016a1:	90                   	nop
c00016a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00016a5:	c9                   	leave  
c00016a6:	c3                   	ret    

c00016a7 <put_int>:
c00016a7:	55                   	push   %ebp
c00016a8:	89 e5                	mov    %esp,%ebp
c00016aa:	53                   	push   %ebx
c00016ab:	83 ec 14             	sub    $0x14,%esp
c00016ae:	e8 af fe ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c00016b3:	81 c3 4d 59 00 00    	add    $0x594d,%ebx
c00016b9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c00016bd:	75 0d                	jne    c00016cc <put_int+0x25>
c00016bf:	83 ec 0c             	sub    $0xc,%esp
c00016c2:	6a 30                	push   $0x30
c00016c4:	e8 a7 fe ff ff       	call   c0001570 <put_char>
c00016c9:	83 c4 10             	add    $0x10,%esp
c00016cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c00016d3:	eb 44                	jmp    c0001719 <put_int+0x72>
c00016d5:	8b 45 08             	mov    0x8(%ebp),%eax
c00016d8:	83 e0 0f             	and    $0xf,%eax
c00016db:	83 f8 09             	cmp    $0x9,%eax
c00016de:	76 17                	jbe    c00016f7 <put_int+0x50>
c00016e0:	8b 45 08             	mov    0x8(%ebp),%eax
c00016e3:	83 e0 0f             	and    $0xf,%eax
c00016e6:	8d 50 57             	lea    0x57(%eax),%edx
c00016e9:	b8 07 00 00 00       	mov    $0x7,%eax
c00016ee:	2b 45 f4             	sub    -0xc(%ebp),%eax
c00016f1:	88 54 05 ec          	mov    %dl,-0x14(%ebp,%eax,1)
c00016f5:	eb 15                	jmp    c000170c <put_int+0x65>
c00016f7:	8b 45 08             	mov    0x8(%ebp),%eax
c00016fa:	83 e0 0f             	and    $0xf,%eax
c00016fd:	8d 50 30             	lea    0x30(%eax),%edx
c0001700:	b8 07 00 00 00       	mov    $0x7,%eax
c0001705:	2b 45 f4             	sub    -0xc(%ebp),%eax
c0001708:	88 54 05 ec          	mov    %dl,-0x14(%ebp,%eax,1)
c000170c:	8b 45 08             	mov    0x8(%ebp),%eax
c000170f:	c1 e8 04             	shr    $0x4,%eax
c0001712:	89 45 08             	mov    %eax,0x8(%ebp)
c0001715:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001719:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)
c000171d:	7e b6                	jle    c00016d5 <put_int+0x2e>
c000171f:	83 ec 0c             	sub    $0xc,%esp
c0001722:	6a 30                	push   $0x30
c0001724:	e8 47 fe ff ff       	call   c0001570 <put_char>
c0001729:	83 c4 10             	add    $0x10,%esp
c000172c:	83 ec 0c             	sub    $0xc,%esp
c000172f:	6a 78                	push   $0x78
c0001731:	e8 3a fe ff ff       	call   c0001570 <put_char>
c0001736:	83 c4 10             	add    $0x10,%esp
c0001739:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001740:	eb 1e                	jmp    c0001760 <put_int+0xb9>
c0001742:	8d 55 ec             	lea    -0x14(%ebp),%edx
c0001745:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0001748:	01 d0                	add    %edx,%eax
c000174a:	0f b6 00             	movzbl (%eax),%eax
c000174d:	0f b6 c0             	movzbl %al,%eax
c0001750:	83 ec 0c             	sub    $0xc,%esp
c0001753:	50                   	push   %eax
c0001754:	e8 17 fe ff ff       	call   c0001570 <put_char>
c0001759:	83 c4 10             	add    $0x10,%esp
c000175c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001760:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)
c0001764:	7e dc                	jle    c0001742 <put_int+0x9b>
c0001766:	90                   	nop
c0001767:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000176a:	c9                   	leave  
c000176b:	c3                   	ret    
c000176c:	66 90                	xchg   %ax,%ax
c000176e:	66 90                	xchg   %ax,%ax

c0001770 <intr0x0entry>:
c0001770:	6a 00                	push   $0x0
c0001772:	1e                   	push   %ds
c0001773:	06                   	push   %es
c0001774:	0f a0                	push   %fs
c0001776:	0f a8                	push   %gs
c0001778:	60                   	pusha  
c0001779:	b0 20                	mov    $0x20,%al
c000177b:	e6 a0                	out    %al,$0xa0
c000177d:	e6 20                	out    %al,$0x20
c000177f:	6a 00                	push   $0x0
c0001781:	ff 15 60 74 00 c0    	call   *0xc0007460
c0001787:	e9 94 58 00 00       	jmp    c0007020 <intr_exit>

c000178c <intr1entry>:
c000178c:	6a 00                	push   $0x0
c000178e:	1e                   	push   %ds
c000178f:	06                   	push   %es
c0001790:	0f a0                	push   %fs
c0001792:	0f a8                	push   %gs
c0001794:	60                   	pusha  
c0001795:	b0 20                	mov    $0x20,%al
c0001797:	e6 a0                	out    %al,$0xa0
c0001799:	e6 20                	out    %al,$0x20
c000179b:	6a 01                	push   $0x1
c000179d:	ff 15 64 74 00 c0    	call   *0xc0007464
c00017a3:	e9 78 58 00 00       	jmp    c0007020 <intr_exit>

c00017a8 <intr2entry>:
c00017a8:	6a 00                	push   $0x0
c00017aa:	1e                   	push   %ds
c00017ab:	06                   	push   %es
c00017ac:	0f a0                	push   %fs
c00017ae:	0f a8                	push   %gs
c00017b0:	60                   	pusha  
c00017b1:	b0 20                	mov    $0x20,%al
c00017b3:	e6 a0                	out    %al,$0xa0
c00017b5:	e6 20                	out    %al,$0x20
c00017b7:	6a 02                	push   $0x2
c00017b9:	ff 15 68 74 00 c0    	call   *0xc0007468
c00017bf:	e9 5c 58 00 00       	jmp    c0007020 <intr_exit>

c00017c4 <intr3entry>:
c00017c4:	6a 00                	push   $0x0
c00017c6:	1e                   	push   %ds
c00017c7:	06                   	push   %es
c00017c8:	0f a0                	push   %fs
c00017ca:	0f a8                	push   %gs
c00017cc:	60                   	pusha  
c00017cd:	b0 20                	mov    $0x20,%al
c00017cf:	e6 a0                	out    %al,$0xa0
c00017d1:	e6 20                	out    %al,$0x20
c00017d3:	6a 03                	push   $0x3
c00017d5:	ff 15 6c 74 00 c0    	call   *0xc000746c
c00017db:	e9 40 58 00 00       	jmp    c0007020 <intr_exit>

c00017e0 <intr4entry>:
c00017e0:	6a 00                	push   $0x0
c00017e2:	1e                   	push   %ds
c00017e3:	06                   	push   %es
c00017e4:	0f a0                	push   %fs
c00017e6:	0f a8                	push   %gs
c00017e8:	60                   	pusha  
c00017e9:	b0 20                	mov    $0x20,%al
c00017eb:	e6 a0                	out    %al,$0xa0
c00017ed:	e6 20                	out    %al,$0x20
c00017ef:	6a 04                	push   $0x4
c00017f1:	ff 15 70 74 00 c0    	call   *0xc0007470
c00017f7:	e9 24 58 00 00       	jmp    c0007020 <intr_exit>

c00017fc <intr5entry>:
c00017fc:	6a 00                	push   $0x0
c00017fe:	1e                   	push   %ds
c00017ff:	06                   	push   %es
c0001800:	0f a0                	push   %fs
c0001802:	0f a8                	push   %gs
c0001804:	60                   	pusha  
c0001805:	b0 20                	mov    $0x20,%al
c0001807:	e6 a0                	out    %al,$0xa0
c0001809:	e6 20                	out    %al,$0x20
c000180b:	6a 05                	push   $0x5
c000180d:	ff 15 74 74 00 c0    	call   *0xc0007474
c0001813:	e9 08 58 00 00       	jmp    c0007020 <intr_exit>

c0001818 <intr6entry>:
c0001818:	6a 00                	push   $0x0
c000181a:	1e                   	push   %ds
c000181b:	06                   	push   %es
c000181c:	0f a0                	push   %fs
c000181e:	0f a8                	push   %gs
c0001820:	60                   	pusha  
c0001821:	b0 20                	mov    $0x20,%al
c0001823:	e6 a0                	out    %al,$0xa0
c0001825:	e6 20                	out    %al,$0x20
c0001827:	6a 06                	push   $0x6
c0001829:	ff 15 78 74 00 c0    	call   *0xc0007478
c000182f:	e9 ec 57 00 00       	jmp    c0007020 <intr_exit>

c0001834 <intr7entry>:
c0001834:	6a 00                	push   $0x0
c0001836:	1e                   	push   %ds
c0001837:	06                   	push   %es
c0001838:	0f a0                	push   %fs
c000183a:	0f a8                	push   %gs
c000183c:	60                   	pusha  
c000183d:	b0 20                	mov    $0x20,%al
c000183f:	e6 a0                	out    %al,$0xa0
c0001841:	e6 20                	out    %al,$0x20
c0001843:	6a 07                	push   $0x7
c0001845:	ff 15 7c 74 00 c0    	call   *0xc000747c
c000184b:	e9 d0 57 00 00       	jmp    c0007020 <intr_exit>

c0001850 <intr8entry>:
c0001850:	6a 00                	push   $0x0
c0001852:	1e                   	push   %ds
c0001853:	06                   	push   %es
c0001854:	0f a0                	push   %fs
c0001856:	0f a8                	push   %gs
c0001858:	60                   	pusha  
c0001859:	b0 20                	mov    $0x20,%al
c000185b:	e6 a0                	out    %al,$0xa0
c000185d:	e6 20                	out    %al,$0x20
c000185f:	6a 08                	push   $0x8
c0001861:	ff 15 80 74 00 c0    	call   *0xc0007480
c0001867:	e9 b4 57 00 00       	jmp    c0007020 <intr_exit>

c000186c <intr9entry>:
c000186c:	6a 00                	push   $0x0
c000186e:	1e                   	push   %ds
c000186f:	06                   	push   %es
c0001870:	0f a0                	push   %fs
c0001872:	0f a8                	push   %gs
c0001874:	60                   	pusha  
c0001875:	b0 20                	mov    $0x20,%al
c0001877:	e6 a0                	out    %al,$0xa0
c0001879:	e6 20                	out    %al,$0x20
c000187b:	6a 09                	push   $0x9
c000187d:	ff 15 84 74 00 c0    	call   *0xc0007484
c0001883:	e9 98 57 00 00       	jmp    c0007020 <intr_exit>

c0001888 <intr10entry>:
c0001888:	6a 00                	push   $0x0
c000188a:	1e                   	push   %ds
c000188b:	06                   	push   %es
c000188c:	0f a0                	push   %fs
c000188e:	0f a8                	push   %gs
c0001890:	60                   	pusha  
c0001891:	b0 20                	mov    $0x20,%al
c0001893:	e6 a0                	out    %al,$0xa0
c0001895:	e6 20                	out    %al,$0x20
c0001897:	6a 0a                	push   $0xa
c0001899:	ff 15 88 74 00 c0    	call   *0xc0007488
c000189f:	e9 7c 57 00 00       	jmp    c0007020 <intr_exit>

c00018a4 <intr11entry>:
c00018a4:	6a 00                	push   $0x0
c00018a6:	1e                   	push   %ds
c00018a7:	06                   	push   %es
c00018a8:	0f a0                	push   %fs
c00018aa:	0f a8                	push   %gs
c00018ac:	60                   	pusha  
c00018ad:	b0 20                	mov    $0x20,%al
c00018af:	e6 a0                	out    %al,$0xa0
c00018b1:	e6 20                	out    %al,$0x20
c00018b3:	6a 0b                	push   $0xb
c00018b5:	ff 15 8c 74 00 c0    	call   *0xc000748c
c00018bb:	e9 60 57 00 00       	jmp    c0007020 <intr_exit>

c00018c0 <intr12entry>:
c00018c0:	6a 00                	push   $0x0
c00018c2:	1e                   	push   %ds
c00018c3:	06                   	push   %es
c00018c4:	0f a0                	push   %fs
c00018c6:	0f a8                	push   %gs
c00018c8:	60                   	pusha  
c00018c9:	b0 20                	mov    $0x20,%al
c00018cb:	e6 a0                	out    %al,$0xa0
c00018cd:	e6 20                	out    %al,$0x20
c00018cf:	6a 0c                	push   $0xc
c00018d1:	ff 15 90 74 00 c0    	call   *0xc0007490
c00018d7:	e9 44 57 00 00       	jmp    c0007020 <intr_exit>

c00018dc <intr13entry>:
c00018dc:	6a 00                	push   $0x0
c00018de:	1e                   	push   %ds
c00018df:	06                   	push   %es
c00018e0:	0f a0                	push   %fs
c00018e2:	0f a8                	push   %gs
c00018e4:	60                   	pusha  
c00018e5:	b0 20                	mov    $0x20,%al
c00018e7:	e6 a0                	out    %al,$0xa0
c00018e9:	e6 20                	out    %al,$0x20
c00018eb:	6a 0d                	push   $0xd
c00018ed:	ff 15 94 74 00 c0    	call   *0xc0007494
c00018f3:	e9 28 57 00 00       	jmp    c0007020 <intr_exit>

c00018f8 <intr14entry>:
c00018f8:	6a 00                	push   $0x0
c00018fa:	1e                   	push   %ds
c00018fb:	06                   	push   %es
c00018fc:	0f a0                	push   %fs
c00018fe:	0f a8                	push   %gs
c0001900:	60                   	pusha  
c0001901:	b0 20                	mov    $0x20,%al
c0001903:	e6 a0                	out    %al,$0xa0
c0001905:	e6 20                	out    %al,$0x20
c0001907:	6a 0e                	push   $0xe
c0001909:	ff 15 98 74 00 c0    	call   *0xc0007498
c000190f:	e9 0c 57 00 00       	jmp    c0007020 <intr_exit>

c0001914 <intr15entry>:
c0001914:	6a 00                	push   $0x0
c0001916:	1e                   	push   %ds
c0001917:	06                   	push   %es
c0001918:	0f a0                	push   %fs
c000191a:	0f a8                	push   %gs
c000191c:	60                   	pusha  
c000191d:	b0 20                	mov    $0x20,%al
c000191f:	e6 a0                	out    %al,$0xa0
c0001921:	e6 20                	out    %al,$0x20
c0001923:	6a 0f                	push   $0xf
c0001925:	ff 15 9c 74 00 c0    	call   *0xc000749c
c000192b:	e9 f0 56 00 00       	jmp    c0007020 <intr_exit>

c0001930 <intr16entry>:
c0001930:	6a 00                	push   $0x0
c0001932:	1e                   	push   %ds
c0001933:	06                   	push   %es
c0001934:	0f a0                	push   %fs
c0001936:	0f a8                	push   %gs
c0001938:	60                   	pusha  
c0001939:	b0 20                	mov    $0x20,%al
c000193b:	e6 a0                	out    %al,$0xa0
c000193d:	e6 20                	out    %al,$0x20
c000193f:	6a 10                	push   $0x10
c0001941:	ff 15 a0 74 00 c0    	call   *0xc00074a0
c0001947:	e9 d4 56 00 00       	jmp    c0007020 <intr_exit>

c000194c <intr17entry>:
c000194c:	6a 00                	push   $0x0
c000194e:	1e                   	push   %ds
c000194f:	06                   	push   %es
c0001950:	0f a0                	push   %fs
c0001952:	0f a8                	push   %gs
c0001954:	60                   	pusha  
c0001955:	b0 20                	mov    $0x20,%al
c0001957:	e6 a0                	out    %al,$0xa0
c0001959:	e6 20                	out    %al,$0x20
c000195b:	6a 11                	push   $0x11
c000195d:	ff 15 a4 74 00 c0    	call   *0xc00074a4
c0001963:	e9 b8 56 00 00       	jmp    c0007020 <intr_exit>

c0001968 <intr18entry>:
c0001968:	6a 00                	push   $0x0
c000196a:	1e                   	push   %ds
c000196b:	06                   	push   %es
c000196c:	0f a0                	push   %fs
c000196e:	0f a8                	push   %gs
c0001970:	60                   	pusha  
c0001971:	b0 20                	mov    $0x20,%al
c0001973:	e6 a0                	out    %al,$0xa0
c0001975:	e6 20                	out    %al,$0x20
c0001977:	6a 12                	push   $0x12
c0001979:	ff 15 a8 74 00 c0    	call   *0xc00074a8
c000197f:	e9 9c 56 00 00       	jmp    c0007020 <intr_exit>

c0001984 <intr19entry>:
c0001984:	6a 00                	push   $0x0
c0001986:	1e                   	push   %ds
c0001987:	06                   	push   %es
c0001988:	0f a0                	push   %fs
c000198a:	0f a8                	push   %gs
c000198c:	60                   	pusha  
c000198d:	b0 20                	mov    $0x20,%al
c000198f:	e6 a0                	out    %al,$0xa0
c0001991:	e6 20                	out    %al,$0x20
c0001993:	6a 13                	push   $0x13
c0001995:	ff 15 ac 74 00 c0    	call   *0xc00074ac
c000199b:	e9 80 56 00 00       	jmp    c0007020 <intr_exit>

c00019a0 <intr20entry>:
c00019a0:	6a 00                	push   $0x0
c00019a2:	1e                   	push   %ds
c00019a3:	06                   	push   %es
c00019a4:	0f a0                	push   %fs
c00019a6:	0f a8                	push   %gs
c00019a8:	60                   	pusha  
c00019a9:	b0 20                	mov    $0x20,%al
c00019ab:	e6 a0                	out    %al,$0xa0
c00019ad:	e6 20                	out    %al,$0x20
c00019af:	6a 14                	push   $0x14
c00019b1:	ff 15 b0 74 00 c0    	call   *0xc00074b0
c00019b7:	e9 64 56 00 00       	jmp    c0007020 <intr_exit>

c00019bc <intr21entry>:
c00019bc:	6a 00                	push   $0x0
c00019be:	1e                   	push   %ds
c00019bf:	06                   	push   %es
c00019c0:	0f a0                	push   %fs
c00019c2:	0f a8                	push   %gs
c00019c4:	60                   	pusha  
c00019c5:	b0 20                	mov    $0x20,%al
c00019c7:	e6 a0                	out    %al,$0xa0
c00019c9:	e6 20                	out    %al,$0x20
c00019cb:	6a 15                	push   $0x15
c00019cd:	ff 15 b4 74 00 c0    	call   *0xc00074b4
c00019d3:	e9 48 56 00 00       	jmp    c0007020 <intr_exit>

c00019d8 <intr22entry>:
c00019d8:	6a 00                	push   $0x0
c00019da:	1e                   	push   %ds
c00019db:	06                   	push   %es
c00019dc:	0f a0                	push   %fs
c00019de:	0f a8                	push   %gs
c00019e0:	60                   	pusha  
c00019e1:	b0 20                	mov    $0x20,%al
c00019e3:	e6 a0                	out    %al,$0xa0
c00019e5:	e6 20                	out    %al,$0x20
c00019e7:	6a 16                	push   $0x16
c00019e9:	ff 15 b8 74 00 c0    	call   *0xc00074b8
c00019ef:	e9 2c 56 00 00       	jmp    c0007020 <intr_exit>

c00019f4 <intr23entry>:
c00019f4:	6a 00                	push   $0x0
c00019f6:	1e                   	push   %ds
c00019f7:	06                   	push   %es
c00019f8:	0f a0                	push   %fs
c00019fa:	0f a8                	push   %gs
c00019fc:	60                   	pusha  
c00019fd:	b0 20                	mov    $0x20,%al
c00019ff:	e6 a0                	out    %al,$0xa0
c0001a01:	e6 20                	out    %al,$0x20
c0001a03:	6a 17                	push   $0x17
c0001a05:	ff 15 bc 74 00 c0    	call   *0xc00074bc
c0001a0b:	e9 10 56 00 00       	jmp    c0007020 <intr_exit>

c0001a10 <intr24entry>:
c0001a10:	6a 00                	push   $0x0
c0001a12:	1e                   	push   %ds
c0001a13:	06                   	push   %es
c0001a14:	0f a0                	push   %fs
c0001a16:	0f a8                	push   %gs
c0001a18:	60                   	pusha  
c0001a19:	b0 20                	mov    $0x20,%al
c0001a1b:	e6 a0                	out    %al,$0xa0
c0001a1d:	e6 20                	out    %al,$0x20
c0001a1f:	6a 18                	push   $0x18
c0001a21:	ff 15 c0 74 00 c0    	call   *0xc00074c0
c0001a27:	e9 f4 55 00 00       	jmp    c0007020 <intr_exit>

c0001a2c <intr25entry>:
c0001a2c:	6a 00                	push   $0x0
c0001a2e:	1e                   	push   %ds
c0001a2f:	06                   	push   %es
c0001a30:	0f a0                	push   %fs
c0001a32:	0f a8                	push   %gs
c0001a34:	60                   	pusha  
c0001a35:	b0 20                	mov    $0x20,%al
c0001a37:	e6 a0                	out    %al,$0xa0
c0001a39:	e6 20                	out    %al,$0x20
c0001a3b:	6a 19                	push   $0x19
c0001a3d:	ff 15 c4 74 00 c0    	call   *0xc00074c4
c0001a43:	e9 d8 55 00 00       	jmp    c0007020 <intr_exit>

c0001a48 <intr26entry>:
c0001a48:	6a 00                	push   $0x0
c0001a4a:	1e                   	push   %ds
c0001a4b:	06                   	push   %es
c0001a4c:	0f a0                	push   %fs
c0001a4e:	0f a8                	push   %gs
c0001a50:	60                   	pusha  
c0001a51:	b0 20                	mov    $0x20,%al
c0001a53:	e6 a0                	out    %al,$0xa0
c0001a55:	e6 20                	out    %al,$0x20
c0001a57:	6a 1a                	push   $0x1a
c0001a59:	ff 15 c8 74 00 c0    	call   *0xc00074c8
c0001a5f:	e9 bc 55 00 00       	jmp    c0007020 <intr_exit>

c0001a64 <intr27entry>:
c0001a64:	6a 00                	push   $0x0
c0001a66:	1e                   	push   %ds
c0001a67:	06                   	push   %es
c0001a68:	0f a0                	push   %fs
c0001a6a:	0f a8                	push   %gs
c0001a6c:	60                   	pusha  
c0001a6d:	b0 20                	mov    $0x20,%al
c0001a6f:	e6 a0                	out    %al,$0xa0
c0001a71:	e6 20                	out    %al,$0x20
c0001a73:	6a 1b                	push   $0x1b
c0001a75:	ff 15 cc 74 00 c0    	call   *0xc00074cc
c0001a7b:	e9 a0 55 00 00       	jmp    c0007020 <intr_exit>

c0001a80 <intr28entry>:
c0001a80:	6a 00                	push   $0x0
c0001a82:	1e                   	push   %ds
c0001a83:	06                   	push   %es
c0001a84:	0f a0                	push   %fs
c0001a86:	0f a8                	push   %gs
c0001a88:	60                   	pusha  
c0001a89:	b0 20                	mov    $0x20,%al
c0001a8b:	e6 a0                	out    %al,$0xa0
c0001a8d:	e6 20                	out    %al,$0x20
c0001a8f:	6a 1c                	push   $0x1c
c0001a91:	ff 15 d0 74 00 c0    	call   *0xc00074d0
c0001a97:	e9 84 55 00 00       	jmp    c0007020 <intr_exit>

c0001a9c <intr29entry>:
c0001a9c:	6a 00                	push   $0x0
c0001a9e:	1e                   	push   %ds
c0001a9f:	06                   	push   %es
c0001aa0:	0f a0                	push   %fs
c0001aa2:	0f a8                	push   %gs
c0001aa4:	60                   	pusha  
c0001aa5:	b0 20                	mov    $0x20,%al
c0001aa7:	e6 a0                	out    %al,$0xa0
c0001aa9:	e6 20                	out    %al,$0x20
c0001aab:	6a 1d                	push   $0x1d
c0001aad:	ff 15 d4 74 00 c0    	call   *0xc00074d4
c0001ab3:	e9 68 55 00 00       	jmp    c0007020 <intr_exit>

c0001ab8 <intr30entry>:
c0001ab8:	6a 00                	push   $0x0
c0001aba:	1e                   	push   %ds
c0001abb:	06                   	push   %es
c0001abc:	0f a0                	push   %fs
c0001abe:	0f a8                	push   %gs
c0001ac0:	60                   	pusha  
c0001ac1:	b0 20                	mov    $0x20,%al
c0001ac3:	e6 a0                	out    %al,$0xa0
c0001ac5:	e6 20                	out    %al,$0x20
c0001ac7:	6a 1e                	push   $0x1e
c0001ac9:	ff 15 d8 74 00 c0    	call   *0xc00074d8
c0001acf:	e9 4c 55 00 00       	jmp    c0007020 <intr_exit>

c0001ad4 <intr31entry>:
c0001ad4:	6a 00                	push   $0x0
c0001ad6:	1e                   	push   %ds
c0001ad7:	06                   	push   %es
c0001ad8:	0f a0                	push   %fs
c0001ada:	0f a8                	push   %gs
c0001adc:	60                   	pusha  
c0001add:	b0 20                	mov    $0x20,%al
c0001adf:	e6 a0                	out    %al,$0xa0
c0001ae1:	e6 20                	out    %al,$0x20
c0001ae3:	6a 1f                	push   $0x1f
c0001ae5:	ff 15 dc 74 00 c0    	call   *0xc00074dc
c0001aeb:	e9 30 55 00 00       	jmp    c0007020 <intr_exit>

c0001af0 <intr32entry>:
c0001af0:	6a 00                	push   $0x0
c0001af2:	1e                   	push   %ds
c0001af3:	06                   	push   %es
c0001af4:	0f a0                	push   %fs
c0001af6:	0f a8                	push   %gs
c0001af8:	60                   	pusha  
c0001af9:	b0 20                	mov    $0x20,%al
c0001afb:	e6 a0                	out    %al,$0xa0
c0001afd:	e6 20                	out    %al,$0x20
c0001aff:	6a 20                	push   $0x20
c0001b01:	ff 15 e0 74 00 c0    	call   *0xc00074e0
c0001b07:	e9 14 55 00 00       	jmp    c0007020 <intr_exit>

c0001b0c <intr33entry>:
c0001b0c:	6a 00                	push   $0x0
c0001b0e:	1e                   	push   %ds
c0001b0f:	06                   	push   %es
c0001b10:	0f a0                	push   %fs
c0001b12:	0f a8                	push   %gs
c0001b14:	60                   	pusha  
c0001b15:	b0 20                	mov    $0x20,%al
c0001b17:	e6 a0                	out    %al,$0xa0
c0001b19:	e6 20                	out    %al,$0x20
c0001b1b:	6a 21                	push   $0x21
c0001b1d:	ff 15 e4 74 00 c0    	call   *0xc00074e4
c0001b23:	e9 f8 54 00 00       	jmp    c0007020 <intr_exit>

c0001b28 <intr34entry>:
c0001b28:	6a 00                	push   $0x0
c0001b2a:	1e                   	push   %ds
c0001b2b:	06                   	push   %es
c0001b2c:	0f a0                	push   %fs
c0001b2e:	0f a8                	push   %gs
c0001b30:	60                   	pusha  
c0001b31:	b0 20                	mov    $0x20,%al
c0001b33:	e6 a0                	out    %al,$0xa0
c0001b35:	e6 20                	out    %al,$0x20
c0001b37:	6a 22                	push   $0x22
c0001b39:	ff 15 e8 74 00 c0    	call   *0xc00074e8
c0001b3f:	e9 dc 54 00 00       	jmp    c0007020 <intr_exit>

c0001b44 <intr35entry>:
c0001b44:	6a 00                	push   $0x0
c0001b46:	1e                   	push   %ds
c0001b47:	06                   	push   %es
c0001b48:	0f a0                	push   %fs
c0001b4a:	0f a8                	push   %gs
c0001b4c:	60                   	pusha  
c0001b4d:	b0 20                	mov    $0x20,%al
c0001b4f:	e6 a0                	out    %al,$0xa0
c0001b51:	e6 20                	out    %al,$0x20
c0001b53:	6a 23                	push   $0x23
c0001b55:	ff 15 ec 74 00 c0    	call   *0xc00074ec
c0001b5b:	e9 c0 54 00 00       	jmp    c0007020 <intr_exit>

c0001b60 <intr36entry>:
c0001b60:	6a 00                	push   $0x0
c0001b62:	1e                   	push   %ds
c0001b63:	06                   	push   %es
c0001b64:	0f a0                	push   %fs
c0001b66:	0f a8                	push   %gs
c0001b68:	60                   	pusha  
c0001b69:	b0 20                	mov    $0x20,%al
c0001b6b:	e6 a0                	out    %al,$0xa0
c0001b6d:	e6 20                	out    %al,$0x20
c0001b6f:	6a 24                	push   $0x24
c0001b71:	ff 15 f0 74 00 c0    	call   *0xc00074f0
c0001b77:	e9 a4 54 00 00       	jmp    c0007020 <intr_exit>

c0001b7c <intr37entry>:
c0001b7c:	6a 00                	push   $0x0
c0001b7e:	1e                   	push   %ds
c0001b7f:	06                   	push   %es
c0001b80:	0f a0                	push   %fs
c0001b82:	0f a8                	push   %gs
c0001b84:	60                   	pusha  
c0001b85:	b0 20                	mov    $0x20,%al
c0001b87:	e6 a0                	out    %al,$0xa0
c0001b89:	e6 20                	out    %al,$0x20
c0001b8b:	6a 25                	push   $0x25
c0001b8d:	ff 15 f4 74 00 c0    	call   *0xc00074f4
c0001b93:	e9 88 54 00 00       	jmp    c0007020 <intr_exit>

c0001b98 <intr38entry>:
c0001b98:	6a 00                	push   $0x0
c0001b9a:	1e                   	push   %ds
c0001b9b:	06                   	push   %es
c0001b9c:	0f a0                	push   %fs
c0001b9e:	0f a8                	push   %gs
c0001ba0:	60                   	pusha  
c0001ba1:	b0 20                	mov    $0x20,%al
c0001ba3:	e6 a0                	out    %al,$0xa0
c0001ba5:	e6 20                	out    %al,$0x20
c0001ba7:	6a 26                	push   $0x26
c0001ba9:	ff 15 f8 74 00 c0    	call   *0xc00074f8
c0001baf:	e9 6c 54 00 00       	jmp    c0007020 <intr_exit>

c0001bb4 <intr39entry>:
c0001bb4:	6a 00                	push   $0x0
c0001bb6:	1e                   	push   %ds
c0001bb7:	06                   	push   %es
c0001bb8:	0f a0                	push   %fs
c0001bba:	0f a8                	push   %gs
c0001bbc:	60                   	pusha  
c0001bbd:	b0 20                	mov    $0x20,%al
c0001bbf:	e6 a0                	out    %al,$0xa0
c0001bc1:	e6 20                	out    %al,$0x20
c0001bc3:	6a 27                	push   $0x27
c0001bc5:	ff 15 fc 74 00 c0    	call   *0xc00074fc
c0001bcb:	e9 50 54 00 00       	jmp    c0007020 <intr_exit>

c0001bd0 <intr40entry>:
c0001bd0:	6a 00                	push   $0x0
c0001bd2:	1e                   	push   %ds
c0001bd3:	06                   	push   %es
c0001bd4:	0f a0                	push   %fs
c0001bd6:	0f a8                	push   %gs
c0001bd8:	60                   	pusha  
c0001bd9:	b0 20                	mov    $0x20,%al
c0001bdb:	e6 a0                	out    %al,$0xa0
c0001bdd:	e6 20                	out    %al,$0x20
c0001bdf:	6a 28                	push   $0x28
c0001be1:	ff 15 00 75 00 c0    	call   *0xc0007500
c0001be7:	e9 34 54 00 00       	jmp    c0007020 <intr_exit>

c0001bec <intr41entry>:
c0001bec:	6a 00                	push   $0x0
c0001bee:	1e                   	push   %ds
c0001bef:	06                   	push   %es
c0001bf0:	0f a0                	push   %fs
c0001bf2:	0f a8                	push   %gs
c0001bf4:	60                   	pusha  
c0001bf5:	b0 20                	mov    $0x20,%al
c0001bf7:	e6 a0                	out    %al,$0xa0
c0001bf9:	e6 20                	out    %al,$0x20
c0001bfb:	6a 29                	push   $0x29
c0001bfd:	ff 15 04 75 00 c0    	call   *0xc0007504
c0001c03:	e9 18 54 00 00       	jmp    c0007020 <intr_exit>

c0001c08 <intr42entry>:
c0001c08:	6a 00                	push   $0x0
c0001c0a:	1e                   	push   %ds
c0001c0b:	06                   	push   %es
c0001c0c:	0f a0                	push   %fs
c0001c0e:	0f a8                	push   %gs
c0001c10:	60                   	pusha  
c0001c11:	b0 20                	mov    $0x20,%al
c0001c13:	e6 a0                	out    %al,$0xa0
c0001c15:	e6 20                	out    %al,$0x20
c0001c17:	6a 2a                	push   $0x2a
c0001c19:	ff 15 08 75 00 c0    	call   *0xc0007508
c0001c1f:	e9 fc 53 00 00       	jmp    c0007020 <intr_exit>

c0001c24 <intr43entry>:
c0001c24:	6a 00                	push   $0x0
c0001c26:	1e                   	push   %ds
c0001c27:	06                   	push   %es
c0001c28:	0f a0                	push   %fs
c0001c2a:	0f a8                	push   %gs
c0001c2c:	60                   	pusha  
c0001c2d:	b0 20                	mov    $0x20,%al
c0001c2f:	e6 a0                	out    %al,$0xa0
c0001c31:	e6 20                	out    %al,$0x20
c0001c33:	6a 2b                	push   $0x2b
c0001c35:	ff 15 0c 75 00 c0    	call   *0xc000750c
c0001c3b:	e9 e0 53 00 00       	jmp    c0007020 <intr_exit>

c0001c40 <intr44entry>:
c0001c40:	6a 00                	push   $0x0
c0001c42:	1e                   	push   %ds
c0001c43:	06                   	push   %es
c0001c44:	0f a0                	push   %fs
c0001c46:	0f a8                	push   %gs
c0001c48:	60                   	pusha  
c0001c49:	b0 20                	mov    $0x20,%al
c0001c4b:	e6 a0                	out    %al,$0xa0
c0001c4d:	e6 20                	out    %al,$0x20
c0001c4f:	6a 2c                	push   $0x2c
c0001c51:	ff 15 10 75 00 c0    	call   *0xc0007510
c0001c57:	e9 c4 53 00 00       	jmp    c0007020 <intr_exit>

c0001c5c <intr45entry>:
c0001c5c:	6a 00                	push   $0x0
c0001c5e:	1e                   	push   %ds
c0001c5f:	06                   	push   %es
c0001c60:	0f a0                	push   %fs
c0001c62:	0f a8                	push   %gs
c0001c64:	60                   	pusha  
c0001c65:	b0 20                	mov    $0x20,%al
c0001c67:	e6 a0                	out    %al,$0xa0
c0001c69:	e6 20                	out    %al,$0x20
c0001c6b:	6a 2d                	push   $0x2d
c0001c6d:	ff 15 14 75 00 c0    	call   *0xc0007514
c0001c73:	e9 a8 53 00 00       	jmp    c0007020 <intr_exit>

c0001c78 <intr46entry>:
c0001c78:	6a 00                	push   $0x0
c0001c7a:	1e                   	push   %ds
c0001c7b:	06                   	push   %es
c0001c7c:	0f a0                	push   %fs
c0001c7e:	0f a8                	push   %gs
c0001c80:	60                   	pusha  
c0001c81:	b0 20                	mov    $0x20,%al
c0001c83:	e6 a0                	out    %al,$0xa0
c0001c85:	e6 20                	out    %al,$0x20
c0001c87:	6a 2e                	push   $0x2e
c0001c89:	ff 15 18 75 00 c0    	call   *0xc0007518
c0001c8f:	e9 8c 53 00 00       	jmp    c0007020 <intr_exit>

c0001c94 <intr47entry>:
c0001c94:	6a 00                	push   $0x0
c0001c96:	1e                   	push   %ds
c0001c97:	06                   	push   %es
c0001c98:	0f a0                	push   %fs
c0001c9a:	0f a8                	push   %gs
c0001c9c:	60                   	pusha  
c0001c9d:	b0 20                	mov    $0x20,%al
c0001c9f:	e6 a0                	out    %al,$0xa0
c0001ca1:	e6 20                	out    %al,$0x20
c0001ca3:	6a 2f                	push   $0x2f
c0001ca5:	ff 15 1c 75 00 c0    	call   *0xc000751c
c0001cab:	e9 70 53 00 00       	jmp    c0007020 <intr_exit>

c0001cb0 <intr48entry>:
c0001cb0:	6a 00                	push   $0x0
c0001cb2:	1e                   	push   %ds
c0001cb3:	06                   	push   %es
c0001cb4:	0f a0                	push   %fs
c0001cb6:	0f a8                	push   %gs
c0001cb8:	60                   	pusha  
c0001cb9:	b0 20                	mov    $0x20,%al
c0001cbb:	e6 a0                	out    %al,$0xa0
c0001cbd:	e6 20                	out    %al,$0x20
c0001cbf:	6a 30                	push   $0x30
c0001cc1:	ff 15 20 75 00 c0    	call   *0xc0007520
c0001cc7:	e9 54 53 00 00       	jmp    c0007020 <intr_exit>

c0001ccc <outb>:
c0001ccc:	55                   	push   %ebp
c0001ccd:	89 e5                	mov    %esp,%ebp
c0001ccf:	83 ec 08             	sub    $0x8,%esp
c0001cd2:	e8 d2 05 00 00       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0001cd7:	05 29 53 00 00       	add    $0x5329,%eax
c0001cdc:	8b 55 08             	mov    0x8(%ebp),%edx
c0001cdf:	8b 45 0c             	mov    0xc(%ebp),%eax
c0001ce2:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c0001ce6:	88 45 f8             	mov    %al,-0x8(%ebp)
c0001ce9:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c0001ced:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c0001cf1:	ee                   	out    %al,(%dx)
c0001cf2:	90                   	nop
c0001cf3:	c9                   	leave  
c0001cf4:	c3                   	ret    

c0001cf5 <outsw>:
c0001cf5:	55                   	push   %ebp
c0001cf6:	89 e5                	mov    %esp,%ebp
c0001cf8:	56                   	push   %esi
c0001cf9:	53                   	push   %ebx
c0001cfa:	83 ec 04             	sub    $0x4,%esp
c0001cfd:	e8 a7 05 00 00       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0001d02:	05 fe 52 00 00       	add    $0x52fe,%eax
c0001d07:	8b 45 08             	mov    0x8(%ebp),%eax
c0001d0a:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0001d0e:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0001d12:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0001d15:	8b 45 10             	mov    0x10(%ebp),%eax
c0001d18:	89 cb                	mov    %ecx,%ebx
c0001d1a:	89 de                	mov    %ebx,%esi
c0001d1c:	89 c1                	mov    %eax,%ecx
c0001d1e:	fc                   	cld    
c0001d1f:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c0001d22:	89 c8                	mov    %ecx,%eax
c0001d24:	89 f3                	mov    %esi,%ebx
c0001d26:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0001d29:	89 45 10             	mov    %eax,0x10(%ebp)
c0001d2c:	90                   	nop
c0001d2d:	83 c4 04             	add    $0x4,%esp
c0001d30:	5b                   	pop    %ebx
c0001d31:	5e                   	pop    %esi
c0001d32:	5d                   	pop    %ebp
c0001d33:	c3                   	ret    

c0001d34 <inb>:
c0001d34:	55                   	push   %ebp
c0001d35:	89 e5                	mov    %esp,%ebp
c0001d37:	83 ec 14             	sub    $0x14,%esp
c0001d3a:	e8 6a 05 00 00       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0001d3f:	05 c1 52 00 00       	add    $0x52c1,%eax
c0001d44:	8b 45 08             	mov    0x8(%ebp),%eax
c0001d47:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0001d4b:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c0001d4f:	89 c2                	mov    %eax,%edx
c0001d51:	ec                   	in     (%dx),%al
c0001d52:	88 45 ff             	mov    %al,-0x1(%ebp)
c0001d55:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c0001d59:	c9                   	leave  
c0001d5a:	c3                   	ret    

c0001d5b <insw>:
c0001d5b:	55                   	push   %ebp
c0001d5c:	89 e5                	mov    %esp,%ebp
c0001d5e:	57                   	push   %edi
c0001d5f:	53                   	push   %ebx
c0001d60:	83 ec 04             	sub    $0x4,%esp
c0001d63:	e8 41 05 00 00       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0001d68:	05 98 52 00 00       	add    $0x5298,%eax
c0001d6d:	8b 45 08             	mov    0x8(%ebp),%eax
c0001d70:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0001d74:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0001d78:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0001d7b:	8b 45 10             	mov    0x10(%ebp),%eax
c0001d7e:	89 cb                	mov    %ecx,%ebx
c0001d80:	89 df                	mov    %ebx,%edi
c0001d82:	89 c1                	mov    %eax,%ecx
c0001d84:	fc                   	cld    
c0001d85:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0001d88:	89 c8                	mov    %ecx,%eax
c0001d8a:	89 fb                	mov    %edi,%ebx
c0001d8c:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0001d8f:	89 45 10             	mov    %eax,0x10(%ebp)
c0001d92:	90                   	nop
c0001d93:	83 c4 04             	add    $0x4,%esp
c0001d96:	5b                   	pop    %ebx
c0001d97:	5f                   	pop    %edi
c0001d98:	5d                   	pop    %ebp
c0001d99:	c3                   	ret    

c0001d9a <make_idt_desc>:
c0001d9a:	55                   	push   %ebp
c0001d9b:	89 e5                	mov    %esp,%ebp
c0001d9d:	83 ec 04             	sub    $0x4,%esp
c0001da0:	e8 04 05 00 00       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0001da5:	05 5b 52 00 00       	add    $0x525b,%eax
c0001daa:	8b 45 0c             	mov    0xc(%ebp),%eax
c0001dad:	88 45 fc             	mov    %al,-0x4(%ebp)
c0001db0:	8b 45 10             	mov    0x10(%ebp),%eax
c0001db3:	89 c2                	mov    %eax,%edx
c0001db5:	8b 45 08             	mov    0x8(%ebp),%eax
c0001db8:	66 89 10             	mov    %dx,(%eax)
c0001dbb:	8b 45 08             	mov    0x8(%ebp),%eax
c0001dbe:	66 c7 40 02 08 00    	movw   $0x8,0x2(%eax)
c0001dc4:	8b 45 08             	mov    0x8(%ebp),%eax
c0001dc7:	c6 40 04 00          	movb   $0x0,0x4(%eax)
c0001dcb:	8b 45 08             	mov    0x8(%ebp),%eax
c0001dce:	0f b6 55 fc          	movzbl -0x4(%ebp),%edx
c0001dd2:	88 50 05             	mov    %dl,0x5(%eax)
c0001dd5:	8b 45 10             	mov    0x10(%ebp),%eax
c0001dd8:	c1 e8 10             	shr    $0x10,%eax
c0001ddb:	89 c2                	mov    %eax,%edx
c0001ddd:	8b 45 08             	mov    0x8(%ebp),%eax
c0001de0:	66 89 50 06          	mov    %dx,0x6(%eax)
c0001de4:	90                   	nop
c0001de5:	c9                   	leave  
c0001de6:	c3                   	ret    

c0001de7 <idt_desc_init>:
c0001de7:	55                   	push   %ebp
c0001de8:	89 e5                	mov    %esp,%ebp
c0001dea:	53                   	push   %ebx
c0001deb:	83 ec 14             	sub    $0x14,%esp
c0001dee:	e8 6f f7 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0001df3:	81 c3 0d 52 00 00    	add    $0x520d,%ebx
c0001df9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001e00:	eb 31                	jmp    c0001e33 <idt_desc_init+0x4c>
c0001e02:	c7 c0 2e 70 00 c0    	mov    $0xc000702e,%eax
c0001e08:	8b 55 f4             	mov    -0xc(%ebp),%edx
c0001e0b:	8b 04 90             	mov    (%eax,%edx,4),%eax
c0001e0e:	8b 55 f4             	mov    -0xc(%ebp),%edx
c0001e11:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
c0001e18:	8d 93 80 01 00 00    	lea    0x180(%ebx),%edx
c0001e1e:	01 ca                	add    %ecx,%edx
c0001e20:	50                   	push   %eax
c0001e21:	68 8e 00 00 00       	push   $0x8e
c0001e26:	52                   	push   %edx
c0001e27:	e8 6e ff ff ff       	call   c0001d9a <make_idt_desc>
c0001e2c:	83 c4 0c             	add    $0xc,%esp
c0001e2f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001e33:	83 7d f4 2f          	cmpl   $0x2f,-0xc(%ebp)
c0001e37:	7e c9                	jle    c0001e02 <idt_desc_init+0x1b>
c0001e39:	83 ec 0c             	sub    $0xc,%esp
c0001e3c:	8d 83 a8 d0 ff ff    	lea    -0x2f58(%ebx),%eax
c0001e42:	50                   	push   %eax
c0001e43:	e8 1c f8 ff ff       	call   c0001664 <put_str>
c0001e48:	83 c4 10             	add    $0x10,%esp
c0001e4b:	90                   	nop
c0001e4c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001e4f:	c9                   	leave  
c0001e50:	c3                   	ret    

c0001e51 <pic_init>:
c0001e51:	55                   	push   %ebp
c0001e52:	89 e5                	mov    %esp,%ebp
c0001e54:	53                   	push   %ebx
c0001e55:	83 ec 04             	sub    $0x4,%esp
c0001e58:	e8 05 f7 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0001e5d:	81 c3 a3 51 00 00    	add    $0x51a3,%ebx
c0001e63:	6a 11                	push   $0x11
c0001e65:	6a 20                	push   $0x20
c0001e67:	e8 60 fe ff ff       	call   c0001ccc <outb>
c0001e6c:	83 c4 08             	add    $0x8,%esp
c0001e6f:	6a 20                	push   $0x20
c0001e71:	6a 21                	push   $0x21
c0001e73:	e8 54 fe ff ff       	call   c0001ccc <outb>
c0001e78:	83 c4 08             	add    $0x8,%esp
c0001e7b:	6a 04                	push   $0x4
c0001e7d:	6a 21                	push   $0x21
c0001e7f:	e8 48 fe ff ff       	call   c0001ccc <outb>
c0001e84:	83 c4 08             	add    $0x8,%esp
c0001e87:	6a 01                	push   $0x1
c0001e89:	6a 21                	push   $0x21
c0001e8b:	e8 3c fe ff ff       	call   c0001ccc <outb>
c0001e90:	83 c4 08             	add    $0x8,%esp
c0001e93:	6a 11                	push   $0x11
c0001e95:	68 a0 00 00 00       	push   $0xa0
c0001e9a:	e8 2d fe ff ff       	call   c0001ccc <outb>
c0001e9f:	83 c4 08             	add    $0x8,%esp
c0001ea2:	6a 28                	push   $0x28
c0001ea4:	68 a1 00 00 00       	push   $0xa1
c0001ea9:	e8 1e fe ff ff       	call   c0001ccc <outb>
c0001eae:	83 c4 08             	add    $0x8,%esp
c0001eb1:	6a 02                	push   $0x2
c0001eb3:	68 a1 00 00 00       	push   $0xa1
c0001eb8:	e8 0f fe ff ff       	call   c0001ccc <outb>
c0001ebd:	83 c4 08             	add    $0x8,%esp
c0001ec0:	6a 01                	push   $0x1
c0001ec2:	68 a1 00 00 00       	push   $0xa1
c0001ec7:	e8 00 fe ff ff       	call   c0001ccc <outb>
c0001ecc:	83 c4 08             	add    $0x8,%esp
c0001ecf:	68 fd 00 00 00       	push   $0xfd
c0001ed4:	6a 21                	push   $0x21
c0001ed6:	e8 f1 fd ff ff       	call   c0001ccc <outb>
c0001edb:	83 c4 08             	add    $0x8,%esp
c0001ede:	68 ff 00 00 00       	push   $0xff
c0001ee3:	68 a1 00 00 00       	push   $0xa1
c0001ee8:	e8 df fd ff ff       	call   c0001ccc <outb>
c0001eed:	83 c4 08             	add    $0x8,%esp
c0001ef0:	83 ec 0c             	sub    $0xc,%esp
c0001ef3:	8d 83 c0 d0 ff ff    	lea    -0x2f40(%ebx),%eax
c0001ef9:	50                   	push   %eax
c0001efa:	e8 65 f7 ff ff       	call   c0001664 <put_str>
c0001eff:	83 c4 10             	add    $0x10,%esp
c0001f02:	90                   	nop
c0001f03:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001f06:	c9                   	leave  
c0001f07:	c3                   	ret    

c0001f08 <general>:
c0001f08:	55                   	push   %ebp
c0001f09:	89 e5                	mov    %esp,%ebp
c0001f0b:	53                   	push   %ebx
c0001f0c:	83 ec 14             	sub    $0x14,%esp
c0001f0f:	e8 4e f6 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0001f14:	81 c3 ec 50 00 00    	add    $0x50ec,%ebx
c0001f1a:	83 7d 08 27          	cmpl   $0x27,0x8(%ebp)
c0001f1e:	0f 84 d5 00 00 00    	je     c0001ff9 <general+0xf1>
c0001f24:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)
c0001f28:	0f 84 cb 00 00 00    	je     c0001ff9 <general+0xf1>
c0001f2e:	83 ec 0c             	sub    $0xc,%esp
c0001f31:	6a 00                	push   $0x0
c0001f33:	e8 0b f7 ff ff       	call   c0001643 <set_cursor>
c0001f38:	83 c4 10             	add    $0x10,%esp
c0001f3b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001f42:	eb 11                	jmp    c0001f55 <general+0x4d>
c0001f44:	83 ec 0c             	sub    $0xc,%esp
c0001f47:	6a 20                	push   $0x20
c0001f49:	e8 22 f6 ff ff       	call   c0001570 <put_char>
c0001f4e:	83 c4 10             	add    $0x10,%esp
c0001f51:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001f55:	81 7d f4 3f 01 00 00 	cmpl   $0x13f,-0xc(%ebp)
c0001f5c:	7e e6                	jle    c0001f44 <general+0x3c>
c0001f5e:	83 ec 0c             	sub    $0xc,%esp
c0001f61:	6a 00                	push   $0x0
c0001f63:	e8 db f6 ff ff       	call   c0001643 <set_cursor>
c0001f68:	83 c4 10             	add    $0x10,%esp
c0001f6b:	83 ec 0c             	sub    $0xc,%esp
c0001f6e:	8d 83 d8 d0 ff ff    	lea    -0x2f28(%ebx),%eax
c0001f74:	50                   	push   %eax
c0001f75:	e8 ea f6 ff ff       	call   c0001664 <put_str>
c0001f7a:	83 c4 10             	add    $0x10,%esp
c0001f7d:	83 ec 0c             	sub    $0xc,%esp
c0001f80:	6a 58                	push   $0x58
c0001f82:	e8 bc f6 ff ff       	call   c0001643 <set_cursor>
c0001f87:	83 c4 10             	add    $0x10,%esp
c0001f8a:	c7 c0 a0 73 00 c0    	mov    $0xc00073a0,%eax
c0001f90:	8b 55 08             	mov    0x8(%ebp),%edx
c0001f93:	8b 04 90             	mov    (%eax,%edx,4),%eax
c0001f96:	83 ec 0c             	sub    $0xc,%esp
c0001f99:	50                   	push   %eax
c0001f9a:	e8 c5 f6 ff ff       	call   c0001664 <put_str>
c0001f9f:	83 c4 10             	add    $0x10,%esp
c0001fa2:	83 7d 08 0e          	cmpl   $0xe,0x8(%ebp)
c0001fa6:	75 2d                	jne    c0001fd5 <general+0xcd>
c0001fa8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
c0001faf:	0f 20 d0             	mov    %cr2,%eax
c0001fb2:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0001fb5:	83 ec 0c             	sub    $0xc,%esp
c0001fb8:	8d 83 f9 d0 ff ff    	lea    -0x2f07(%ebx),%eax
c0001fbe:	50                   	push   %eax
c0001fbf:	e8 a0 f6 ff ff       	call   c0001664 <put_str>
c0001fc4:	83 c4 10             	add    $0x10,%esp
c0001fc7:	83 ec 0c             	sub    $0xc,%esp
c0001fca:	ff 75 f0             	pushl  -0x10(%ebp)
c0001fcd:	e8 d5 f6 ff ff       	call   c00016a7 <put_int>
c0001fd2:	83 c4 10             	add    $0x10,%esp
c0001fd5:	83 ec 0c             	sub    $0xc,%esp
c0001fd8:	68 a8 00 00 00       	push   $0xa8
c0001fdd:	e8 61 f6 ff ff       	call   c0001643 <set_cursor>
c0001fe2:	83 c4 10             	add    $0x10,%esp
c0001fe5:	83 ec 0c             	sub    $0xc,%esp
c0001fe8:	8d 83 18 d1 ff ff    	lea    -0x2ee8(%ebx),%eax
c0001fee:	50                   	push   %eax
c0001fef:	e8 70 f6 ff ff       	call   c0001664 <put_str>
c0001ff4:	83 c4 10             	add    $0x10,%esp
c0001ff7:	eb fe                	jmp    c0001ff7 <general+0xef>
c0001ff9:	90                   	nop
c0001ffa:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001ffd:	c9                   	leave  
c0001ffe:	c3                   	ret    

c0001fff <exception_init>:
c0001fff:	55                   	push   %ebp
c0002000:	89 e5                	mov    %esp,%ebp
c0002002:	53                   	push   %ebx
c0002003:	83 ec 10             	sub    $0x10,%esp
c0002006:	e8 9e 02 00 00       	call   c00022a9 <__x86.get_pc_thunk.ax>
c000200b:	05 f5 4f 00 00       	add    $0x4ff5,%eax
c0002010:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002016:	8d 88 37 d1 ff ff    	lea    -0x2ec9(%eax),%ecx
c000201c:	89 0a                	mov    %ecx,(%edx)
c000201e:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002024:	8d 88 44 d1 ff ff    	lea    -0x2ebc(%eax),%ecx
c000202a:	89 4a 04             	mov    %ecx,0x4(%edx)
c000202d:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002033:	8d 88 54 d1 ff ff    	lea    -0x2eac(%eax),%ecx
c0002039:	89 4a 08             	mov    %ecx,0x8(%edx)
c000203c:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002042:	8d 88 62 d1 ff ff    	lea    -0x2e9e(%eax),%ecx
c0002048:	89 4a 0c             	mov    %ecx,0xc(%edx)
c000204b:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002051:	8d 88 77 d1 ff ff    	lea    -0x2e89(%eax),%ecx
c0002057:	89 4a 10             	mov    %ecx,0x10(%edx)
c000205a:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002060:	8d 88 8a d1 ff ff    	lea    -0x2e76(%eax),%ecx
c0002066:	89 4a 14             	mov    %ecx,0x14(%edx)
c0002069:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c000206f:	8d 88 a7 d1 ff ff    	lea    -0x2e59(%eax),%ecx
c0002075:	89 4a 18             	mov    %ecx,0x18(%edx)
c0002078:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c000207e:	8d 88 b6 d1 ff ff    	lea    -0x2e4a(%eax),%ecx
c0002084:	89 4a 1c             	mov    %ecx,0x1c(%edx)
c0002087:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c000208d:	8d 88 cb d1 ff ff    	lea    -0x2e35(%eax),%ecx
c0002093:	89 4a 20             	mov    %ecx,0x20(%edx)
c0002096:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c000209c:	8d 88 e2 d1 ff ff    	lea    -0x2e1e(%eax),%ecx
c00020a2:	89 4a 24             	mov    %ecx,0x24(%edx)
c00020a5:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020ab:	8d 88 fe d1 ff ff    	lea    -0x2e02(%eax),%ecx
c00020b1:	89 4a 28             	mov    %ecx,0x28(%edx)
c00020b4:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020ba:	8d 88 14 d2 ff ff    	lea    -0x2dec(%eax),%ecx
c00020c0:	89 4a 2c             	mov    %ecx,0x2c(%edx)
c00020c3:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020c9:	8d 88 28 d2 ff ff    	lea    -0x2dd8(%eax),%ecx
c00020cf:	89 4a 30             	mov    %ecx,0x30(%edx)
c00020d2:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020d8:	8d 88 3e d2 ff ff    	lea    -0x2dc2(%eax),%ecx
c00020de:	89 4a 34             	mov    %ecx,0x34(%edx)
c00020e1:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020e7:	8d 88 5c d2 ff ff    	lea    -0x2da4(%eax),%ecx
c00020ed:	89 4a 38             	mov    %ecx,0x38(%edx)
c00020f0:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c00020f6:	8d 88 67 d2 ff ff    	lea    -0x2d99(%eax),%ecx
c00020fc:	89 4a 3c             	mov    %ecx,0x3c(%edx)
c00020ff:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002105:	8d 88 70 d2 ff ff    	lea    -0x2d90(%eax),%ecx
c000210b:	89 4a 40             	mov    %ecx,0x40(%edx)
c000210e:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002114:	8d 88 85 d2 ff ff    	lea    -0x2d7b(%eax),%ecx
c000211a:	89 4a 44             	mov    %ecx,0x44(%edx)
c000211d:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002123:	8d 88 98 d2 ff ff    	lea    -0x2d68(%eax),%ecx
c0002129:	89 4a 48             	mov    %ecx,0x48(%edx)
c000212c:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c0002132:	8d 88 aa d2 ff ff    	lea    -0x2d56(%eax),%ecx
c0002138:	89 4a 4c             	mov    %ecx,0x4c(%edx)
c000213b:	c7 45 f8 14 00 00 00 	movl   $0x14,-0x8(%ebp)
c0002142:	eb 16                	jmp    c000215a <exception_init+0x15b>
c0002144:	c7 c2 a0 73 00 c0    	mov    $0xc00073a0,%edx
c000214a:	8b 4d f8             	mov    -0x8(%ebp),%ecx
c000214d:	8d 98 c2 d2 ff ff    	lea    -0x2d3e(%eax),%ebx
c0002153:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
c0002156:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c000215a:	83 7d f8 2f          	cmpl   $0x2f,-0x8(%ebp)
c000215e:	7e e4                	jle    c0002144 <exception_init+0x145>
c0002160:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c0002167:	eb 16                	jmp    c000217f <exception_init+0x180>
c0002169:	c7 c2 60 74 00 c0    	mov    $0xc0007460,%edx
c000216f:	8b 4d f8             	mov    -0x8(%ebp),%ecx
c0002172:	8d 98 08 af ff ff    	lea    -0x50f8(%eax),%ebx
c0002178:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
c000217b:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c000217f:	83 7d f8 2f          	cmpl   $0x2f,-0x8(%ebp)
c0002183:	7e e4                	jle    c0002169 <exception_init+0x16a>
c0002185:	90                   	nop
c0002186:	83 c4 10             	add    $0x10,%esp
c0002189:	5b                   	pop    %ebx
c000218a:	5d                   	pop    %ebp
c000218b:	c3                   	ret    

c000218c <idt_init>:
c000218c:	55                   	push   %ebp
c000218d:	89 e5                	mov    %esp,%ebp
c000218f:	57                   	push   %edi
c0002190:	56                   	push   %esi
c0002191:	53                   	push   %ebx
c0002192:	83 ec 1c             	sub    $0x1c,%esp
c0002195:	e8 13 01 00 00       	call   c00022ad <__x86.get_pc_thunk.di>
c000219a:	81 c7 66 4e 00 00    	add    $0x4e66,%edi
c00021a0:	e8 42 fc ff ff       	call   c0001de7 <idt_desc_init>
c00021a5:	e8 a7 fc ff ff       	call   c0001e51 <pic_init>
c00021aa:	e8 50 fe ff ff       	call   c0001fff <exception_init>
c00021af:	8d 87 80 01 00 00    	lea    0x180(%edi),%eax
c00021b5:	ba 00 00 00 00       	mov    $0x0,%edx
c00021ba:	0f a4 c2 10          	shld   $0x10,%eax,%edx
c00021be:	c1 e0 10             	shl    $0x10,%eax
c00021c1:	89 d1                	mov    %edx,%ecx
c00021c3:	89 c2                	mov    %eax,%edx
c00021c5:	89 d0                	mov    %edx,%eax
c00021c7:	0d 7f 01 00 00       	or     $0x17f,%eax
c00021cc:	89 c3                	mov    %eax,%ebx
c00021ce:	89 c8                	mov    %ecx,%eax
c00021d0:	80 cc 00             	or     $0x0,%ah
c00021d3:	89 c6                	mov    %eax,%esi
c00021d5:	89 5d e0             	mov    %ebx,-0x20(%ebp)
c00021d8:	89 75 e4             	mov    %esi,-0x1c(%ebp)
c00021db:	0f 01 5d e0          	lidtl  -0x20(%ebp)
c00021df:	83 ec 0c             	sub    $0xc,%esp
c00021e2:	8d 87 cc d2 ff ff    	lea    -0x2d34(%edi),%eax
c00021e8:	50                   	push   %eax
c00021e9:	89 fb                	mov    %edi,%ebx
c00021eb:	e8 74 f4 ff ff       	call   c0001664 <put_str>
c00021f0:	83 c4 10             	add    $0x10,%esp
c00021f3:	90                   	nop
c00021f4:	8d 65 f4             	lea    -0xc(%ebp),%esp
c00021f7:	5b                   	pop    %ebx
c00021f8:	5e                   	pop    %esi
c00021f9:	5f                   	pop    %edi
c00021fa:	5d                   	pop    %ebp
c00021fb:	c3                   	ret    

c00021fc <intopen>:
c00021fc:	55                   	push   %ebp
c00021fd:	89 e5                	mov    %esp,%ebp
c00021ff:	83 ec 10             	sub    $0x10,%esp
c0002202:	e8 a2 00 00 00       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002207:	05 f9 4d 00 00       	add    $0x4df9,%eax
c000220c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c0002213:	9c                   	pushf  
c0002214:	58                   	pop    %eax
c0002215:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002218:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000221b:	25 00 02 00 00       	and    $0x200,%eax
c0002220:	85 c0                	test   %eax,%eax
c0002222:	75 01                	jne    c0002225 <intopen+0x29>
c0002224:	fb                   	sti    
c0002225:	90                   	nop
c0002226:	c9                   	leave  
c0002227:	c3                   	ret    

c0002228 <intclose>:
c0002228:	55                   	push   %ebp
c0002229:	89 e5                	mov    %esp,%ebp
c000222b:	83 ec 10             	sub    $0x10,%esp
c000222e:	e8 76 00 00 00       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002233:	05 cd 4d 00 00       	add    $0x4dcd,%eax
c0002238:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c000223f:	9c                   	pushf  
c0002240:	58                   	pop    %eax
c0002241:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002244:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002247:	25 00 02 00 00       	and    $0x200,%eax
c000224c:	85 c0                	test   %eax,%eax
c000224e:	74 01                	je     c0002251 <intclose+0x29>
c0002250:	fa                   	cli    
c0002251:	90                   	nop
c0002252:	c9                   	leave  
c0002253:	c3                   	ret    

c0002254 <intr_status>:
c0002254:	55                   	push   %ebp
c0002255:	89 e5                	mov    %esp,%ebp
c0002257:	83 ec 10             	sub    $0x10,%esp
c000225a:	e8 4a 00 00 00       	call   c00022a9 <__x86.get_pc_thunk.ax>
c000225f:	05 a1 4d 00 00       	add    $0x4da1,%eax
c0002264:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c000226b:	9c                   	pushf  
c000226c:	58                   	pop    %eax
c000226d:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002270:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002273:	25 00 02 00 00       	and    $0x200,%eax
c0002278:	85 c0                	test   %eax,%eax
c000227a:	74 07                	je     c0002283 <intr_status+0x2f>
c000227c:	b8 01 00 00 00       	mov    $0x1,%eax
c0002281:	eb 05                	jmp    c0002288 <intr_status+0x34>
c0002283:	b8 00 00 00 00       	mov    $0x0,%eax
c0002288:	c9                   	leave  
c0002289:	c3                   	ret    

c000228a <register_handler>:
c000228a:	55                   	push   %ebp
c000228b:	89 e5                	mov    %esp,%ebp
c000228d:	e8 17 00 00 00       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002292:	05 6e 4d 00 00       	add    $0x4d6e,%eax
c0002297:	c7 c0 60 74 00 c0    	mov    $0xc0007460,%eax
c000229d:	8b 55 08             	mov    0x8(%ebp),%edx
c00022a0:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c00022a3:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
c00022a6:	90                   	nop
c00022a7:	5d                   	pop    %ebp
c00022a8:	c3                   	ret    

c00022a9 <__x86.get_pc_thunk.ax>:
c00022a9:	8b 04 24             	mov    (%esp),%eax
c00022ac:	c3                   	ret    

c00022ad <__x86.get_pc_thunk.di>:
c00022ad:	8b 3c 24             	mov    (%esp),%edi
c00022b0:	c3                   	ret    

c00022b1 <bitmap_set>:
c00022b1:	55                   	push   %ebp
c00022b2:	89 e5                	mov    %esp,%ebp
c00022b4:	83 ec 14             	sub    $0x14,%esp
c00022b7:	e8 ed ff ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c00022bc:	05 44 4d 00 00       	add    $0x4d44,%eax
c00022c1:	8b 45 10             	mov    0x10(%ebp),%eax
c00022c4:	88 45 ec             	mov    %al,-0x14(%ebp)
c00022c7:	8b 45 0c             	mov    0xc(%ebp),%eax
c00022ca:	c1 e8 03             	shr    $0x3,%eax
c00022cd:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00022d0:	8b 45 0c             	mov    0xc(%ebp),%eax
c00022d3:	83 e0 07             	and    $0x7,%eax
c00022d6:	89 45 f8             	mov    %eax,-0x8(%ebp)
c00022d9:	80 7d ec 00          	cmpb   $0x0,-0x14(%ebp)
c00022dd:	74 30                	je     c000230f <bitmap_set+0x5e>
c00022df:	0f b6 55 ec          	movzbl -0x14(%ebp),%edx
c00022e3:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00022e6:	89 c1                	mov    %eax,%ecx
c00022e8:	d3 e2                	shl    %cl,%edx
c00022ea:	89 d0                	mov    %edx,%eax
c00022ec:	88 45 ec             	mov    %al,-0x14(%ebp)
c00022ef:	8b 45 08             	mov    0x8(%ebp),%eax
c00022f2:	8b 50 04             	mov    0x4(%eax),%edx
c00022f5:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00022f8:	01 d0                	add    %edx,%eax
c00022fa:	0f b6 00             	movzbl (%eax),%eax
c00022fd:	8b 55 08             	mov    0x8(%ebp),%edx
c0002300:	8b 4a 04             	mov    0x4(%edx),%ecx
c0002303:	8b 55 fc             	mov    -0x4(%ebp),%edx
c0002306:	01 ca                	add    %ecx,%edx
c0002308:	0a 45 ec             	or     -0x14(%ebp),%al
c000230b:	88 02                	mov    %al,(%edx)
c000230d:	eb 31                	jmp    c0002340 <bitmap_set+0x8f>
c000230f:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002312:	ba 01 00 00 00       	mov    $0x1,%edx
c0002317:	89 c1                	mov    %eax,%ecx
c0002319:	d3 e2                	shl    %cl,%edx
c000231b:	89 d0                	mov    %edx,%eax
c000231d:	f7 d0                	not    %eax
c000231f:	88 45 ec             	mov    %al,-0x14(%ebp)
c0002322:	8b 45 08             	mov    0x8(%ebp),%eax
c0002325:	8b 50 04             	mov    0x4(%eax),%edx
c0002328:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000232b:	01 d0                	add    %edx,%eax
c000232d:	0f b6 00             	movzbl (%eax),%eax
c0002330:	8b 55 08             	mov    0x8(%ebp),%edx
c0002333:	8b 4a 04             	mov    0x4(%edx),%ecx
c0002336:	8b 55 fc             	mov    -0x4(%ebp),%edx
c0002339:	01 ca                	add    %ecx,%edx
c000233b:	22 45 ec             	and    -0x14(%ebp),%al
c000233e:	88 02                	mov    %al,(%edx)
c0002340:	90                   	nop
c0002341:	c9                   	leave  
c0002342:	c3                   	ret    

c0002343 <bitmap_init>:
c0002343:	55                   	push   %ebp
c0002344:	89 e5                	mov    %esp,%ebp
c0002346:	83 ec 10             	sub    $0x10,%esp
c0002349:	e8 5b ff ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c000234e:	05 b2 4c 00 00       	add    $0x4cb2,%eax
c0002353:	8b 45 08             	mov    0x8(%ebp),%eax
c0002356:	8b 40 04             	mov    0x4(%eax),%eax
c0002359:	89 45 f8             	mov    %eax,-0x8(%ebp)
c000235c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c0002363:	eb 10                	jmp    c0002375 <bitmap_init+0x32>
c0002365:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002368:	8d 50 01             	lea    0x1(%eax),%edx
c000236b:	89 55 f8             	mov    %edx,-0x8(%ebp)
c000236e:	c6 00 00             	movb   $0x0,(%eax)
c0002371:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
c0002375:	8b 45 08             	mov    0x8(%ebp),%eax
c0002378:	8b 10                	mov    (%eax),%edx
c000237a:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000237d:	39 c2                	cmp    %eax,%edx
c000237f:	77 e4                	ja     c0002365 <bitmap_init+0x22>
c0002381:	90                   	nop
c0002382:	c9                   	leave  
c0002383:	c3                   	ret    

c0002384 <bitmap_state>:
c0002384:	55                   	push   %ebp
c0002385:	89 e5                	mov    %esp,%ebp
c0002387:	83 ec 10             	sub    $0x10,%esp
c000238a:	e8 1a ff ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c000238f:	05 71 4c 00 00       	add    $0x4c71,%eax
c0002394:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002397:	c1 e8 03             	shr    $0x3,%eax
c000239a:	89 45 fc             	mov    %eax,-0x4(%ebp)
c000239d:	8b 45 0c             	mov    0xc(%ebp),%eax
c00023a0:	83 e0 07             	and    $0x7,%eax
c00023a3:	89 45 f8             	mov    %eax,-0x8(%ebp)
c00023a6:	8b 45 08             	mov    0x8(%ebp),%eax
c00023a9:	8b 50 04             	mov    0x4(%eax),%edx
c00023ac:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00023af:	01 d0                	add    %edx,%eax
c00023b1:	0f b6 00             	movzbl (%eax),%eax
c00023b4:	0f b6 d0             	movzbl %al,%edx
c00023b7:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00023ba:	89 c1                	mov    %eax,%ecx
c00023bc:	d3 fa                	sar    %cl,%edx
c00023be:	89 d0                	mov    %edx,%eax
c00023c0:	83 e0 01             	and    $0x1,%eax
c00023c3:	c9                   	leave  
c00023c4:	c3                   	ret    

c00023c5 <memory_pool_init>:
c00023c5:	55                   	push   %ebp
c00023c6:	89 e5                	mov    %esp,%ebp
c00023c8:	e8 dc fe ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c00023cd:	05 33 4c 00 00       	add    $0x4c33,%eax
c00023d2:	8b 45 10             	mov    0x10(%ebp),%eax
c00023d5:	8d 50 07             	lea    0x7(%eax),%edx
c00023d8:	85 c0                	test   %eax,%eax
c00023da:	0f 48 c2             	cmovs  %edx,%eax
c00023dd:	c1 f8 03             	sar    $0x3,%eax
c00023e0:	89 c2                	mov    %eax,%edx
c00023e2:	8b 45 08             	mov    0x8(%ebp),%eax
c00023e5:	89 10                	mov    %edx,(%eax)
c00023e7:	8b 55 14             	mov    0x14(%ebp),%edx
c00023ea:	8b 45 08             	mov    0x8(%ebp),%eax
c00023ed:	89 50 04             	mov    %edx,0x4(%eax)
c00023f0:	8b 45 10             	mov    0x10(%ebp),%eax
c00023f3:	c1 e0 0c             	shl    $0xc,%eax
c00023f6:	89 c2                	mov    %eax,%edx
c00023f8:	8b 45 08             	mov    0x8(%ebp),%eax
c00023fb:	89 50 08             	mov    %edx,0x8(%eax)
c00023fe:	8b 45 08             	mov    0x8(%ebp),%eax
c0002401:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002404:	89 50 0c             	mov    %edx,0xc(%eax)
c0002407:	8b 45 08             	mov    0x8(%ebp),%eax
c000240a:	50                   	push   %eax
c000240b:	e8 33 ff ff ff       	call   c0002343 <bitmap_init>
c0002410:	83 c4 04             	add    $0x4,%esp
c0002413:	90                   	nop
c0002414:	c9                   	leave  
c0002415:	c3                   	ret    

c0002416 <bitmap_init_all>:
c0002416:	55                   	push   %ebp
c0002417:	89 e5                	mov    %esp,%ebp
c0002419:	53                   	push   %ebx
c000241a:	83 ec 34             	sub    $0x34,%esp
c000241d:	e8 40 f1 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0002422:	81 c3 de 4b 00 00    	add    $0x4bde,%ebx
c0002428:	c7 45 f4 00 00 00 02 	movl   $0x2000000,-0xc(%ebp)
c000242f:	c7 45 f0 00 00 20 00 	movl   $0x200000,-0x10(%ebp)
c0002436:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002439:	2b 45 f0             	sub    -0x10(%ebp),%eax
c000243c:	89 45 ec             	mov    %eax,-0x14(%ebp)
c000243f:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0002442:	c1 e8 0c             	shr    $0xc,%eax
c0002445:	89 45 e8             	mov    %eax,-0x18(%ebp)
c0002448:	8b 45 e8             	mov    -0x18(%ebp),%eax
c000244b:	d1 e8                	shr    %eax
c000244d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
c0002450:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002453:	2b 45 e4             	sub    -0x1c(%ebp),%eax
c0002456:	89 45 e0             	mov    %eax,-0x20(%ebp)
c0002459:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c000245c:	c1 e8 03             	shr    $0x3,%eax
c000245f:	89 45 dc             	mov    %eax,-0x24(%ebp)
c0002462:	8b 45 e0             	mov    -0x20(%ebp),%eax
c0002465:	c1 e8 03             	shr    $0x3,%eax
c0002468:	89 45 d8             	mov    %eax,-0x28(%ebp)
c000246b:	c7 45 d4 00 00 20 00 	movl   $0x200000,-0x2c(%ebp)
c0002472:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c0002475:	c1 e0 0c             	shl    $0xc,%eax
c0002478:	89 c2                	mov    %eax,%edx
c000247a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
c000247d:	01 d0                	add    %edx,%eax
c000247f:	89 45 d0             	mov    %eax,-0x30(%ebp)
c0002482:	c7 45 cc 00 a0 09 c0 	movl   $0xc009a000,-0x34(%ebp)
c0002489:	8b 55 cc             	mov    -0x34(%ebp),%edx
c000248c:	8b 45 dc             	mov    -0x24(%ebp),%eax
c000248f:	01 d0                	add    %edx,%eax
c0002491:	89 45 c8             	mov    %eax,-0x38(%ebp)
c0002494:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c0002497:	ff 75 cc             	pushl  -0x34(%ebp)
c000249a:	50                   	push   %eax
c000249b:	ff 75 d4             	pushl  -0x2c(%ebp)
c000249e:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c00024a4:	50                   	push   %eax
c00024a5:	e8 1b ff ff ff       	call   c00023c5 <memory_pool_init>
c00024aa:	83 c4 10             	add    $0x10,%esp
c00024ad:	8b 45 e0             	mov    -0x20(%ebp),%eax
c00024b0:	ff 75 c8             	pushl  -0x38(%ebp)
c00024b3:	50                   	push   %eax
c00024b4:	ff 75 d0             	pushl  -0x30(%ebp)
c00024b7:	c7 c0 40 75 00 c0    	mov    $0xc0007540,%eax
c00024bd:	50                   	push   %eax
c00024be:	e8 02 ff ff ff       	call   c00023c5 <memory_pool_init>
c00024c3:	83 c4 10             	add    $0x10,%esp
c00024c6:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c00024cc:	c7 40 08 00 00 10 c0 	movl   $0xc0100000,0x8(%eax)
c00024d3:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c00024d9:	8b 55 dc             	mov    -0x24(%ebp),%edx
c00024dc:	89 10                	mov    %edx,(%eax)
c00024de:	8b 55 dc             	mov    -0x24(%ebp),%edx
c00024e1:	8b 45 d8             	mov    -0x28(%ebp),%eax
c00024e4:	01 d0                	add    %edx,%eax
c00024e6:	2d 00 60 f6 3f       	sub    $0x3ff66000,%eax
c00024eb:	89 c2                	mov    %eax,%edx
c00024ed:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c00024f3:	89 50 04             	mov    %edx,0x4(%eax)
c00024f6:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c00024fc:	50                   	push   %eax
c00024fd:	e8 41 fe ff ff       	call   c0002343 <bitmap_init>
c0002502:	83 c4 04             	add    $0x4,%esp
c0002505:	83 ec 0c             	sub    $0xc,%esp
c0002508:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c000250e:	8d 40 10             	lea    0x10(%eax),%eax
c0002511:	50                   	push   %eax
c0002512:	e8 8e 0c 00 00       	call   c00031a5 <init_lock>
c0002517:	83 c4 10             	add    $0x10,%esp
c000251a:	83 ec 0c             	sub    $0xc,%esp
c000251d:	c7 c0 40 75 00 c0    	mov    $0xc0007540,%eax
c0002523:	8d 40 10             	lea    0x10(%eax),%eax
c0002526:	50                   	push   %eax
c0002527:	e8 79 0c 00 00       	call   c00031a5 <init_lock>
c000252c:	83 c4 10             	add    $0x10,%esp
c000252f:	90                   	nop
c0002530:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002533:	c9                   	leave  
c0002534:	c3                   	ret    

c0002535 <bitmap_scan>:
c0002535:	55                   	push   %ebp
c0002536:	89 e5                	mov    %esp,%ebp
c0002538:	83 ec 10             	sub    $0x10,%esp
c000253b:	e8 69 fd ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002540:	05 c0 4a 00 00       	add    $0x4ac0,%eax
c0002545:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c000254c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c0002553:	eb 24                	jmp    c0002579 <bitmap_scan+0x44>
c0002555:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002558:	50                   	push   %eax
c0002559:	ff 75 08             	pushl  0x8(%ebp)
c000255c:	e8 23 fe ff ff       	call   c0002384 <bitmap_state>
c0002561:	83 c4 08             	add    $0x8,%esp
c0002564:	85 c0                	test   %eax,%eax
c0002566:	75 06                	jne    c000256e <bitmap_scan+0x39>
c0002568:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
c000256c:	eb 07                	jmp    c0002575 <bitmap_scan+0x40>
c000256e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c0002575:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c0002579:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000257c:	39 45 0c             	cmp    %eax,0xc(%ebp)
c000257f:	76 13                	jbe    c0002594 <bitmap_scan+0x5f>
c0002581:	8b 45 08             	mov    0x8(%ebp),%eax
c0002584:	8b 00                	mov    (%eax),%eax
c0002586:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx
c000258d:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002590:	39 c2                	cmp    %eax,%edx
c0002592:	77 c1                	ja     c0002555 <bitmap_scan+0x20>
c0002594:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002597:	39 45 0c             	cmp    %eax,0xc(%ebp)
c000259a:	75 08                	jne    c00025a4 <bitmap_scan+0x6f>
c000259c:	8b 45 f8             	mov    -0x8(%ebp),%eax
c000259f:	2b 45 0c             	sub    0xc(%ebp),%eax
c00025a2:	eb 05                	jmp    c00025a9 <bitmap_scan+0x74>
c00025a4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
c00025a9:	c9                   	leave  
c00025aa:	c3                   	ret    

c00025ab <vaddr_get>:
c00025ab:	55                   	push   %ebp
c00025ac:	89 e5                	mov    %esp,%ebp
c00025ae:	53                   	push   %ebx
c00025af:	83 ec 14             	sub    $0x14,%esp
c00025b2:	e8 ab ef ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c00025b7:	81 c3 49 4a 00 00    	add    $0x4a49,%ebx
c00025bd:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%ebp)
c00025c4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
c00025cb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c00025cf:	75 67                	jne    c0002638 <vaddr_get+0x8d>
c00025d1:	ff 75 0c             	pushl  0xc(%ebp)
c00025d4:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c00025da:	50                   	push   %eax
c00025db:	e8 55 ff ff ff       	call   c0002535 <bitmap_scan>
c00025e0:	83 c4 08             	add    $0x8,%esp
c00025e3:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00025e6:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
c00025ea:	75 0a                	jne    c00025f6 <vaddr_get+0x4b>
c00025ec:	b8 00 00 00 00       	mov    $0x0,%eax
c00025f1:	e9 b0 00 00 00       	jmp    c00026a6 <vaddr_get+0xfb>
c00025f6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c00025fd:	eb 1e                	jmp    c000261d <vaddr_get+0x72>
c00025ff:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002602:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002605:	01 d0                	add    %edx,%eax
c0002607:	6a 01                	push   $0x1
c0002609:	50                   	push   %eax
c000260a:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c0002610:	50                   	push   %eax
c0002611:	e8 9b fc ff ff       	call   c00022b1 <bitmap_set>
c0002616:	83 c4 0c             	add    $0xc,%esp
c0002619:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c000261d:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002620:	39 45 0c             	cmp    %eax,0xc(%ebp)
c0002623:	77 da                	ja     c00025ff <vaddr_get+0x54>
c0002625:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c000262b:	8b 40 08             	mov    0x8(%eax),%eax
c000262e:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002631:	c1 e2 0c             	shl    $0xc,%edx
c0002634:	01 d0                	add    %edx,%eax
c0002636:	eb 6e                	jmp    c00026a6 <vaddr_get+0xfb>
c0002638:	e8 13 07 00 00       	call   c0002d50 <running_thread>
c000263d:	89 45 e8             	mov    %eax,-0x18(%ebp)
c0002640:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002643:	83 c0 38             	add    $0x38,%eax
c0002646:	83 ec 08             	sub    $0x8,%esp
c0002649:	ff 75 0c             	pushl  0xc(%ebp)
c000264c:	50                   	push   %eax
c000264d:	e8 e3 fe ff ff       	call   c0002535 <bitmap_scan>
c0002652:	83 c4 10             	add    $0x10,%esp
c0002655:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002658:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
c000265c:	75 07                	jne    c0002665 <vaddr_get+0xba>
c000265e:	b8 00 00 00 00       	mov    $0x0,%eax
c0002663:	eb 41                	jmp    c00026a6 <vaddr_get+0xfb>
c0002665:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c000266c:	eb 1c                	jmp    c000268a <vaddr_get+0xdf>
c000266e:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002671:	8b 55 e8             	mov    -0x18(%ebp),%edx
c0002674:	83 c2 38             	add    $0x38,%edx
c0002677:	83 ec 04             	sub    $0x4,%esp
c000267a:	6a 01                	push   $0x1
c000267c:	50                   	push   %eax
c000267d:	52                   	push   %edx
c000267e:	e8 2e fc ff ff       	call   c00022b1 <bitmap_set>
c0002683:	83 c4 10             	add    $0x10,%esp
c0002686:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c000268a:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000268d:	39 45 0c             	cmp    %eax,0xc(%ebp)
c0002690:	77 dc                	ja     c000266e <vaddr_get+0xc3>
c0002692:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002695:	8b 40 40             	mov    0x40(%eax),%eax
c0002698:	8b 55 f0             	mov    -0x10(%ebp),%edx
c000269b:	c1 e2 0c             	shl    $0xc,%edx
c000269e:	01 d0                	add    %edx,%eax
c00026a0:	89 45 ec             	mov    %eax,-0x14(%ebp)
c00026a3:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00026a6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00026a9:	c9                   	leave  
c00026aa:	c3                   	ret    

c00026ab <pde_ptr>:
c00026ab:	55                   	push   %ebp
c00026ac:	89 e5                	mov    %esp,%ebp
c00026ae:	83 ec 10             	sub    $0x10,%esp
c00026b1:	e8 f3 fb ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c00026b6:	05 4a 49 00 00       	add    $0x494a,%eax
c00026bb:	8b 45 08             	mov    0x8(%ebp),%eax
c00026be:	c1 e8 16             	shr    $0x16,%eax
c00026c1:	05 00 fc ff 3f       	add    $0x3ffffc00,%eax
c00026c6:	c1 e0 02             	shl    $0x2,%eax
c00026c9:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00026cc:	90                   	nop
c00026cd:	c9                   	leave  
c00026ce:	c3                   	ret    

c00026cf <pte_ptr>:
c00026cf:	55                   	push   %ebp
c00026d0:	89 e5                	mov    %esp,%ebp
c00026d2:	83 ec 10             	sub    $0x10,%esp
c00026d5:	e8 cf fb ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c00026da:	05 26 49 00 00       	add    $0x4926,%eax
c00026df:	8b 45 08             	mov    0x8(%ebp),%eax
c00026e2:	c1 e8 0a             	shr    $0xa,%eax
c00026e5:	25 00 f0 3f 00       	and    $0x3ff000,%eax
c00026ea:	89 c2                	mov    %eax,%edx
c00026ec:	8b 45 08             	mov    0x8(%ebp),%eax
c00026ef:	c1 e8 0c             	shr    $0xc,%eax
c00026f2:	25 ff 03 00 00       	and    $0x3ff,%eax
c00026f7:	c1 e0 02             	shl    $0x2,%eax
c00026fa:	01 d0                	add    %edx,%eax
c00026fc:	2d 00 00 40 00       	sub    $0x400000,%eax
c0002701:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002704:	90                   	nop
c0002705:	c9                   	leave  
c0002706:	c3                   	ret    

c0002707 <palloc>:
c0002707:	55                   	push   %ebp
c0002708:	89 e5                	mov    %esp,%ebp
c000270a:	83 ec 10             	sub    $0x10,%esp
c000270d:	e8 97 fb ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002712:	05 ee 48 00 00       	add    $0x48ee,%eax
c0002717:	8b 45 08             	mov    0x8(%ebp),%eax
c000271a:	6a 01                	push   $0x1
c000271c:	50                   	push   %eax
c000271d:	e8 13 fe ff ff       	call   c0002535 <bitmap_scan>
c0002722:	83 c4 08             	add    $0x8,%esp
c0002725:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002728:	8b 55 fc             	mov    -0x4(%ebp),%edx
c000272b:	8b 45 08             	mov    0x8(%ebp),%eax
c000272e:	6a 01                	push   $0x1
c0002730:	52                   	push   %edx
c0002731:	50                   	push   %eax
c0002732:	e8 7a fb ff ff       	call   c00022b1 <bitmap_set>
c0002737:	83 c4 0c             	add    $0xc,%esp
c000273a:	8b 45 08             	mov    0x8(%ebp),%eax
c000273d:	8b 40 0c             	mov    0xc(%eax),%eax
c0002740:	8b 55 fc             	mov    -0x4(%ebp),%edx
c0002743:	c1 e2 0c             	shl    $0xc,%edx
c0002746:	01 d0                	add    %edx,%eax
c0002748:	c9                   	leave  
c0002749:	c3                   	ret    

c000274a <page_table_add>:
c000274a:	55                   	push   %ebp
c000274b:	89 e5                	mov    %esp,%ebp
c000274d:	53                   	push   %ebx
c000274e:	83 ec 14             	sub    $0x14,%esp
c0002751:	e8 0c ee ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0002756:	81 c3 aa 48 00 00    	add    $0x48aa,%ebx
c000275c:	8b 45 08             	mov    0x8(%ebp),%eax
c000275f:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002762:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002765:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002768:	ff 75 f4             	pushl  -0xc(%ebp)
c000276b:	e8 3b ff ff ff       	call   c00026ab <pde_ptr>
c0002770:	83 c4 04             	add    $0x4,%esp
c0002773:	89 45 ec             	mov    %eax,-0x14(%ebp)
c0002776:	ff 75 f4             	pushl  -0xc(%ebp)
c0002779:	e8 51 ff ff ff       	call   c00026cf <pte_ptr>
c000277e:	83 c4 04             	add    $0x4,%esp
c0002781:	89 45 e8             	mov    %eax,-0x18(%ebp)
c0002784:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0002787:	8b 00                	mov    (%eax),%eax
c0002789:	83 e0 01             	and    $0x1,%eax
c000278c:	85 c0                	test   %eax,%eax
c000278e:	75 43                	jne    c00027d3 <page_table_add+0x89>
c0002790:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c0002796:	50                   	push   %eax
c0002797:	e8 6b ff ff ff       	call   c0002707 <palloc>
c000279c:	83 c4 04             	add    $0x4,%esp
c000279f:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c00027a4:	83 c8 07             	or     $0x7,%eax
c00027a7:	89 c2                	mov    %eax,%edx
c00027a9:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00027ac:	89 10                	mov    %edx,(%eax)
c00027ae:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
c00027b2:	74 07                	je     c00027bb <page_table_add+0x71>
c00027b4:	b8 01 00 00 00       	mov    $0x1,%eax
c00027b9:	eb 05                	jmp    c00027c0 <page_table_add+0x76>
c00027bb:	b8 00 00 00 00       	mov    $0x0,%eax
c00027c0:	83 ec 04             	sub    $0x4,%esp
c00027c3:	68 00 10 00 00       	push   $0x1000
c00027c8:	6a 00                	push   $0x0
c00027ca:	50                   	push   %eax
c00027cb:	e8 43 03 00 00       	call   c0002b13 <memset>
c00027d0:	83 c4 10             	add    $0x10,%esp
c00027d3:	8b 45 e8             	mov    -0x18(%ebp),%eax
c00027d6:	8b 00                	mov    (%eax),%eax
c00027d8:	83 e0 01             	and    $0x1,%eax
c00027db:	85 c0                	test   %eax,%eax
c00027dd:	74 26                	je     c0002805 <page_table_add+0xbb>
c00027df:	e8 44 fa ff ff       	call   c0002228 <intclose>
c00027e4:	83 ec 0c             	sub    $0xc,%esp
c00027e7:	6a 0a                	push   $0xa
c00027e9:	e8 82 ed ff ff       	call   c0001570 <put_char>
c00027ee:	83 c4 10             	add    $0x10,%esp
c00027f1:	83 ec 0c             	sub    $0xc,%esp
c00027f4:	8d 83 dc d2 ff ff    	lea    -0x2d24(%ebx),%eax
c00027fa:	50                   	push   %eax
c00027fb:	e8 64 ee ff ff       	call   c0001664 <put_str>
c0002800:	83 c4 10             	add    $0x10,%esp
c0002803:	eb fe                	jmp    c0002803 <page_table_add+0xb9>
c0002805:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002808:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c000280d:	83 c8 07             	or     $0x7,%eax
c0002810:	89 c2                	mov    %eax,%edx
c0002812:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002815:	89 10                	mov    %edx,(%eax)
c0002817:	90                   	nop
c0002818:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000281b:	c9                   	leave  
c000281c:	c3                   	ret    

c000281d <malloc>:
c000281d:	55                   	push   %ebp
c000281e:	89 e5                	mov    %esp,%ebp
c0002820:	53                   	push   %ebx
c0002821:	83 ec 14             	sub    $0x14,%esp
c0002824:	e8 39 ed ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0002829:	81 c3 d7 47 00 00    	add    $0x47d7,%ebx
c000282f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002833:	75 5b                	jne    c0002890 <malloc+0x73>
c0002835:	83 ec 08             	sub    $0x8,%esp
c0002838:	ff 75 0c             	pushl  0xc(%ebp)
c000283b:	6a 00                	push   $0x0
c000283d:	e8 69 fd ff ff       	call   c00025ab <vaddr_get>
c0002842:	83 c4 10             	add    $0x10,%esp
c0002845:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002848:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c000284f:	eb 32                	jmp    c0002883 <malloc+0x66>
c0002851:	83 ec 0c             	sub    $0xc,%esp
c0002854:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c000285a:	50                   	push   %eax
c000285b:	e8 a7 fe ff ff       	call   c0002707 <palloc>
c0002860:	83 c4 10             	add    $0x10,%esp
c0002863:	89 c2                	mov    %eax,%edx
c0002865:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002868:	c1 e0 0c             	shl    $0xc,%eax
c000286b:	89 c1                	mov    %eax,%ecx
c000286d:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002870:	01 c8                	add    %ecx,%eax
c0002872:	83 ec 08             	sub    $0x8,%esp
c0002875:	52                   	push   %edx
c0002876:	50                   	push   %eax
c0002877:	e8 ce fe ff ff       	call   c000274a <page_table_add>
c000287c:	83 c4 10             	add    $0x10,%esp
c000287f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0002883:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002886:	39 45 0c             	cmp    %eax,0xc(%ebp)
c0002889:	77 c6                	ja     c0002851 <malloc+0x34>
c000288b:	8b 45 f0             	mov    -0x10(%ebp),%eax
c000288e:	eb 05                	jmp    c0002895 <malloc+0x78>
c0002890:	b8 00 00 00 00       	mov    $0x0,%eax
c0002895:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002898:	c9                   	leave  
c0002899:	c3                   	ret    

c000289a <get_kernel_pages>:
c000289a:	55                   	push   %ebp
c000289b:	89 e5                	mov    %esp,%ebp
c000289d:	53                   	push   %ebx
c000289e:	83 ec 14             	sub    $0x14,%esp
c00028a1:	e8 bc ec ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c00028a6:	81 c3 5a 47 00 00    	add    $0x475a,%ebx
c00028ac:	83 ec 0c             	sub    $0xc,%esp
c00028af:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c00028b5:	8d 40 10             	lea    0x10(%eax),%eax
c00028b8:	50                   	push   %eax
c00028b9:	e8 1b 09 00 00       	call   c00031d9 <acquire_lock>
c00028be:	83 c4 10             	add    $0x10,%esp
c00028c1:	83 ec 08             	sub    $0x8,%esp
c00028c4:	ff 75 08             	pushl  0x8(%ebp)
c00028c7:	6a 00                	push   $0x0
c00028c9:	e8 4f ff ff ff       	call   c000281d <malloc>
c00028ce:	83 c4 10             	add    $0x10,%esp
c00028d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00028d4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00028d8:	74 17                	je     c00028f1 <get_kernel_pages+0x57>
c00028da:	8b 45 08             	mov    0x8(%ebp),%eax
c00028dd:	c1 e0 0c             	shl    $0xc,%eax
c00028e0:	83 ec 04             	sub    $0x4,%esp
c00028e3:	50                   	push   %eax
c00028e4:	6a 00                	push   $0x0
c00028e6:	ff 75 f4             	pushl  -0xc(%ebp)
c00028e9:	e8 25 02 00 00       	call   c0002b13 <memset>
c00028ee:	83 c4 10             	add    $0x10,%esp
c00028f1:	83 ec 0c             	sub    $0xc,%esp
c00028f4:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c00028fa:	8d 40 10             	lea    0x10(%eax),%eax
c00028fd:	50                   	push   %eax
c00028fe:	e8 47 09 00 00       	call   c000324a <release_lock>
c0002903:	83 c4 10             	add    $0x10,%esp
c0002906:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002909:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000290c:	c9                   	leave  
c000290d:	c3                   	ret    

c000290e <get_user_pages>:
c000290e:	55                   	push   %ebp
c000290f:	89 e5                	mov    %esp,%ebp
c0002911:	53                   	push   %ebx
c0002912:	83 ec 14             	sub    $0x14,%esp
c0002915:	e8 48 ec ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c000291a:	81 c3 e6 46 00 00    	add    $0x46e6,%ebx
c0002920:	83 ec 0c             	sub    $0xc,%esp
c0002923:	c7 c0 40 75 00 c0    	mov    $0xc0007540,%eax
c0002929:	8d 40 10             	lea    0x10(%eax),%eax
c000292c:	50                   	push   %eax
c000292d:	e8 a7 08 00 00       	call   c00031d9 <acquire_lock>
c0002932:	83 c4 10             	add    $0x10,%esp
c0002935:	83 ec 08             	sub    $0x8,%esp
c0002938:	ff 75 08             	pushl  0x8(%ebp)
c000293b:	6a 01                	push   $0x1
c000293d:	e8 db fe ff ff       	call   c000281d <malloc>
c0002942:	83 c4 10             	add    $0x10,%esp
c0002945:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002948:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000294c:	74 17                	je     c0002965 <get_user_pages+0x57>
c000294e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002951:	c1 e0 0c             	shl    $0xc,%eax
c0002954:	83 ec 04             	sub    $0x4,%esp
c0002957:	50                   	push   %eax
c0002958:	6a 00                	push   $0x0
c000295a:	ff 75 f4             	pushl  -0xc(%ebp)
c000295d:	e8 b1 01 00 00       	call   c0002b13 <memset>
c0002962:	83 c4 10             	add    $0x10,%esp
c0002965:	83 ec 0c             	sub    $0xc,%esp
c0002968:	c7 c0 40 75 00 c0    	mov    $0xc0007540,%eax
c000296e:	8d 40 10             	lea    0x10(%eax),%eax
c0002971:	50                   	push   %eax
c0002972:	e8 d3 08 00 00       	call   c000324a <release_lock>
c0002977:	83 c4 10             	add    $0x10,%esp
c000297a:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000297d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002980:	c9                   	leave  
c0002981:	c3                   	ret    

c0002982 <get_a_page>:
c0002982:	55                   	push   %ebp
c0002983:	89 e5                	mov    %esp,%ebp
c0002985:	53                   	push   %ebx
c0002986:	83 ec 14             	sub    $0x14,%esp
c0002989:	e8 d4 eb ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c000298e:	81 c3 72 46 00 00    	add    $0x4672,%ebx
c0002994:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002998:	75 08                	jne    c00029a2 <get_a_page+0x20>
c000299a:	c7 c0 80 75 00 c0    	mov    $0xc0007580,%eax
c00029a0:	eb 06                	jmp    c00029a8 <get_a_page+0x26>
c00029a2:	c7 c0 40 75 00 c0    	mov    $0xc0007540,%eax
c00029a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00029ab:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00029ae:	83 c0 10             	add    $0x10,%eax
c00029b1:	83 ec 0c             	sub    $0xc,%esp
c00029b4:	50                   	push   %eax
c00029b5:	e8 1f 08 00 00       	call   c00031d9 <acquire_lock>
c00029ba:	83 c4 10             	add    $0x10,%esp
c00029bd:	e8 8e 03 00 00       	call   c0002d50 <running_thread>
c00029c2:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00029c5:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%ebp)
c00029cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00029cf:	8b 40 34             	mov    0x34(%eax),%eax
c00029d2:	85 c0                	test   %eax,%eax
c00029d4:	74 5f                	je     c0002a35 <get_a_page+0xb3>
c00029d6:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
c00029da:	75 59                	jne    c0002a35 <get_a_page+0xb3>
c00029dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00029df:	8b 40 40             	mov    0x40(%eax),%eax
c00029e2:	8b 55 0c             	mov    0xc(%ebp),%edx
c00029e5:	29 c2                	sub    %eax,%edx
c00029e7:	89 d0                	mov    %edx,%eax
c00029e9:	c1 e8 0c             	shr    $0xc,%eax
c00029ec:	89 45 ec             	mov    %eax,-0x14(%ebp)
c00029ef:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
c00029f3:	7f 26                	jg     c0002a1b <get_a_page+0x99>
c00029f5:	e8 2e f8 ff ff       	call   c0002228 <intclose>
c00029fa:	83 ec 0c             	sub    $0xc,%esp
c00029fd:	6a 0a                	push   $0xa
c00029ff:	e8 6c eb ff ff       	call   c0001570 <put_char>
c0002a04:	83 c4 10             	add    $0x10,%esp
c0002a07:	83 ec 0c             	sub    $0xc,%esp
c0002a0a:	8d 83 ea d2 ff ff    	lea    -0x2d16(%ebx),%eax
c0002a10:	50                   	push   %eax
c0002a11:	e8 4e ec ff ff       	call   c0001664 <put_str>
c0002a16:	83 c4 10             	add    $0x10,%esp
c0002a19:	eb fe                	jmp    c0002a19 <get_a_page+0x97>
c0002a1b:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0002a1e:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002a21:	83 c2 38             	add    $0x38,%edx
c0002a24:	83 ec 04             	sub    $0x4,%esp
c0002a27:	6a 01                	push   $0x1
c0002a29:	50                   	push   %eax
c0002a2a:	52                   	push   %edx
c0002a2b:	e8 81 f8 ff ff       	call   c00022b1 <bitmap_set>
c0002a30:	83 c4 10             	add    $0x10,%esp
c0002a33:	eb 5e                	jmp    c0002a93 <get_a_page+0x111>
c0002a35:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002a38:	8b 40 34             	mov    0x34(%eax),%eax
c0002a3b:	85 c0                	test   %eax,%eax
c0002a3d:	75 1e                	jne    c0002a5d <get_a_page+0xdb>
c0002a3f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002a43:	75 18                	jne    c0002a5d <get_a_page+0xdb>
c0002a45:	c7 c0 20 75 00 c0    	mov    $0xc0007520,%eax
c0002a4b:	8b 40 08             	mov    0x8(%eax),%eax
c0002a4e:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002a51:	29 c2                	sub    %eax,%edx
c0002a53:	89 d0                	mov    %edx,%eax
c0002a55:	c1 e8 0c             	shr    $0xc,%eax
c0002a58:	89 45 ec             	mov    %eax,-0x14(%ebp)
c0002a5b:	eb 36                	jmp    c0002a93 <get_a_page+0x111>
c0002a5d:	8d 93 f8 d2 ff ff    	lea    -0x2d08(%ebx),%edx
c0002a63:	8d 83 1a d3 ff ff    	lea    -0x2ce6(%ebx),%eax
c0002a69:	39 c2                	cmp    %eax,%edx
c0002a6b:	74 26                	je     c0002a93 <get_a_page+0x111>
c0002a6d:	e8 b6 f7 ff ff       	call   c0002228 <intclose>
c0002a72:	83 ec 0c             	sub    $0xc,%esp
c0002a75:	6a 0a                	push   $0xa
c0002a77:	e8 f4 ea ff ff       	call   c0001570 <put_char>
c0002a7c:	83 c4 10             	add    $0x10,%esp
c0002a7f:	83 ec 0c             	sub    $0xc,%esp
c0002a82:	8d 83 1c d3 ff ff    	lea    -0x2ce4(%ebx),%eax
c0002a88:	50                   	push   %eax
c0002a89:	e8 d6 eb ff ff       	call   c0001664 <put_str>
c0002a8e:	83 c4 10             	add    $0x10,%esp
c0002a91:	eb fe                	jmp    c0002a91 <get_a_page+0x10f>
c0002a93:	83 ec 0c             	sub    $0xc,%esp
c0002a96:	ff 75 f4             	pushl  -0xc(%ebp)
c0002a99:	e8 69 fc ff ff       	call   c0002707 <palloc>
c0002a9e:	83 c4 10             	add    $0x10,%esp
c0002aa1:	89 45 e8             	mov    %eax,-0x18(%ebp)
c0002aa4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
c0002aa8:	75 07                	jne    c0002ab1 <get_a_page+0x12f>
c0002aaa:	b8 00 00 00 00       	mov    $0x0,%eax
c0002aaf:	eb 27                	jmp    c0002ad8 <get_a_page+0x156>
c0002ab1:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002ab4:	83 ec 08             	sub    $0x8,%esp
c0002ab7:	ff 75 e8             	pushl  -0x18(%ebp)
c0002aba:	50                   	push   %eax
c0002abb:	e8 8a fc ff ff       	call   c000274a <page_table_add>
c0002ac0:	83 c4 10             	add    $0x10,%esp
c0002ac3:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002ac6:	83 c0 10             	add    $0x10,%eax
c0002ac9:	83 ec 0c             	sub    $0xc,%esp
c0002acc:	50                   	push   %eax
c0002acd:	e8 78 07 00 00       	call   c000324a <release_lock>
c0002ad2:	83 c4 10             	add    $0x10,%esp
c0002ad5:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002ad8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002adb:	c9                   	leave  
c0002adc:	c3                   	ret    

c0002add <addr_v2p>:
c0002add:	55                   	push   %ebp
c0002ade:	89 e5                	mov    %esp,%ebp
c0002ae0:	83 ec 10             	sub    $0x10,%esp
c0002ae3:	e8 c1 f7 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002ae8:	05 18 45 00 00       	add    $0x4518,%eax
c0002aed:	ff 75 08             	pushl  0x8(%ebp)
c0002af0:	e8 da fb ff ff       	call   c00026cf <pte_ptr>
c0002af5:	83 c4 04             	add    $0x4,%esp
c0002af8:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002afb:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002afe:	8b 00                	mov    (%eax),%eax
c0002b00:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002b05:	89 c2                	mov    %eax,%edx
c0002b07:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b0a:	25 ff 0f 00 00       	and    $0xfff,%eax
c0002b0f:	09 d0                	or     %edx,%eax
c0002b11:	c9                   	leave  
c0002b12:	c3                   	ret    

c0002b13 <memset>:
c0002b13:	55                   	push   %ebp
c0002b14:	89 e5                	mov    %esp,%ebp
c0002b16:	53                   	push   %ebx
c0002b17:	83 ec 24             	sub    $0x24,%esp
c0002b1a:	e8 43 ea ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0002b1f:	81 c3 e1 44 00 00    	add    $0x44e1,%ebx
c0002b25:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002b28:	88 45 e4             	mov    %al,-0x1c(%ebp)
c0002b2b:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b2e:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002b31:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002b35:	75 35                	jne    c0002b6c <memset+0x59>
c0002b37:	e8 ec f6 ff ff       	call   c0002228 <intclose>
c0002b3c:	83 ec 0c             	sub    $0xc,%esp
c0002b3f:	6a 0a                	push   $0xa
c0002b41:	e8 2a ea ff ff       	call   c0001570 <put_char>
c0002b46:	83 c4 10             	add    $0x10,%esp
c0002b49:	83 ec 0c             	sub    $0xc,%esp
c0002b4c:	8d 83 44 d3 ff ff    	lea    -0x2cbc(%ebx),%eax
c0002b52:	50                   	push   %eax
c0002b53:	e8 0c eb ff ff       	call   c0001664 <put_str>
c0002b58:	83 c4 10             	add    $0x10,%esp
c0002b5b:	eb fe                	jmp    c0002b5b <memset+0x48>
c0002b5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002b60:	8d 50 01             	lea    0x1(%eax),%edx
c0002b63:	89 55 f4             	mov    %edx,-0xc(%ebp)
c0002b66:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx
c0002b6a:	88 10                	mov    %dl,(%eax)
c0002b6c:	8b 45 10             	mov    0x10(%ebp),%eax
c0002b6f:	8d 50 ff             	lea    -0x1(%eax),%edx
c0002b72:	89 55 10             	mov    %edx,0x10(%ebp)
c0002b75:	85 c0                	test   %eax,%eax
c0002b77:	75 e4                	jne    c0002b5d <memset+0x4a>
c0002b79:	90                   	nop
c0002b7a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002b7d:	c9                   	leave  
c0002b7e:	c3                   	ret    

c0002b7f <memcpy>:
c0002b7f:	55                   	push   %ebp
c0002b80:	89 e5                	mov    %esp,%ebp
c0002b82:	53                   	push   %ebx
c0002b83:	83 ec 14             	sub    $0x14,%esp
c0002b86:	e8 d7 e9 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0002b8b:	81 c3 75 44 00 00    	add    $0x4475,%ebx
c0002b91:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b94:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002b97:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002b9a:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002b9d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002ba1:	74 06                	je     c0002ba9 <memcpy+0x2a>
c0002ba3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
c0002ba7:	75 26                	jne    c0002bcf <memcpy+0x50>
c0002ba9:	e8 7a f6 ff ff       	call   c0002228 <intclose>
c0002bae:	83 ec 0c             	sub    $0xc,%esp
c0002bb1:	6a 0a                	push   $0xa
c0002bb3:	e8 b8 e9 ff ff       	call   c0001570 <put_char>
c0002bb8:	83 c4 10             	add    $0x10,%esp
c0002bbb:	83 ec 0c             	sub    $0xc,%esp
c0002bbe:	8d 83 4b d3 ff ff    	lea    -0x2cb5(%ebx),%eax
c0002bc4:	50                   	push   %eax
c0002bc5:	e8 9a ea ff ff       	call   c0001664 <put_str>
c0002bca:	83 c4 10             	add    $0x10,%esp
c0002bcd:	eb fe                	jmp    c0002bcd <memcpy+0x4e>
c0002bcf:	eb 17                	jmp    c0002be8 <memcpy+0x69>
c0002bd1:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002bd4:	8d 42 01             	lea    0x1(%edx),%eax
c0002bd7:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002bda:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002bdd:	8d 48 01             	lea    0x1(%eax),%ecx
c0002be0:	89 4d f4             	mov    %ecx,-0xc(%ebp)
c0002be3:	0f b6 12             	movzbl (%edx),%edx
c0002be6:	88 10                	mov    %dl,(%eax)
c0002be8:	8b 45 10             	mov    0x10(%ebp),%eax
c0002beb:	8d 50 ff             	lea    -0x1(%eax),%edx
c0002bee:	89 55 10             	mov    %edx,0x10(%ebp)
c0002bf1:	85 c0                	test   %eax,%eax
c0002bf3:	75 dc                	jne    c0002bd1 <memcpy+0x52>
c0002bf5:	90                   	nop
c0002bf6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002bf9:	c9                   	leave  
c0002bfa:	c3                   	ret    

c0002bfb <memcmp>:
c0002bfb:	55                   	push   %ebp
c0002bfc:	89 e5                	mov    %esp,%ebp
c0002bfe:	53                   	push   %ebx
c0002bff:	83 ec 14             	sub    $0x14,%esp
c0002c02:	e8 5b e9 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0002c07:	81 c3 f9 43 00 00    	add    $0x43f9,%ebx
c0002c0d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002c11:	74 06                	je     c0002c19 <memcmp+0x1e>
c0002c13:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
c0002c17:	75 26                	jne    c0002c3f <memcmp+0x44>
c0002c19:	e8 0a f6 ff ff       	call   c0002228 <intclose>
c0002c1e:	83 ec 0c             	sub    $0xc,%esp
c0002c21:	6a 0a                	push   $0xa
c0002c23:	e8 48 e9 ff ff       	call   c0001570 <put_char>
c0002c28:	83 c4 10             	add    $0x10,%esp
c0002c2b:	83 ec 0c             	sub    $0xc,%esp
c0002c2e:	8d 83 5c d3 ff ff    	lea    -0x2ca4(%ebx),%eax
c0002c34:	50                   	push   %eax
c0002c35:	e8 2a ea ff ff       	call   c0001664 <put_str>
c0002c3a:	83 c4 10             	add    $0x10,%esp
c0002c3d:	eb fe                	jmp    c0002c3d <memcmp+0x42>
c0002c3f:	8b 45 08             	mov    0x8(%ebp),%eax
c0002c42:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002c45:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002c48:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002c4b:	eb 36                	jmp    c0002c83 <memcmp+0x88>
c0002c4d:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002c50:	0f b6 10             	movzbl (%eax),%edx
c0002c53:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002c56:	0f b6 00             	movzbl (%eax),%eax
c0002c59:	38 c2                	cmp    %al,%dl
c0002c5b:	74 1e                	je     c0002c7b <memcmp+0x80>
c0002c5d:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002c60:	0f b6 10             	movzbl (%eax),%edx
c0002c63:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002c66:	0f b6 00             	movzbl (%eax),%eax
c0002c69:	38 c2                	cmp    %al,%dl
c0002c6b:	7e 07                	jle    c0002c74 <memcmp+0x79>
c0002c6d:	b8 01 00 00 00       	mov    $0x1,%eax
c0002c72:	eb 21                	jmp    c0002c95 <memcmp+0x9a>
c0002c74:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
c0002c79:	eb 1a                	jmp    c0002c95 <memcmp+0x9a>
c0002c7b:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0002c7f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
c0002c83:	8b 45 10             	mov    0x10(%ebp),%eax
c0002c86:	8d 50 ff             	lea    -0x1(%eax),%edx
c0002c89:	89 55 10             	mov    %edx,0x10(%ebp)
c0002c8c:	85 c0                	test   %eax,%eax
c0002c8e:	75 bd                	jne    c0002c4d <memcmp+0x52>
c0002c90:	b8 00 00 00 00       	mov    $0x0,%eax
c0002c95:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002c98:	c9                   	leave  
c0002c99:	c3                   	ret    

c0002c9a <strcpy>:
c0002c9a:	55                   	push   %ebp
c0002c9b:	89 e5                	mov    %esp,%ebp
c0002c9d:	e8 07 f6 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002ca2:	05 5e 43 00 00       	add    $0x435e,%eax
c0002ca7:	eb 17                	jmp    c0002cc0 <strcpy+0x26>
c0002ca9:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002cac:	8d 42 01             	lea    0x1(%edx),%eax
c0002caf:	89 45 0c             	mov    %eax,0xc(%ebp)
c0002cb2:	8b 45 08             	mov    0x8(%ebp),%eax
c0002cb5:	8d 48 01             	lea    0x1(%eax),%ecx
c0002cb8:	89 4d 08             	mov    %ecx,0x8(%ebp)
c0002cbb:	0f b6 12             	movzbl (%edx),%edx
c0002cbe:	88 10                	mov    %dl,(%eax)
c0002cc0:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002cc3:	0f b6 00             	movzbl (%eax),%eax
c0002cc6:	84 c0                	test   %al,%al
c0002cc8:	75 df                	jne    c0002ca9 <strcpy+0xf>
c0002cca:	90                   	nop
c0002ccb:	5d                   	pop    %ebp
c0002ccc:	c3                   	ret    

c0002ccd <strlen>:
c0002ccd:	55                   	push   %ebp
c0002cce:	89 e5                	mov    %esp,%ebp
c0002cd0:	83 ec 10             	sub    $0x10,%esp
c0002cd3:	e8 d1 f5 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002cd8:	05 28 43 00 00       	add    $0x4328,%eax
c0002cdd:	8b 45 08             	mov    0x8(%ebp),%eax
c0002ce0:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002ce3:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c0002cea:	eb 04                	jmp    c0002cf0 <strlen+0x23>
c0002cec:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c0002cf0:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002cf3:	8d 50 01             	lea    0x1(%eax),%edx
c0002cf6:	89 55 fc             	mov    %edx,-0x4(%ebp)
c0002cf9:	0f b6 00             	movzbl (%eax),%eax
c0002cfc:	84 c0                	test   %al,%al
c0002cfe:	75 ec                	jne    c0002cec <strlen+0x1f>
c0002d00:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002d03:	c9                   	leave  
c0002d04:	c3                   	ret    

c0002d05 <string_equal>:
c0002d05:	55                   	push   %ebp
c0002d06:	89 e5                	mov    %esp,%ebp
c0002d08:	e8 9c f5 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002d0d:	05 f3 42 00 00       	add    $0x42f3,%eax
c0002d12:	eb 19                	jmp    c0002d2d <string_equal+0x28>
c0002d14:	8b 45 08             	mov    0x8(%ebp),%eax
c0002d17:	0f b6 00             	movzbl (%eax),%eax
c0002d1a:	84 c0                	test   %al,%al
c0002d1c:	75 07                	jne    c0002d25 <string_equal+0x20>
c0002d1e:	b8 01 00 00 00       	mov    $0x1,%eax
c0002d23:	eb 1d                	jmp    c0002d42 <string_equal+0x3d>
c0002d25:	83 45 08 01          	addl   $0x1,0x8(%ebp)
c0002d29:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
c0002d2d:	8b 45 08             	mov    0x8(%ebp),%eax
c0002d30:	0f b6 10             	movzbl (%eax),%edx
c0002d33:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002d36:	0f b6 00             	movzbl (%eax),%eax
c0002d39:	38 c2                	cmp    %al,%dl
c0002d3b:	74 d7                	je     c0002d14 <string_equal+0xf>
c0002d3d:	b8 00 00 00 00       	mov    $0x0,%eax
c0002d42:	5d                   	pop    %ebp
c0002d43:	c3                   	ret    
c0002d44:	66 90                	xchg   %ax,%ax
c0002d46:	66 90                	xchg   %ax,%ax
c0002d48:	66 90                	xchg   %ax,%ax
c0002d4a:	66 90                	xchg   %ax,%ax
c0002d4c:	66 90                	xchg   %ax,%ax
c0002d4e:	66 90                	xchg   %ax,%ax

c0002d50 <running_thread>:
c0002d50:	55                   	push   %ebp
c0002d51:	89 e5                	mov    %esp,%ebp
c0002d53:	83 ec 10             	sub    $0x10,%esp
c0002d56:	e8 4e f5 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002d5b:	05 a5 42 00 00       	add    $0x42a5,%eax
c0002d60:	89 e0                	mov    %esp,%eax
c0002d62:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002d65:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002d68:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002d6d:	c9                   	leave  
c0002d6e:	c3                   	ret    

c0002d6f <kernel_thread>:
c0002d6f:	55                   	push   %ebp
c0002d70:	89 e5                	mov    %esp,%ebp
c0002d72:	53                   	push   %ebx
c0002d73:	83 ec 04             	sub    $0x4,%esp
c0002d76:	e8 2e f5 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0002d7b:	05 85 42 00 00       	add    $0x4285,%eax
c0002d80:	89 c3                	mov    %eax,%ebx
c0002d82:	e8 75 f4 ff ff       	call   c00021fc <intopen>
c0002d87:	83 ec 0c             	sub    $0xc,%esp
c0002d8a:	ff 75 0c             	pushl  0xc(%ebp)
c0002d8d:	8b 45 08             	mov    0x8(%ebp),%eax
c0002d90:	ff d0                	call   *%eax
c0002d92:	83 c4 10             	add    $0x10,%esp
c0002d95:	90                   	nop
c0002d96:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002d99:	c9                   	leave  
c0002d9a:	c3                   	ret    

c0002d9b <thread_create>:
c0002d9b:	55                   	push   %ebp
c0002d9c:	89 e5                	mov    %esp,%ebp
c0002d9e:	83 ec 10             	sub    $0x10,%esp
c0002da1:	e8 4b 05 00 00       	call   c00032f1 <__x86.get_pc_thunk.dx>
c0002da6:	81 c2 5a 42 00 00    	add    $0x425a,%edx
c0002dac:	8b 45 08             	mov    0x8(%ebp),%eax
c0002daf:	8b 00                	mov    (%eax),%eax
c0002db1:	8d 88 d0 fe ff ff    	lea    -0x130(%eax),%ecx
c0002db7:	8b 45 08             	mov    0x8(%ebp),%eax
c0002dba:	89 08                	mov    %ecx,(%eax)
c0002dbc:	8b 45 08             	mov    0x8(%ebp),%eax
c0002dbf:	8b 00                	mov    (%eax),%eax
c0002dc1:	8d 48 80             	lea    -0x80(%eax),%ecx
c0002dc4:	8b 45 08             	mov    0x8(%ebp),%eax
c0002dc7:	89 08                	mov    %ecx,(%eax)
c0002dc9:	8b 45 08             	mov    0x8(%ebp),%eax
c0002dcc:	8b 00                	mov    (%eax),%eax
c0002dce:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002dd1:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002dd4:	8d 92 6f bd ff ff    	lea    -0x4291(%edx),%edx
c0002dda:	89 50 10             	mov    %edx,0x10(%eax)
c0002ddd:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002de0:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002de3:	89 50 18             	mov    %edx,0x18(%eax)
c0002de6:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002de9:	8b 55 10             	mov    0x10(%ebp),%edx
c0002dec:	89 50 1c             	mov    %edx,0x1c(%eax)
c0002def:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002df2:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
c0002df9:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002dfc:	8b 50 0c             	mov    0xc(%eax),%edx
c0002dff:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e02:	89 50 08             	mov    %edx,0x8(%eax)
c0002e05:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e08:	8b 50 08             	mov    0x8(%eax),%edx
c0002e0b:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e0e:	89 50 04             	mov    %edx,0x4(%eax)
c0002e11:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e14:	8b 50 04             	mov    0x4(%eax),%edx
c0002e17:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e1a:	89 10                	mov    %edx,(%eax)
c0002e1c:	90                   	nop
c0002e1d:	c9                   	leave  
c0002e1e:	c3                   	ret    

c0002e1f <init_thread>:
c0002e1f:	55                   	push   %ebp
c0002e20:	89 e5                	mov    %esp,%ebp
c0002e22:	53                   	push   %ebx
c0002e23:	83 ec 04             	sub    $0x4,%esp
c0002e26:	e8 37 e7 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0002e2b:	81 c3 d5 41 00 00    	add    $0x41d5,%ebx
c0002e31:	83 ec 04             	sub    $0x4,%esp
c0002e34:	68 00 10 00 00       	push   $0x1000
c0002e39:	6a 00                	push   $0x0
c0002e3b:	ff 75 08             	pushl  0x8(%ebp)
c0002e3e:	e8 d0 fc ff ff       	call   c0002b13 <memset>
c0002e43:	83 c4 10             	add    $0x10,%esp
c0002e46:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e49:	83 c0 09             	add    $0x9,%eax
c0002e4c:	83 ec 08             	sub    $0x8,%esp
c0002e4f:	ff 75 0c             	pushl  0xc(%ebp)
c0002e52:	50                   	push   %eax
c0002e53:	e8 42 fe ff ff       	call   c0002c9a <strcpy>
c0002e58:	83 c4 10             	add    $0x10,%esp
c0002e5b:	c7 c0 c4 75 00 c0    	mov    $0xc00075c4,%eax
c0002e61:	8b 00                	mov    (%eax),%eax
c0002e63:	39 45 08             	cmp    %eax,0x8(%ebp)
c0002e66:	75 0c                	jne    c0002e74 <init_thread+0x55>
c0002e68:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e6b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
c0002e72:	eb 0a                	jmp    c0002e7e <init_thread+0x5f>
c0002e74:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e77:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
c0002e7e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e81:	05 00 10 00 00       	add    $0x1000,%eax
c0002e86:	89 c2                	mov    %eax,%edx
c0002e88:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e8b:	89 10                	mov    %edx,(%eax)
c0002e8d:	8b 45 10             	mov    0x10(%ebp),%eax
c0002e90:	89 c2                	mov    %eax,%edx
c0002e92:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e95:	88 50 08             	mov    %dl,0x8(%eax)
c0002e98:	8b 55 10             	mov    0x10(%ebp),%edx
c0002e9b:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e9e:	89 50 1c             	mov    %edx,0x1c(%eax)
c0002ea1:	8b 45 08             	mov    0x8(%ebp),%eax
c0002ea4:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)
c0002eab:	8b 45 08             	mov    0x8(%ebp),%eax
c0002eae:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
c0002eb5:	8b 45 08             	mov    0x8(%ebp),%eax
c0002eb8:	c7 40 44 06 07 92 19 	movl   $0x19920706,0x44(%eax)
c0002ebf:	90                   	nop
c0002ec0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002ec3:	c9                   	leave  
c0002ec4:	c3                   	ret    

c0002ec5 <thread_start>:
c0002ec5:	55                   	push   %ebp
c0002ec6:	89 e5                	mov    %esp,%ebp
c0002ec8:	53                   	push   %ebx
c0002ec9:	83 ec 14             	sub    $0x14,%esp
c0002ecc:	e8 91 e6 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0002ed1:	81 c3 2f 41 00 00    	add    $0x412f,%ebx
c0002ed7:	83 ec 0c             	sub    $0xc,%esp
c0002eda:	6a 01                	push   $0x1
c0002edc:	e8 b9 f9 ff ff       	call   c000289a <get_kernel_pages>
c0002ee1:	83 c4 10             	add    $0x10,%esp
c0002ee4:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002ee7:	83 ec 04             	sub    $0x4,%esp
c0002eea:	ff 75 14             	pushl  0x14(%ebp)
c0002eed:	ff 75 08             	pushl  0x8(%ebp)
c0002ef0:	ff 75 f4             	pushl  -0xc(%ebp)
c0002ef3:	e8 27 ff ff ff       	call   c0002e1f <init_thread>
c0002ef8:	83 c4 10             	add    $0x10,%esp
c0002efb:	83 ec 04             	sub    $0x4,%esp
c0002efe:	ff 75 10             	pushl  0x10(%ebp)
c0002f01:	ff 75 0c             	pushl  0xc(%ebp)
c0002f04:	ff 75 f4             	pushl  -0xc(%ebp)
c0002f07:	e8 8f fe ff ff       	call   c0002d9b <thread_create>
c0002f0c:	83 c4 10             	add    $0x10,%esp
c0002f0f:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002f12:	83 c0 24             	add    $0x24,%eax
c0002f15:	83 ec 08             	sub    $0x8,%esp
c0002f18:	50                   	push   %eax
c0002f19:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c0002f1f:	50                   	push   %eax
c0002f20:	e8 78 04 00 00       	call   c000339d <_list_add_back>
c0002f25:	83 c4 10             	add    $0x10,%esp
c0002f28:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002f2b:	83 c0 2c             	add    $0x2c,%eax
c0002f2e:	83 ec 08             	sub    $0x8,%esp
c0002f31:	50                   	push   %eax
c0002f32:	c7 c0 b4 75 00 c0    	mov    $0xc00075b4,%eax
c0002f38:	50                   	push   %eax
c0002f39:	e8 5f 04 00 00       	call   c000339d <_list_add_back>
c0002f3e:	83 c4 10             	add    $0x10,%esp
c0002f41:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002f44:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002f47:	c9                   	leave  
c0002f48:	c3                   	ret    

c0002f49 <make_main_thread>:
c0002f49:	55                   	push   %ebp
c0002f4a:	89 e5                	mov    %esp,%ebp
c0002f4c:	53                   	push   %ebx
c0002f4d:	83 ec 04             	sub    $0x4,%esp
c0002f50:	e8 0d e6 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0002f55:	81 c3 ab 40 00 00    	add    $0x40ab,%ebx
c0002f5b:	e8 f0 fd ff ff       	call   c0002d50 <running_thread>
c0002f60:	89 c2                	mov    %eax,%edx
c0002f62:	c7 c0 c4 75 00 c0    	mov    $0xc00075c4,%eax
c0002f68:	89 10                	mov    %edx,(%eax)
c0002f6a:	c7 c0 c4 75 00 c0    	mov    $0xc00075c4,%eax
c0002f70:	8b 00                	mov    (%eax),%eax
c0002f72:	83 ec 04             	sub    $0x4,%esp
c0002f75:	6a 3c                	push   $0x3c
c0002f77:	8d 93 6c d3 ff ff    	lea    -0x2c94(%ebx),%edx
c0002f7d:	52                   	push   %edx
c0002f7e:	50                   	push   %eax
c0002f7f:	e8 9b fe ff ff       	call   c0002e1f <init_thread>
c0002f84:	83 c4 10             	add    $0x10,%esp
c0002f87:	c7 c0 c4 75 00 c0    	mov    $0xc00075c4,%eax
c0002f8d:	8b 00                	mov    (%eax),%eax
c0002f8f:	83 c0 2c             	add    $0x2c,%eax
c0002f92:	83 ec 08             	sub    $0x8,%esp
c0002f95:	50                   	push   %eax
c0002f96:	c7 c0 b4 75 00 c0    	mov    $0xc00075b4,%eax
c0002f9c:	50                   	push   %eax
c0002f9d:	e8 fb 03 00 00       	call   c000339d <_list_add_back>
c0002fa2:	83 c4 10             	add    $0x10,%esp
c0002fa5:	90                   	nop
c0002fa6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002fa9:	c9                   	leave  
c0002faa:	c3                   	ret    

c0002fab <set_prio>:
c0002fab:	55                   	push   %ebp
c0002fac:	89 e5                	mov    %esp,%ebp
c0002fae:	53                   	push   %ebx
c0002faf:	83 ec 24             	sub    $0x24,%esp
c0002fb2:	e8 ab e5 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0002fb7:	81 c3 49 40 00 00    	add    $0x4049,%ebx
c0002fbd:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002fc0:	88 45 e4             	mov    %al,-0x1c(%ebp)
c0002fc3:	83 ec 0c             	sub    $0xc,%esp
c0002fc6:	c7 c0 b4 75 00 c0    	mov    $0xc00075b4,%eax
c0002fcc:	50                   	push   %eax
c0002fcd:	e8 8c 04 00 00       	call   c000345e <_list_front>
c0002fd2:	83 c4 10             	add    $0x10,%esp
c0002fd5:	83 e8 2c             	sub    $0x2c,%eax
c0002fd8:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002fdb:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002fde:	83 c0 09             	add    $0x9,%eax
c0002fe1:	83 ec 08             	sub    $0x8,%esp
c0002fe4:	50                   	push   %eax
c0002fe5:	ff 75 08             	pushl  0x8(%ebp)
c0002fe8:	e8 18 fd ff ff       	call   c0002d05 <string_equal>
c0002fed:	83 c4 10             	add    $0x10,%esp
c0002ff0:	85 c0                	test   %eax,%eax
c0002ff2:	74 0a                	je     c0002ffe <set_prio+0x53>
c0002ff4:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002ff7:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx
c0002ffb:	88 50 08             	mov    %dl,0x8(%eax)
c0002ffe:	90                   	nop
c0002fff:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003002:	c9                   	leave  
c0003003:	c3                   	ret    

c0003004 <sched>:
c0003004:	55                   	push   %ebp
c0003005:	89 e5                	mov    %esp,%ebp
c0003007:	53                   	push   %ebx
c0003008:	83 ec 14             	sub    $0x14,%esp
c000300b:	e8 52 e5 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003010:	81 c3 f0 3f 00 00    	add    $0x3ff0,%ebx
c0003016:	e8 35 fd ff ff       	call   c0002d50 <running_thread>
c000301b:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000301e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003021:	8b 40 04             	mov    0x4(%eax),%eax
c0003024:	85 c0                	test   %eax,%eax
c0003026:	75 33                	jne    c000305b <sched+0x57>
c0003028:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000302b:	83 c0 24             	add    $0x24,%eax
c000302e:	83 ec 08             	sub    $0x8,%esp
c0003031:	50                   	push   %eax
c0003032:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c0003038:	50                   	push   %eax
c0003039:	e8 5f 03 00 00       	call   c000339d <_list_add_back>
c000303e:	83 c4 10             	add    $0x10,%esp
c0003041:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003044:	0f b6 40 08          	movzbl 0x8(%eax),%eax
c0003048:	0f b6 d0             	movzbl %al,%edx
c000304b:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000304e:	89 50 1c             	mov    %edx,0x1c(%eax)
c0003051:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003054:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
c000305b:	c7 c0 c8 75 00 c0    	mov    $0xc00075c8,%eax
c0003061:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c0003067:	83 ec 0c             	sub    $0xc,%esp
c000306a:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c0003070:	50                   	push   %eax
c0003071:	e8 7f 03 00 00       	call   c00033f5 <_list_pop_front>
c0003076:	83 c4 10             	add    $0x10,%esp
c0003079:	89 c2                	mov    %eax,%edx
c000307b:	c7 c0 c8 75 00 c0    	mov    $0xc00075c8,%eax
c0003081:	89 10                	mov    %edx,(%eax)
c0003083:	c7 c0 c8 75 00 c0    	mov    $0xc00075c8,%eax
c0003089:	8b 00                	mov    (%eax),%eax
c000308b:	83 e8 24             	sub    $0x24,%eax
c000308e:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003091:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0003094:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
c000309b:	83 ec 08             	sub    $0x8,%esp
c000309e:	ff 75 f0             	pushl  -0x10(%ebp)
c00030a1:	ff 75 f4             	pushl  -0xc(%ebp)
c00030a4:	e8 e7 00 00 00       	call   c0003190 <switch_to>
c00030a9:	83 c4 10             	add    $0x10,%esp
c00030ac:	90                   	nop
c00030ad:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00030b0:	c9                   	leave  
c00030b1:	c3                   	ret    

c00030b2 <thread_init>:
c00030b2:	55                   	push   %ebp
c00030b3:	89 e5                	mov    %esp,%ebp
c00030b5:	53                   	push   %ebx
c00030b6:	83 ec 04             	sub    $0x4,%esp
c00030b9:	e8 a4 e4 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c00030be:	81 c3 42 3f 00 00    	add    $0x3f42,%ebx
c00030c4:	83 ec 0c             	sub    $0xc,%esp
c00030c7:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c00030cd:	50                   	push   %eax
c00030ce:	e8 22 02 00 00       	call   c00032f5 <_list_init>
c00030d3:	83 c4 10             	add    $0x10,%esp
c00030d6:	83 ec 0c             	sub    $0xc,%esp
c00030d9:	c7 c0 b4 75 00 c0    	mov    $0xc00075b4,%eax
c00030df:	50                   	push   %eax
c00030e0:	e8 10 02 00 00       	call   c00032f5 <_list_init>
c00030e5:	83 c4 10             	add    $0x10,%esp
c00030e8:	e8 5c fe ff ff       	call   c0002f49 <make_main_thread>
c00030ed:	90                   	nop
c00030ee:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00030f1:	c9                   	leave  
c00030f2:	c3                   	ret    

c00030f3 <thread_block>:
c00030f3:	55                   	push   %ebp
c00030f4:	89 e5                	mov    %esp,%ebp
c00030f6:	53                   	push   %ebx
c00030f7:	83 ec 14             	sub    $0x14,%esp
c00030fa:	e8 63 e4 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c00030ff:	81 c3 01 3f 00 00    	add    $0x3f01,%ebx
c0003105:	e8 4a f1 ff ff       	call   c0002254 <intr_status>
c000310a:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000310d:	e8 16 f1 ff ff       	call   c0002228 <intclose>
c0003112:	e8 39 fc ff ff       	call   c0002d50 <running_thread>
c0003117:	89 45 f0             	mov    %eax,-0x10(%ebp)
c000311a:	8b 45 f0             	mov    -0x10(%ebp),%eax
c000311d:	8b 55 08             	mov    0x8(%ebp),%edx
c0003120:	89 50 04             	mov    %edx,0x4(%eax)
c0003123:	e8 dc fe ff ff       	call   c0003004 <sched>
c0003128:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000312c:	74 05                	je     c0003133 <thread_block+0x40>
c000312e:	e8 c9 f0 ff ff       	call   c00021fc <intopen>
c0003133:	90                   	nop
c0003134:	83 c4 14             	add    $0x14,%esp
c0003137:	5b                   	pop    %ebx
c0003138:	5d                   	pop    %ebp
c0003139:	c3                   	ret    

c000313a <thread_unblock>:
c000313a:	55                   	push   %ebp
c000313b:	89 e5                	mov    %esp,%ebp
c000313d:	53                   	push   %ebx
c000313e:	83 ec 14             	sub    $0x14,%esp
c0003141:	e8 1c e4 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003146:	81 c3 ba 3e 00 00    	add    $0x3eba,%ebx
c000314c:	e8 03 f1 ff ff       	call   c0002254 <intr_status>
c0003151:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003154:	e8 cf f0 ff ff       	call   c0002228 <intclose>
c0003159:	8b 45 08             	mov    0x8(%ebp),%eax
c000315c:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
c0003163:	8b 45 08             	mov    0x8(%ebp),%eax
c0003166:	83 c0 24             	add    $0x24,%eax
c0003169:	83 ec 08             	sub    $0x8,%esp
c000316c:	50                   	push   %eax
c000316d:	c7 c0 a4 75 00 c0    	mov    $0xc00075a4,%eax
c0003173:	50                   	push   %eax
c0003174:	e8 d0 01 00 00       	call   c0003349 <_list_add_front>
c0003179:	83 c4 10             	add    $0x10,%esp
c000317c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c0003180:	74 05                	je     c0003187 <thread_unblock+0x4d>
c0003182:	e8 75 f0 ff ff       	call   c00021fc <intopen>
c0003187:	90                   	nop
c0003188:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000318b:	c9                   	leave  
c000318c:	c3                   	ret    
c000318d:	66 90                	xchg   %ax,%ax
c000318f:	90                   	nop

c0003190 <switch_to>:
c0003190:	56                   	push   %esi
c0003191:	57                   	push   %edi
c0003192:	53                   	push   %ebx
c0003193:	55                   	push   %ebp
c0003194:	8b 44 24 14          	mov    0x14(%esp),%eax
c0003198:	89 20                	mov    %esp,(%eax)
c000319a:	8b 44 24 18          	mov    0x18(%esp),%eax
c000319e:	8b 20                	mov    (%eax),%esp
c00031a0:	5d                   	pop    %ebp
c00031a1:	5b                   	pop    %ebx
c00031a2:	5f                   	pop    %edi
c00031a3:	5e                   	pop    %esi
c00031a4:	c3                   	ret    

c00031a5 <init_lock>:
c00031a5:	55                   	push   %ebp
c00031a6:	89 e5                	mov    %esp,%ebp
c00031a8:	53                   	push   %ebx
c00031a9:	83 ec 04             	sub    $0x4,%esp
c00031ac:	e8 f8 f0 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c00031b1:	05 4f 3e 00 00       	add    $0x3e4f,%eax
c00031b6:	8b 55 08             	mov    0x8(%ebp),%edx
c00031b9:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
c00031bf:	8b 55 08             	mov    0x8(%ebp),%edx
c00031c2:	83 c2 04             	add    $0x4,%edx
c00031c5:	83 ec 0c             	sub    $0xc,%esp
c00031c8:	52                   	push   %edx
c00031c9:	89 c3                	mov    %eax,%ebx
c00031cb:	e8 25 01 00 00       	call   c00032f5 <_list_init>
c00031d0:	83 c4 10             	add    $0x10,%esp
c00031d3:	90                   	nop
c00031d4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00031d7:	c9                   	leave  
c00031d8:	c3                   	ret    

c00031d9 <acquire_lock>:
c00031d9:	55                   	push   %ebp
c00031da:	89 e5                	mov    %esp,%ebp
c00031dc:	53                   	push   %ebx
c00031dd:	83 ec 14             	sub    $0x14,%esp
c00031e0:	e8 7d e3 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c00031e5:	81 c3 1b 3e 00 00    	add    $0x3e1b,%ebx
c00031eb:	e8 64 f0 ff ff       	call   c0002254 <intr_status>
c00031f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00031f3:	e8 30 f0 ff ff       	call   c0002228 <intclose>
c00031f8:	e8 53 fb ff ff       	call   c0002d50 <running_thread>
c00031fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003200:	eb 26                	jmp    c0003228 <acquire_lock+0x4f>
c0003202:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0003205:	8d 50 24             	lea    0x24(%eax),%edx
c0003208:	8b 45 08             	mov    0x8(%ebp),%eax
c000320b:	83 c0 04             	add    $0x4,%eax
c000320e:	83 ec 08             	sub    $0x8,%esp
c0003211:	52                   	push   %edx
c0003212:	50                   	push   %eax
c0003213:	e8 85 01 00 00       	call   c000339d <_list_add_back>
c0003218:	83 c4 10             	add    $0x10,%esp
c000321b:	83 ec 0c             	sub    $0xc,%esp
c000321e:	6a 02                	push   $0x2
c0003220:	e8 ce fe ff ff       	call   c00030f3 <thread_block>
c0003225:	83 c4 10             	add    $0x10,%esp
c0003228:	8b 45 08             	mov    0x8(%ebp),%eax
c000322b:	8b 00                	mov    (%eax),%eax
c000322d:	85 c0                	test   %eax,%eax
c000322f:	75 d1                	jne    c0003202 <acquire_lock+0x29>
c0003231:	8b 45 08             	mov    0x8(%ebp),%eax
c0003234:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0003237:	89 10                	mov    %edx,(%eax)
c0003239:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000323d:	74 05                	je     c0003244 <acquire_lock+0x6b>
c000323f:	e8 b8 ef ff ff       	call   c00021fc <intopen>
c0003244:	90                   	nop
c0003245:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003248:	c9                   	leave  
c0003249:	c3                   	ret    

c000324a <release_lock>:
c000324a:	55                   	push   %ebp
c000324b:	89 e5                	mov    %esp,%ebp
c000324d:	56                   	push   %esi
c000324e:	53                   	push   %ebx
c000324f:	83 ec 10             	sub    $0x10,%esp
c0003252:	e8 0b e3 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003257:	81 c3 a9 3d 00 00    	add    $0x3da9,%ebx
c000325d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003260:	8b 30                	mov    (%eax),%esi
c0003262:	e8 e9 fa ff ff       	call   c0002d50 <running_thread>
c0003267:	39 c6                	cmp    %eax,%esi
c0003269:	74 26                	je     c0003291 <release_lock+0x47>
c000326b:	e8 b8 ef ff ff       	call   c0002228 <intclose>
c0003270:	83 ec 0c             	sub    $0xc,%esp
c0003273:	6a 0a                	push   $0xa
c0003275:	e8 f6 e2 ff ff       	call   c0001570 <put_char>
c000327a:	83 c4 10             	add    $0x10,%esp
c000327d:	83 ec 0c             	sub    $0xc,%esp
c0003280:	8d 83 78 d3 ff ff    	lea    -0x2c88(%ebx),%eax
c0003286:	50                   	push   %eax
c0003287:	e8 d8 e3 ff ff       	call   c0001664 <put_str>
c000328c:	83 c4 10             	add    $0x10,%esp
c000328f:	eb fe                	jmp    c000328f <release_lock+0x45>
c0003291:	e8 be ef ff ff       	call   c0002254 <intr_status>
c0003296:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003299:	e8 8a ef ff ff       	call   c0002228 <intclose>
c000329e:	8b 45 08             	mov    0x8(%ebp),%eax
c00032a1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c00032a7:	8b 45 08             	mov    0x8(%ebp),%eax
c00032aa:	83 c0 04             	add    $0x4,%eax
c00032ad:	83 ec 0c             	sub    $0xc,%esp
c00032b0:	50                   	push   %eax
c00032b1:	e8 76 02 00 00       	call   c000352c <_list_empty>
c00032b6:	83 c4 10             	add    $0x10,%esp
c00032b9:	84 c0                	test   %al,%al
c00032bb:	75 21                	jne    c00032de <release_lock+0x94>
c00032bd:	8b 45 08             	mov    0x8(%ebp),%eax
c00032c0:	83 c0 04             	add    $0x4,%eax
c00032c3:	83 ec 0c             	sub    $0xc,%esp
c00032c6:	50                   	push   %eax
c00032c7:	e8 29 01 00 00       	call   c00033f5 <_list_pop_front>
c00032cc:	83 c4 10             	add    $0x10,%esp
c00032cf:	83 e8 24             	sub    $0x24,%eax
c00032d2:	83 ec 0c             	sub    $0xc,%esp
c00032d5:	50                   	push   %eax
c00032d6:	e8 5f fe ff ff       	call   c000313a <thread_unblock>
c00032db:	83 c4 10             	add    $0x10,%esp
c00032de:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00032e2:	74 05                	je     c00032e9 <release_lock+0x9f>
c00032e4:	e8 13 ef ff ff       	call   c00021fc <intopen>
c00032e9:	90                   	nop
c00032ea:	8d 65 f8             	lea    -0x8(%ebp),%esp
c00032ed:	5b                   	pop    %ebx
c00032ee:	5e                   	pop    %esi
c00032ef:	5d                   	pop    %ebp
c00032f0:	c3                   	ret    

c00032f1 <__x86.get_pc_thunk.dx>:
c00032f1:	8b 14 24             	mov    (%esp),%edx
c00032f4:	c3                   	ret    

c00032f5 <_list_init>:
c00032f5:	55                   	push   %ebp
c00032f6:	89 e5                	mov    %esp,%ebp
c00032f8:	53                   	push   %ebx
c00032f9:	83 ec 14             	sub    $0x14,%esp
c00032fc:	e8 61 e2 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003301:	81 c3 ff 3c 00 00    	add    $0x3cff,%ebx
c0003307:	e8 48 ef ff ff       	call   c0002254 <intr_status>
c000330c:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000330f:	8b 45 08             	mov    0x8(%ebp),%eax
c0003312:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c0003318:	8b 45 08             	mov    0x8(%ebp),%eax
c000331b:	8d 50 08             	lea    0x8(%eax),%edx
c000331e:	8b 45 08             	mov    0x8(%ebp),%eax
c0003321:	89 50 04             	mov    %edx,0x4(%eax)
c0003324:	8b 55 08             	mov    0x8(%ebp),%edx
c0003327:	8b 45 08             	mov    0x8(%ebp),%eax
c000332a:	89 50 08             	mov    %edx,0x8(%eax)
c000332d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003330:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
c0003337:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000333b:	74 05                	je     c0003342 <_list_init+0x4d>
c000333d:	e8 ba ee ff ff       	call   c00021fc <intopen>
c0003342:	90                   	nop
c0003343:	83 c4 14             	add    $0x14,%esp
c0003346:	5b                   	pop    %ebx
c0003347:	5d                   	pop    %ebp
c0003348:	c3                   	ret    

c0003349 <_list_add_front>:
c0003349:	55                   	push   %ebp
c000334a:	89 e5                	mov    %esp,%ebp
c000334c:	53                   	push   %ebx
c000334d:	83 ec 14             	sub    $0x14,%esp
c0003350:	e8 0d e2 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003355:	81 c3 ab 3c 00 00    	add    $0x3cab,%ebx
c000335b:	e8 f4 ee ff ff       	call   c0002254 <intr_status>
c0003360:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003363:	8b 55 08             	mov    0x8(%ebp),%edx
c0003366:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003369:	89 10                	mov    %edx,(%eax)
c000336b:	8b 45 08             	mov    0x8(%ebp),%eax
c000336e:	8b 50 04             	mov    0x4(%eax),%edx
c0003371:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003374:	89 50 04             	mov    %edx,0x4(%eax)
c0003377:	8b 45 08             	mov    0x8(%ebp),%eax
c000337a:	8b 40 04             	mov    0x4(%eax),%eax
c000337d:	8b 55 0c             	mov    0xc(%ebp),%edx
c0003380:	89 10                	mov    %edx,(%eax)
c0003382:	8b 45 08             	mov    0x8(%ebp),%eax
c0003385:	8b 55 0c             	mov    0xc(%ebp),%edx
c0003388:	89 50 04             	mov    %edx,0x4(%eax)
c000338b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000338f:	74 05                	je     c0003396 <_list_add_front+0x4d>
c0003391:	e8 66 ee ff ff       	call   c00021fc <intopen>
c0003396:	90                   	nop
c0003397:	83 c4 14             	add    $0x14,%esp
c000339a:	5b                   	pop    %ebx
c000339b:	5d                   	pop    %ebp
c000339c:	c3                   	ret    

c000339d <_list_add_back>:
c000339d:	55                   	push   %ebp
c000339e:	89 e5                	mov    %esp,%ebp
c00033a0:	53                   	push   %ebx
c00033a1:	83 ec 14             	sub    $0x14,%esp
c00033a4:	e8 b9 e1 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c00033a9:	81 c3 57 3c 00 00    	add    $0x3c57,%ebx
c00033af:	e8 a0 ee ff ff       	call   c0002254 <intr_status>
c00033b4:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00033b7:	8b 45 08             	mov    0x8(%ebp),%eax
c00033ba:	8d 50 08             	lea    0x8(%eax),%edx
c00033bd:	8b 45 0c             	mov    0xc(%ebp),%eax
c00033c0:	89 50 04             	mov    %edx,0x4(%eax)
c00033c3:	8b 45 08             	mov    0x8(%ebp),%eax
c00033c6:	8b 50 08             	mov    0x8(%eax),%edx
c00033c9:	8b 45 0c             	mov    0xc(%ebp),%eax
c00033cc:	89 10                	mov    %edx,(%eax)
c00033ce:	8b 45 08             	mov    0x8(%ebp),%eax
c00033d1:	8b 40 08             	mov    0x8(%eax),%eax
c00033d4:	8b 55 0c             	mov    0xc(%ebp),%edx
c00033d7:	89 50 04             	mov    %edx,0x4(%eax)
c00033da:	8b 45 08             	mov    0x8(%ebp),%eax
c00033dd:	8b 55 0c             	mov    0xc(%ebp),%edx
c00033e0:	89 50 08             	mov    %edx,0x8(%eax)
c00033e3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00033e7:	74 05                	je     c00033ee <_list_add_back+0x51>
c00033e9:	e8 0e ee ff ff       	call   c00021fc <intopen>
c00033ee:	90                   	nop
c00033ef:	83 c4 14             	add    $0x14,%esp
c00033f2:	5b                   	pop    %ebx
c00033f3:	5d                   	pop    %ebp
c00033f4:	c3                   	ret    

c00033f5 <_list_pop_front>:
c00033f5:	55                   	push   %ebp
c00033f6:	89 e5                	mov    %esp,%ebp
c00033f8:	53                   	push   %ebx
c00033f9:	83 ec 14             	sub    $0x14,%esp
c00033fc:	e8 61 e1 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003401:	81 c3 ff 3b 00 00    	add    $0x3bff,%ebx
c0003407:	e8 48 ee ff ff       	call   c0002254 <intr_status>
c000340c:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000340f:	83 ec 0c             	sub    $0xc,%esp
c0003412:	ff 75 08             	pushl  0x8(%ebp)
c0003415:	e8 12 01 00 00       	call   c000352c <_list_empty>
c000341a:	83 c4 10             	add    $0x10,%esp
c000341d:	84 c0                	test   %al,%al
c000341f:	74 07                	je     c0003428 <_list_pop_front+0x33>
c0003421:	b8 00 00 00 00       	mov    $0x0,%eax
c0003426:	eb 31                	jmp    c0003459 <_list_pop_front+0x64>
c0003428:	8b 45 08             	mov    0x8(%ebp),%eax
c000342b:	8b 40 04             	mov    0x4(%eax),%eax
c000342e:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003431:	8b 45 08             	mov    0x8(%ebp),%eax
c0003434:	8b 40 04             	mov    0x4(%eax),%eax
c0003437:	8b 50 04             	mov    0x4(%eax),%edx
c000343a:	8b 45 08             	mov    0x8(%ebp),%eax
c000343d:	89 50 04             	mov    %edx,0x4(%eax)
c0003440:	8b 45 08             	mov    0x8(%ebp),%eax
c0003443:	8b 40 04             	mov    0x4(%eax),%eax
c0003446:	8b 55 08             	mov    0x8(%ebp),%edx
c0003449:	89 10                	mov    %edx,(%eax)
c000344b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000344f:	74 05                	je     c0003456 <_list_pop_front+0x61>
c0003451:	e8 a6 ed ff ff       	call   c00021fc <intopen>
c0003456:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0003459:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000345c:	c9                   	leave  
c000345d:	c3                   	ret    

c000345e <_list_front>:
c000345e:	55                   	push   %ebp
c000345f:	89 e5                	mov    %esp,%ebp
c0003461:	83 ec 08             	sub    $0x8,%esp
c0003464:	e8 40 ee ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003469:	05 97 3b 00 00       	add    $0x3b97,%eax
c000346e:	83 ec 0c             	sub    $0xc,%esp
c0003471:	ff 75 08             	pushl  0x8(%ebp)
c0003474:	e8 b3 00 00 00       	call   c000352c <_list_empty>
c0003479:	83 c4 10             	add    $0x10,%esp
c000347c:	84 c0                	test   %al,%al
c000347e:	74 07                	je     c0003487 <_list_front+0x29>
c0003480:	b8 00 00 00 00       	mov    $0x0,%eax
c0003485:	eb 06                	jmp    c000348d <_list_front+0x2f>
c0003487:	8b 45 08             	mov    0x8(%ebp),%eax
c000348a:	8b 40 04             	mov    0x4(%eax),%eax
c000348d:	c9                   	leave  
c000348e:	c3                   	ret    

c000348f <_list_pop_back>:
c000348f:	55                   	push   %ebp
c0003490:	89 e5                	mov    %esp,%ebp
c0003492:	53                   	push   %ebx
c0003493:	83 ec 14             	sub    $0x14,%esp
c0003496:	e8 c7 e0 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c000349b:	81 c3 65 3b 00 00    	add    $0x3b65,%ebx
c00034a1:	e8 ae ed ff ff       	call   c0002254 <intr_status>
c00034a6:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00034a9:	83 ec 0c             	sub    $0xc,%esp
c00034ac:	ff 75 08             	pushl  0x8(%ebp)
c00034af:	e8 78 00 00 00       	call   c000352c <_list_empty>
c00034b4:	83 c4 10             	add    $0x10,%esp
c00034b7:	84 c0                	test   %al,%al
c00034b9:	74 07                	je     c00034c2 <_list_pop_back+0x33>
c00034bb:	b8 00 00 00 00       	mov    $0x0,%eax
c00034c0:	eb 34                	jmp    c00034f6 <_list_pop_back+0x67>
c00034c2:	8b 45 08             	mov    0x8(%ebp),%eax
c00034c5:	8b 40 08             	mov    0x8(%eax),%eax
c00034c8:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00034cb:	8b 45 08             	mov    0x8(%ebp),%eax
c00034ce:	8b 40 08             	mov    0x8(%eax),%eax
c00034d1:	8b 10                	mov    (%eax),%edx
c00034d3:	8b 45 08             	mov    0x8(%ebp),%eax
c00034d6:	89 50 08             	mov    %edx,0x8(%eax)
c00034d9:	8b 45 08             	mov    0x8(%ebp),%eax
c00034dc:	8b 40 08             	mov    0x8(%eax),%eax
c00034df:	8b 55 08             	mov    0x8(%ebp),%edx
c00034e2:	83 c2 08             	add    $0x8,%edx
c00034e5:	89 50 04             	mov    %edx,0x4(%eax)
c00034e8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00034ec:	74 05                	je     c00034f3 <_list_pop_back+0x64>
c00034ee:	e8 09 ed ff ff       	call   c00021fc <intopen>
c00034f3:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00034f6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00034f9:	c9                   	leave  
c00034fa:	c3                   	ret    

c00034fb <_list_back>:
c00034fb:	55                   	push   %ebp
c00034fc:	89 e5                	mov    %esp,%ebp
c00034fe:	83 ec 08             	sub    $0x8,%esp
c0003501:	e8 a3 ed ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003506:	05 fa 3a 00 00       	add    $0x3afa,%eax
c000350b:	83 ec 0c             	sub    $0xc,%esp
c000350e:	ff 75 08             	pushl  0x8(%ebp)
c0003511:	e8 16 00 00 00       	call   c000352c <_list_empty>
c0003516:	83 c4 10             	add    $0x10,%esp
c0003519:	84 c0                	test   %al,%al
c000351b:	74 07                	je     c0003524 <_list_back+0x29>
c000351d:	b8 00 00 00 00       	mov    $0x0,%eax
c0003522:	eb 06                	jmp    c000352a <_list_back+0x2f>
c0003524:	8b 45 08             	mov    0x8(%ebp),%eax
c0003527:	8b 40 08             	mov    0x8(%eax),%eax
c000352a:	c9                   	leave  
c000352b:	c3                   	ret    

c000352c <_list_empty>:
c000352c:	55                   	push   %ebp
c000352d:	89 e5                	mov    %esp,%ebp
c000352f:	e8 75 ed ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003534:	05 cc 3a 00 00       	add    $0x3acc,%eax
c0003539:	8b 45 08             	mov    0x8(%ebp),%eax
c000353c:	8b 40 04             	mov    0x4(%eax),%eax
c000353f:	8b 55 08             	mov    0x8(%ebp),%edx
c0003542:	83 c2 08             	add    $0x8,%edx
c0003545:	39 d0                	cmp    %edx,%eax
c0003547:	75 07                	jne    c0003550 <_list_empty+0x24>
c0003549:	b8 01 00 00 00       	mov    $0x1,%eax
c000354e:	eb 05                	jmp    c0003555 <_list_empty+0x29>
c0003550:	b8 00 00 00 00       	mov    $0x0,%eax
c0003555:	5d                   	pop    %ebp
c0003556:	c3                   	ret    

c0003557 <_list_find>:
c0003557:	55                   	push   %ebp
c0003558:	89 e5                	mov    %esp,%ebp
c000355a:	53                   	push   %ebx
c000355b:	83 ec 14             	sub    $0x14,%esp
c000355e:	e8 ff df ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003563:	81 c3 9d 3a 00 00    	add    $0x3a9d,%ebx
c0003569:	e8 e6 ec ff ff       	call   c0002254 <intr_status>
c000356e:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003571:	8b 45 08             	mov    0x8(%ebp),%eax
c0003574:	8b 40 04             	mov    0x4(%eax),%eax
c0003577:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000357a:	eb 0f                	jmp    c000358b <_list_find+0x34>
c000357c:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000357f:	3b 45 0c             	cmp    0xc(%ebp),%eax
c0003582:	75 07                	jne    c000358b <_list_find+0x34>
c0003584:	b8 01 00 00 00       	mov    $0x1,%eax
c0003589:	eb 23                	jmp    c00035ae <_list_find+0x57>
c000358b:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000358e:	8d 50 08             	lea    0x8(%eax),%edx
c0003591:	89 55 f4             	mov    %edx,-0xc(%ebp)
c0003594:	8b 55 08             	mov    0x8(%ebp),%edx
c0003597:	83 c2 08             	add    $0x8,%edx
c000359a:	39 d0                	cmp    %edx,%eax
c000359c:	75 de                	jne    c000357c <_list_find+0x25>
c000359e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
c00035a2:	74 05                	je     c00035a9 <_list_find+0x52>
c00035a4:	e8 53 ec ff ff       	call   c00021fc <intopen>
c00035a9:	b8 00 00 00 00       	mov    $0x0,%eax
c00035ae:	83 c4 14             	add    $0x14,%esp
c00035b1:	5b                   	pop    %ebx
c00035b2:	5d                   	pop    %ebp
c00035b3:	c3                   	ret    

c00035b4 <outb>:
c00035b4:	55                   	push   %ebp
c00035b5:	89 e5                	mov    %esp,%ebp
c00035b7:	83 ec 08             	sub    $0x8,%esp
c00035ba:	e8 ea ec ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c00035bf:	05 41 3a 00 00       	add    $0x3a41,%eax
c00035c4:	8b 55 08             	mov    0x8(%ebp),%edx
c00035c7:	8b 45 0c             	mov    0xc(%ebp),%eax
c00035ca:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c00035ce:	88 45 f8             	mov    %al,-0x8(%ebp)
c00035d1:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c00035d5:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c00035d9:	ee                   	out    %al,(%dx)
c00035da:	90                   	nop
c00035db:	c9                   	leave  
c00035dc:	c3                   	ret    

c00035dd <outsw>:
c00035dd:	55                   	push   %ebp
c00035de:	89 e5                	mov    %esp,%ebp
c00035e0:	56                   	push   %esi
c00035e1:	53                   	push   %ebx
c00035e2:	83 ec 04             	sub    $0x4,%esp
c00035e5:	e8 bf ec ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c00035ea:	05 16 3a 00 00       	add    $0x3a16,%eax
c00035ef:	8b 45 08             	mov    0x8(%ebp),%eax
c00035f2:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c00035f6:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c00035fa:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c00035fd:	8b 45 10             	mov    0x10(%ebp),%eax
c0003600:	89 cb                	mov    %ecx,%ebx
c0003602:	89 de                	mov    %ebx,%esi
c0003604:	89 c1                	mov    %eax,%ecx
c0003606:	fc                   	cld    
c0003607:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c000360a:	89 c8                	mov    %ecx,%eax
c000360c:	89 f3                	mov    %esi,%ebx
c000360e:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003611:	89 45 10             	mov    %eax,0x10(%ebp)
c0003614:	90                   	nop
c0003615:	83 c4 04             	add    $0x4,%esp
c0003618:	5b                   	pop    %ebx
c0003619:	5e                   	pop    %esi
c000361a:	5d                   	pop    %ebp
c000361b:	c3                   	ret    

c000361c <inb>:
c000361c:	55                   	push   %ebp
c000361d:	89 e5                	mov    %esp,%ebp
c000361f:	83 ec 14             	sub    $0x14,%esp
c0003622:	e8 82 ec ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003627:	05 d9 39 00 00       	add    $0x39d9,%eax
c000362c:	8b 45 08             	mov    0x8(%ebp),%eax
c000362f:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0003633:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c0003637:	89 c2                	mov    %eax,%edx
c0003639:	ec                   	in     (%dx),%al
c000363a:	88 45 ff             	mov    %al,-0x1(%ebp)
c000363d:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c0003641:	c9                   	leave  
c0003642:	c3                   	ret    

c0003643 <insw>:
c0003643:	55                   	push   %ebp
c0003644:	89 e5                	mov    %esp,%ebp
c0003646:	57                   	push   %edi
c0003647:	53                   	push   %ebx
c0003648:	83 ec 04             	sub    $0x4,%esp
c000364b:	e8 59 ec ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003650:	05 b0 39 00 00       	add    $0x39b0,%eax
c0003655:	8b 45 08             	mov    0x8(%ebp),%eax
c0003658:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c000365c:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0003660:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0003663:	8b 45 10             	mov    0x10(%ebp),%eax
c0003666:	89 cb                	mov    %ecx,%ebx
c0003668:	89 df                	mov    %ebx,%edi
c000366a:	89 c1                	mov    %eax,%ecx
c000366c:	fc                   	cld    
c000366d:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0003670:	89 c8                	mov    %ecx,%eax
c0003672:	89 fb                	mov    %edi,%ebx
c0003674:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003677:	89 45 10             	mov    %eax,0x10(%ebp)
c000367a:	90                   	nop
c000367b:	83 c4 04             	add    $0x4,%esp
c000367e:	5b                   	pop    %ebx
c000367f:	5f                   	pop    %edi
c0003680:	5d                   	pop    %ebp
c0003681:	c3                   	ret    

c0003682 <frequency_set>:
c0003682:	55                   	push   %ebp
c0003683:	89 e5                	mov    %esp,%ebp
c0003685:	57                   	push   %edi
c0003686:	56                   	push   %esi
c0003687:	53                   	push   %ebx
c0003688:	83 ec 14             	sub    $0x14,%esp
c000368b:	e8 19 ec ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003690:	05 70 39 00 00       	add    $0x3970,%eax
c0003695:	8b 75 08             	mov    0x8(%ebp),%esi
c0003698:	8b 5d 0c             	mov    0xc(%ebp),%ebx
c000369b:	8b 4d 10             	mov    0x10(%ebp),%ecx
c000369e:	8b 55 14             	mov    0x14(%ebp),%edx
c00036a1:	8b 7d 18             	mov    0x18(%ebp),%edi
c00036a4:	89 f0                	mov    %esi,%eax
c00036a6:	88 45 f0             	mov    %al,-0x10(%ebp)
c00036a9:	88 5d ec             	mov    %bl,-0x14(%ebp)
c00036ac:	88 4d e8             	mov    %cl,-0x18(%ebp)
c00036af:	88 55 e4             	mov    %dl,-0x1c(%ebp)
c00036b2:	89 f8                	mov    %edi,%eax
c00036b4:	66 89 45 e0          	mov    %ax,-0x20(%ebp)
c00036b8:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
c00036bc:	c1 e0 06             	shl    $0x6,%eax
c00036bf:	89 c2                	mov    %eax,%edx
c00036c1:	0f b6 45 e8          	movzbl -0x18(%ebp),%eax
c00036c5:	c1 e0 04             	shl    $0x4,%eax
c00036c8:	09 c2                	or     %eax,%edx
c00036ca:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
c00036ce:	01 c0                	add    %eax,%eax
c00036d0:	09 d0                	or     %edx,%eax
c00036d2:	0f b6 c0             	movzbl %al,%eax
c00036d5:	50                   	push   %eax
c00036d6:	6a 43                	push   $0x43
c00036d8:	e8 d7 fe ff ff       	call   c00035b4 <outb>
c00036dd:	83 c4 08             	add    $0x8,%esp
c00036e0:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
c00036e4:	0f b6 d0             	movzbl %al,%edx
c00036e7:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c00036eb:	52                   	push   %edx
c00036ec:	50                   	push   %eax
c00036ed:	e8 c2 fe ff ff       	call   c00035b4 <outb>
c00036f2:	83 c4 08             	add    $0x8,%esp
c00036f5:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
c00036f9:	0f b6 c0             	movzbl %al,%eax
c00036fc:	c1 f8 08             	sar    $0x8,%eax
c00036ff:	0f b6 d0             	movzbl %al,%edx
c0003702:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c0003706:	52                   	push   %edx
c0003707:	50                   	push   %eax
c0003708:	e8 a7 fe ff ff       	call   c00035b4 <outb>
c000370d:	83 c4 08             	add    $0x8,%esp
c0003710:	90                   	nop
c0003711:	8d 65 f4             	lea    -0xc(%ebp),%esp
c0003714:	5b                   	pop    %ebx
c0003715:	5e                   	pop    %esi
c0003716:	5f                   	pop    %edi
c0003717:	5d                   	pop    %ebp
c0003718:	c3                   	ret    

c0003719 <timer_init>:
c0003719:	55                   	push   %ebp
c000371a:	89 e5                	mov    %esp,%ebp
c000371c:	53                   	push   %ebx
c000371d:	83 ec 04             	sub    $0x4,%esp
c0003720:	e8 3d de ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003725:	81 c3 db 38 00 00    	add    $0x38db,%ebx
c000372b:	68 4d 17 00 00       	push   $0x174d
c0003730:	6a 02                	push   $0x2
c0003732:	6a 03                	push   $0x3
c0003734:	6a 00                	push   $0x0
c0003736:	6a 40                	push   $0x40
c0003738:	e8 45 ff ff ff       	call   c0003682 <frequency_set>
c000373d:	83 c4 14             	add    $0x14,%esp
c0003740:	83 ec 08             	sub    $0x8,%esp
c0003743:	8d 83 5a c7 ff ff    	lea    -0x38a6(%ebx),%eax
c0003749:	50                   	push   %eax
c000374a:	6a 20                	push   $0x20
c000374c:	e8 39 eb ff ff       	call   c000228a <register_handler>
c0003751:	83 c4 10             	add    $0x10,%esp
c0003754:	90                   	nop
c0003755:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003758:	c9                   	leave  
c0003759:	c3                   	ret    

c000375a <intr_timer_handler>:
c000375a:	55                   	push   %ebp
c000375b:	89 e5                	mov    %esp,%ebp
c000375d:	53                   	push   %ebx
c000375e:	83 ec 14             	sub    $0x14,%esp
c0003761:	e8 fc dd ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003766:	81 c3 9a 38 00 00    	add    $0x389a,%ebx
c000376c:	e8 df f5 ff ff       	call   c0002d50 <running_thread>
c0003771:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003774:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003777:	c7 40 38 06 07 92 19 	movl   $0x19920706,0x38(%eax)
c000377e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003781:	8b 40 20             	mov    0x20(%eax),%eax
c0003784:	8d 50 01             	lea    0x1(%eax),%edx
c0003787:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000378a:	89 50 20             	mov    %edx,0x20(%eax)
c000378d:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003790:	8b 40 1c             	mov    0x1c(%eax),%eax
c0003793:	85 c0                	test   %eax,%eax
c0003795:	75 07                	jne    c000379e <intr_timer_handler+0x44>
c0003797:	e8 68 f8 ff ff       	call   c0003004 <sched>
c000379c:	eb 0f                	jmp    c00037ad <intr_timer_handler+0x53>
c000379e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00037a1:	8b 40 1c             	mov    0x1c(%eax),%eax
c00037a4:	8d 50 ff             	lea    -0x1(%eax),%edx
c00037a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00037aa:	89 50 1c             	mov    %edx,0x1c(%eax)
c00037ad:	90                   	nop
c00037ae:	83 c4 14             	add    $0x14,%esp
c00037b1:	5b                   	pop    %ebx
c00037b2:	5d                   	pop    %ebp
c00037b3:	c3                   	ret    

c00037b4 <console_init>:
c00037b4:	55                   	push   %ebp
c00037b5:	89 e5                	mov    %esp,%ebp
c00037b7:	53                   	push   %ebx
c00037b8:	83 ec 04             	sub    $0x4,%esp
c00037bb:	e8 e9 ea ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c00037c0:	05 40 38 00 00       	add    $0x3840,%eax
c00037c5:	83 ec 0c             	sub    $0xc,%esp
c00037c8:	8d 90 00 03 00 00    	lea    0x300(%eax),%edx
c00037ce:	52                   	push   %edx
c00037cf:	89 c3                	mov    %eax,%ebx
c00037d1:	e8 cf f9 ff ff       	call   c00031a5 <init_lock>
c00037d6:	83 c4 10             	add    $0x10,%esp
c00037d9:	90                   	nop
c00037da:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00037dd:	c9                   	leave  
c00037de:	c3                   	ret    

c00037df <console_put_char>:
c00037df:	55                   	push   %ebp
c00037e0:	89 e5                	mov    %esp,%ebp
c00037e2:	53                   	push   %ebx
c00037e3:	83 ec 14             	sub    $0x14,%esp
c00037e6:	e8 77 dd ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c00037eb:	81 c3 15 38 00 00    	add    $0x3815,%ebx
c00037f1:	8b 45 08             	mov    0x8(%ebp),%eax
c00037f4:	88 45 f4             	mov    %al,-0xc(%ebp)
c00037f7:	83 ec 0c             	sub    $0xc,%esp
c00037fa:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c0003800:	50                   	push   %eax
c0003801:	e8 d3 f9 ff ff       	call   c00031d9 <acquire_lock>
c0003806:	83 c4 10             	add    $0x10,%esp
c0003809:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
c000380d:	83 ec 0c             	sub    $0xc,%esp
c0003810:	50                   	push   %eax
c0003811:	e8 5a dd ff ff       	call   c0001570 <put_char>
c0003816:	83 c4 10             	add    $0x10,%esp
c0003819:	83 ec 0c             	sub    $0xc,%esp
c000381c:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c0003822:	50                   	push   %eax
c0003823:	e8 22 fa ff ff       	call   c000324a <release_lock>
c0003828:	83 c4 10             	add    $0x10,%esp
c000382b:	90                   	nop
c000382c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000382f:	c9                   	leave  
c0003830:	c3                   	ret    

c0003831 <console_put_str>:
c0003831:	55                   	push   %ebp
c0003832:	89 e5                	mov    %esp,%ebp
c0003834:	53                   	push   %ebx
c0003835:	83 ec 04             	sub    $0x4,%esp
c0003838:	e8 25 dd ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c000383d:	81 c3 c3 37 00 00    	add    $0x37c3,%ebx
c0003843:	83 ec 0c             	sub    $0xc,%esp
c0003846:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c000384c:	50                   	push   %eax
c000384d:	e8 87 f9 ff ff       	call   c00031d9 <acquire_lock>
c0003852:	83 c4 10             	add    $0x10,%esp
c0003855:	83 ec 0c             	sub    $0xc,%esp
c0003858:	ff 75 08             	pushl  0x8(%ebp)
c000385b:	e8 04 de ff ff       	call   c0001664 <put_str>
c0003860:	83 c4 10             	add    $0x10,%esp
c0003863:	83 ec 0c             	sub    $0xc,%esp
c0003866:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c000386c:	50                   	push   %eax
c000386d:	e8 d8 f9 ff ff       	call   c000324a <release_lock>
c0003872:	83 c4 10             	add    $0x10,%esp
c0003875:	90                   	nop
c0003876:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003879:	c9                   	leave  
c000387a:	c3                   	ret    

c000387b <console_put_int>:
c000387b:	55                   	push   %ebp
c000387c:	89 e5                	mov    %esp,%ebp
c000387e:	53                   	push   %ebx
c000387f:	83 ec 04             	sub    $0x4,%esp
c0003882:	e8 db dc ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003887:	81 c3 79 37 00 00    	add    $0x3779,%ebx
c000388d:	83 ec 0c             	sub    $0xc,%esp
c0003890:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c0003896:	50                   	push   %eax
c0003897:	e8 3d f9 ff ff       	call   c00031d9 <acquire_lock>
c000389c:	83 c4 10             	add    $0x10,%esp
c000389f:	83 ec 0c             	sub    $0xc,%esp
c00038a2:	ff 75 08             	pushl  0x8(%ebp)
c00038a5:	e8 fd dd ff ff       	call   c00016a7 <put_int>
c00038aa:	83 c4 10             	add    $0x10,%esp
c00038ad:	83 ec 0c             	sub    $0xc,%esp
c00038b0:	8d 83 00 03 00 00    	lea    0x300(%ebx),%eax
c00038b6:	50                   	push   %eax
c00038b7:	e8 8e f9 ff ff       	call   c000324a <release_lock>
c00038bc:	83 c4 10             	add    $0x10,%esp
c00038bf:	90                   	nop
c00038c0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00038c3:	c9                   	leave  
c00038c4:	c3                   	ret    

c00038c5 <outb>:
c00038c5:	55                   	push   %ebp
c00038c6:	89 e5                	mov    %esp,%ebp
c00038c8:	83 ec 08             	sub    $0x8,%esp
c00038cb:	e8 d9 e9 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c00038d0:	05 30 37 00 00       	add    $0x3730,%eax
c00038d5:	8b 55 08             	mov    0x8(%ebp),%edx
c00038d8:	8b 45 0c             	mov    0xc(%ebp),%eax
c00038db:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c00038df:	88 45 f8             	mov    %al,-0x8(%ebp)
c00038e2:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c00038e6:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c00038ea:	ee                   	out    %al,(%dx)
c00038eb:	90                   	nop
c00038ec:	c9                   	leave  
c00038ed:	c3                   	ret    

c00038ee <outsw>:
c00038ee:	55                   	push   %ebp
c00038ef:	89 e5                	mov    %esp,%ebp
c00038f1:	56                   	push   %esi
c00038f2:	53                   	push   %ebx
c00038f3:	83 ec 04             	sub    $0x4,%esp
c00038f6:	e8 ae e9 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c00038fb:	05 05 37 00 00       	add    $0x3705,%eax
c0003900:	8b 45 08             	mov    0x8(%ebp),%eax
c0003903:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0003907:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c000390b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c000390e:	8b 45 10             	mov    0x10(%ebp),%eax
c0003911:	89 cb                	mov    %ecx,%ebx
c0003913:	89 de                	mov    %ebx,%esi
c0003915:	89 c1                	mov    %eax,%ecx
c0003917:	fc                   	cld    
c0003918:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c000391b:	89 c8                	mov    %ecx,%eax
c000391d:	89 f3                	mov    %esi,%ebx
c000391f:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003922:	89 45 10             	mov    %eax,0x10(%ebp)
c0003925:	90                   	nop
c0003926:	83 c4 04             	add    $0x4,%esp
c0003929:	5b                   	pop    %ebx
c000392a:	5e                   	pop    %esi
c000392b:	5d                   	pop    %ebp
c000392c:	c3                   	ret    

c000392d <inb>:
c000392d:	55                   	push   %ebp
c000392e:	89 e5                	mov    %esp,%ebp
c0003930:	83 ec 14             	sub    $0x14,%esp
c0003933:	e8 71 e9 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003938:	05 c8 36 00 00       	add    $0x36c8,%eax
c000393d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003940:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0003944:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c0003948:	89 c2                	mov    %eax,%edx
c000394a:	ec                   	in     (%dx),%al
c000394b:	88 45 ff             	mov    %al,-0x1(%ebp)
c000394e:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c0003952:	c9                   	leave  
c0003953:	c3                   	ret    

c0003954 <insw>:
c0003954:	55                   	push   %ebp
c0003955:	89 e5                	mov    %esp,%ebp
c0003957:	57                   	push   %edi
c0003958:	53                   	push   %ebx
c0003959:	83 ec 04             	sub    $0x4,%esp
c000395c:	e8 48 e9 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003961:	05 9f 36 00 00       	add    $0x369f,%eax
c0003966:	8b 45 08             	mov    0x8(%ebp),%eax
c0003969:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c000396d:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0003971:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0003974:	8b 45 10             	mov    0x10(%ebp),%eax
c0003977:	89 cb                	mov    %ecx,%ebx
c0003979:	89 df                	mov    %ebx,%edi
c000397b:	89 c1                	mov    %eax,%ecx
c000397d:	fc                   	cld    
c000397e:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0003981:	89 c8                	mov    %ecx,%eax
c0003983:	89 fb                	mov    %edi,%ebx
c0003985:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003988:	89 45 10             	mov    %eax,0x10(%ebp)
c000398b:	90                   	nop
c000398c:	83 c4 04             	add    $0x4,%esp
c000398f:	5b                   	pop    %ebx
c0003990:	5f                   	pop    %edi
c0003991:	5d                   	pop    %ebp
c0003992:	c3                   	ret    

c0003993 <intr_keyboard_handler>:
c0003993:	55                   	push   %ebp
c0003994:	89 e5                	mov    %esp,%ebp
c0003996:	53                   	push   %ebx
c0003997:	83 ec 14             	sub    $0x14,%esp
c000399a:	e8 c3 db ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c000399f:	81 c3 61 36 00 00    	add    $0x3661,%ebx
c00039a5:	0f b6 83 14 03 00 00 	movzbl 0x314(%ebx),%eax
c00039ac:	88 45 f4             	mov    %al,-0xc(%ebp)
c00039af:	0f b6 83 15 03 00 00 	movzbl 0x315(%ebx),%eax
c00039b6:	88 45 f3             	mov    %al,-0xd(%ebp)
c00039b9:	0f b6 83 17 03 00 00 	movzbl 0x317(%ebx),%eax
c00039c0:	88 45 f2             	mov    %al,-0xe(%ebp)
c00039c3:	6a 60                	push   $0x60
c00039c5:	e8 63 ff ff ff       	call   c000392d <inb>
c00039ca:	83 c4 04             	add    $0x4,%esp
c00039cd:	0f b6 c0             	movzbl %al,%eax
c00039d0:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
c00039d4:	66 81 7d f6 e0 00    	cmpw   $0xe0,-0xa(%ebp)
c00039da:	75 0c                	jne    c00039e8 <intr_keyboard_handler+0x55>
c00039dc:	c6 83 18 03 00 00 01 	movb   $0x1,0x318(%ebx)
c00039e3:	e9 28 02 00 00       	jmp    c0003c10 <intr_keyboard_handler+0x27d>
c00039e8:	0f b6 83 18 03 00 00 	movzbl 0x318(%ebx),%eax
c00039ef:	3c 01                	cmp    $0x1,%al
c00039f1:	75 0d                	jne    c0003a00 <intr_keyboard_handler+0x6d>
c00039f3:	66 81 4d f6 00 e0    	orw    $0xe000,-0xa(%ebp)
c00039f9:	c6 83 18 03 00 00 00 	movb   $0x0,0x318(%ebx)
c0003a00:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
c0003a04:	83 e0 80             	and    $0xffffff80,%eax
c0003a07:	88 45 f1             	mov    %al,-0xf(%ebp)
c0003a0a:	80 7d f1 00          	cmpb   $0x0,-0xf(%ebp)
c0003a0e:	74 61                	je     c0003a71 <intr_keyboard_handler+0xde>
c0003a10:	66 81 65 f6 7f ff    	andw   $0xff7f,-0xa(%ebp)
c0003a16:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
c0003a1a:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0003a1e:	66 83 7d ec 1d       	cmpw   $0x1d,-0x14(%ebp)
c0003a23:	74 08                	je     c0003a2d <intr_keyboard_handler+0x9a>
c0003a25:	66 81 7d ec 1d e0    	cmpw   $0xe01d,-0x14(%ebp)
c0003a2b:	75 09                	jne    c0003a36 <intr_keyboard_handler+0xa3>
c0003a2d:	c6 83 14 03 00 00 00 	movb   $0x0,0x314(%ebx)
c0003a34:	eb 36                	jmp    c0003a6c <intr_keyboard_handler+0xd9>
c0003a36:	66 83 7d ec 2a       	cmpw   $0x2a,-0x14(%ebp)
c0003a3b:	74 07                	je     c0003a44 <intr_keyboard_handler+0xb1>
c0003a3d:	66 83 7d ec 36       	cmpw   $0x36,-0x14(%ebp)
c0003a42:	75 09                	jne    c0003a4d <intr_keyboard_handler+0xba>
c0003a44:	c6 83 15 03 00 00 00 	movb   $0x0,0x315(%ebx)
c0003a4b:	eb 1f                	jmp    c0003a6c <intr_keyboard_handler+0xd9>
c0003a4d:	66 83 7d ec 38       	cmpw   $0x38,-0x14(%ebp)
c0003a52:	74 0c                	je     c0003a60 <intr_keyboard_handler+0xcd>
c0003a54:	66 81 7d ec 38 e0    	cmpw   $0xe038,-0x14(%ebp)
c0003a5a:	0f 85 a9 01 00 00    	jne    c0003c09 <intr_keyboard_handler+0x276>
c0003a60:	c6 83 16 03 00 00 00 	movb   $0x0,0x316(%ebx)
c0003a67:	e9 9d 01 00 00       	jmp    c0003c09 <intr_keyboard_handler+0x276>
c0003a6c:	e9 98 01 00 00       	jmp    c0003c09 <intr_keyboard_handler+0x276>
c0003a71:	66 83 7d f6 00       	cmpw   $0x0,-0xa(%ebp)
c0003a76:	74 07                	je     c0003a7f <intr_keyboard_handler+0xec>
c0003a78:	66 83 7d f6 3a       	cmpw   $0x3a,-0xa(%ebp)
c0003a7d:	76 14                	jbe    c0003a93 <intr_keyboard_handler+0x100>
c0003a7f:	66 81 7d f6 38 e0    	cmpw   $0xe038,-0xa(%ebp)
c0003a85:	74 0c                	je     c0003a93 <intr_keyboard_handler+0x100>
c0003a87:	66 81 7d f6 1d e0    	cmpw   $0xe01d,-0xa(%ebp)
c0003a8d:	0f 85 62 01 00 00    	jne    c0003bf5 <intr_keyboard_handler+0x262>
c0003a93:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)
c0003a97:	66 83 7d f6 0d       	cmpw   $0xd,-0xa(%ebp)
c0003a9c:	76 3f                	jbe    c0003add <intr_keyboard_handler+0x14a>
c0003a9e:	66 83 7d f6 29       	cmpw   $0x29,-0xa(%ebp)
c0003aa3:	74 38                	je     c0003add <intr_keyboard_handler+0x14a>
c0003aa5:	66 83 7d f6 1a       	cmpw   $0x1a,-0xa(%ebp)
c0003aaa:	74 31                	je     c0003add <intr_keyboard_handler+0x14a>
c0003aac:	66 83 7d f6 1b       	cmpw   $0x1b,-0xa(%ebp)
c0003ab1:	74 2a                	je     c0003add <intr_keyboard_handler+0x14a>
c0003ab3:	66 83 7d f6 2b       	cmpw   $0x2b,-0xa(%ebp)
c0003ab8:	74 23                	je     c0003add <intr_keyboard_handler+0x14a>
c0003aba:	66 83 7d f6 27       	cmpw   $0x27,-0xa(%ebp)
c0003abf:	74 1c                	je     c0003add <intr_keyboard_handler+0x14a>
c0003ac1:	66 83 7d f6 28       	cmpw   $0x28,-0xa(%ebp)
c0003ac6:	74 15                	je     c0003add <intr_keyboard_handler+0x14a>
c0003ac8:	66 83 7d f6 33       	cmpw   $0x33,-0xa(%ebp)
c0003acd:	74 0e                	je     c0003add <intr_keyboard_handler+0x14a>
c0003acf:	66 83 7d f6 34       	cmpw   $0x34,-0xa(%ebp)
c0003ad4:	74 07                	je     c0003add <intr_keyboard_handler+0x14a>
c0003ad6:	66 83 7d f6 35       	cmpw   $0x35,-0xa(%ebp)
c0003adb:	75 0c                	jne    c0003ae9 <intr_keyboard_handler+0x156>
c0003add:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
c0003ae1:	74 2e                	je     c0003b11 <intr_keyboard_handler+0x17e>
c0003ae3:	c6 45 f5 01          	movb   $0x1,-0xb(%ebp)
c0003ae7:	eb 28                	jmp    c0003b11 <intr_keyboard_handler+0x17e>
c0003ae9:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
c0003aed:	74 0c                	je     c0003afb <intr_keyboard_handler+0x168>
c0003aef:	80 7d f2 00          	cmpb   $0x0,-0xe(%ebp)
c0003af3:	74 06                	je     c0003afb <intr_keyboard_handler+0x168>
c0003af5:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)
c0003af9:	eb 16                	jmp    c0003b11 <intr_keyboard_handler+0x17e>
c0003afb:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
c0003aff:	75 06                	jne    c0003b07 <intr_keyboard_handler+0x174>
c0003b01:	80 7d f2 00          	cmpb   $0x0,-0xe(%ebp)
c0003b05:	74 06                	je     c0003b0d <intr_keyboard_handler+0x17a>
c0003b07:	c6 45 f5 01          	movb   $0x1,-0xb(%ebp)
c0003b0b:	eb 04                	jmp    c0003b11 <intr_keyboard_handler+0x17e>
c0003b0d:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)
c0003b11:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
c0003b15:	88 45 f0             	mov    %al,-0x10(%ebp)
c0003b18:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c0003b1c:	0f b6 4d f5          	movzbl -0xb(%ebp),%ecx
c0003b20:	8d 93 00 01 00 00    	lea    0x100(%ebx),%edx
c0003b26:	01 c0                	add    %eax,%eax
c0003b28:	01 c8                	add    %ecx,%eax
c0003b2a:	01 d0                	add    %edx,%eax
c0003b2c:	0f b6 00             	movzbl (%eax),%eax
c0003b2f:	88 45 ef             	mov    %al,-0x11(%ebp)
c0003b32:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax
c0003b36:	0f b6 c0             	movzbl %al,%eax
c0003b39:	83 ec 0c             	sub    $0xc,%esp
c0003b3c:	50                   	push   %eax
c0003b3d:	e8 2e da ff ff       	call   c0001570 <put_char>
c0003b42:	83 c4 10             	add    $0x10,%esp
c0003b45:	80 7d ef 00          	cmpb   $0x0,-0x11(%ebp)
c0003b49:	74 46                	je     c0003b91 <intr_keyboard_handler+0x1fe>
c0003b4b:	83 ec 0c             	sub    $0xc,%esp
c0003b4e:	c7 c0 e0 75 00 c0    	mov    $0xc00075e0,%eax
c0003b54:	50                   	push   %eax
c0003b55:	e8 a6 01 00 00       	call   c0003d00 <full_ioqueue>
c0003b5a:	83 c4 10             	add    $0x10,%esp
c0003b5d:	84 c0                	test   %al,%al
c0003b5f:	0f 85 a7 00 00 00    	jne    c0003c0c <intr_keyboard_handler+0x279>
c0003b65:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax
c0003b69:	0f b6 c0             	movzbl %al,%eax
c0003b6c:	83 ec 0c             	sub    $0xc,%esp
c0003b6f:	50                   	push   %eax
c0003b70:	e8 fb d9 ff ff       	call   c0001570 <put_char>
c0003b75:	83 c4 10             	add    $0x10,%esp
c0003b78:	0f be 45 ef          	movsbl -0x11(%ebp),%eax
c0003b7c:	83 ec 08             	sub    $0x8,%esp
c0003b7f:	50                   	push   %eax
c0003b80:	c7 c0 e0 75 00 c0    	mov    $0xc00075e0,%eax
c0003b86:	50                   	push   %eax
c0003b87:	e8 bf 01 00 00       	call   c0003d4b <ioq_put_char>
c0003b8c:	83 c4 10             	add    $0x10,%esp
c0003b8f:	eb 7b                	jmp    c0003c0c <intr_keyboard_handler+0x279>
c0003b91:	66 83 7d f6 1d       	cmpw   $0x1d,-0xa(%ebp)
c0003b96:	74 08                	je     c0003ba0 <intr_keyboard_handler+0x20d>
c0003b98:	66 81 7d f6 1d e0    	cmpw   $0xe01d,-0xa(%ebp)
c0003b9e:	75 09                	jne    c0003ba9 <intr_keyboard_handler+0x216>
c0003ba0:	c6 83 14 03 00 00 01 	movb   $0x1,0x314(%ebx)
c0003ba7:	eb 4a                	jmp    c0003bf3 <intr_keyboard_handler+0x260>
c0003ba9:	66 83 7d f6 2a       	cmpw   $0x2a,-0xa(%ebp)
c0003bae:	74 07                	je     c0003bb7 <intr_keyboard_handler+0x224>
c0003bb0:	66 83 7d f6 36       	cmpw   $0x36,-0xa(%ebp)
c0003bb5:	75 09                	jne    c0003bc0 <intr_keyboard_handler+0x22d>
c0003bb7:	c6 83 15 03 00 00 01 	movb   $0x1,0x315(%ebx)
c0003bbe:	eb 33                	jmp    c0003bf3 <intr_keyboard_handler+0x260>
c0003bc0:	66 83 7d f6 38       	cmpw   $0x38,-0xa(%ebp)
c0003bc5:	74 08                	je     c0003bcf <intr_keyboard_handler+0x23c>
c0003bc7:	66 81 7d f6 38 e0    	cmpw   $0xe038,-0xa(%ebp)
c0003bcd:	75 09                	jne    c0003bd8 <intr_keyboard_handler+0x245>
c0003bcf:	c6 83 16 03 00 00 01 	movb   $0x1,0x316(%ebx)
c0003bd6:	eb 1b                	jmp    c0003bf3 <intr_keyboard_handler+0x260>
c0003bd8:	66 83 7d f6 3a       	cmpw   $0x3a,-0xa(%ebp)
c0003bdd:	75 30                	jne    c0003c0f <intr_keyboard_handler+0x27c>
c0003bdf:	0f b6 83 17 03 00 00 	movzbl 0x317(%ebx),%eax
c0003be6:	84 c0                	test   %al,%al
c0003be8:	0f 94 c0             	sete   %al
c0003beb:	88 83 17 03 00 00    	mov    %al,0x317(%ebx)
c0003bf1:	eb 1c                	jmp    c0003c0f <intr_keyboard_handler+0x27c>
c0003bf3:	eb 1a                	jmp    c0003c0f <intr_keyboard_handler+0x27c>
c0003bf5:	83 ec 0c             	sub    $0xc,%esp
c0003bf8:	8d 83 9d d3 ff ff    	lea    -0x2c63(%ebx),%eax
c0003bfe:	50                   	push   %eax
c0003bff:	e8 60 da ff ff       	call   c0001664 <put_str>
c0003c04:	83 c4 10             	add    $0x10,%esp
c0003c07:	eb 07                	jmp    c0003c10 <intr_keyboard_handler+0x27d>
c0003c09:	90                   	nop
c0003c0a:	eb 04                	jmp    c0003c10 <intr_keyboard_handler+0x27d>
c0003c0c:	90                   	nop
c0003c0d:	eb 01                	jmp    c0003c10 <intr_keyboard_handler+0x27d>
c0003c0f:	90                   	nop
c0003c10:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003c13:	c9                   	leave  
c0003c14:	c3                   	ret    

c0003c15 <intr_kbd_handler>:
c0003c15:	55                   	push   %ebp
c0003c16:	89 e5                	mov    %esp,%ebp
c0003c18:	53                   	push   %ebx
c0003c19:	83 ec 04             	sub    $0x4,%esp
c0003c1c:	e8 88 e6 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003c21:	05 df 33 00 00       	add    $0x33df,%eax
c0003c26:	83 ec 0c             	sub    $0xc,%esp
c0003c29:	6a 6b                	push   $0x6b
c0003c2b:	89 c3                	mov    %eax,%ebx
c0003c2d:	e8 3e d9 ff ff       	call   c0001570 <put_char>
c0003c32:	83 c4 10             	add    $0x10,%esp
c0003c35:	83 ec 0c             	sub    $0xc,%esp
c0003c38:	6a 60                	push   $0x60
c0003c3a:	e8 ee fc ff ff       	call   c000392d <inb>
c0003c3f:	83 c4 10             	add    $0x10,%esp
c0003c42:	90                   	nop
c0003c43:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003c46:	c9                   	leave  
c0003c47:	c3                   	ret    

c0003c48 <keyboard_init>:
c0003c48:	55                   	push   %ebp
c0003c49:	89 e5                	mov    %esp,%ebp
c0003c4b:	53                   	push   %ebx
c0003c4c:	83 ec 04             	sub    $0x4,%esp
c0003c4f:	e8 0e d9 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003c54:	81 c3 ac 33 00 00    	add    $0x33ac,%ebx
c0003c5a:	83 ec 0c             	sub    $0xc,%esp
c0003c5d:	c7 c0 e0 75 00 c0    	mov    $0xc00075e0,%eax
c0003c63:	50                   	push   %eax
c0003c64:	e8 2f 00 00 00       	call   c0003c98 <init_ioqueue>
c0003c69:	83 c4 10             	add    $0x10,%esp
c0003c6c:	83 ec 08             	sub    $0x8,%esp
c0003c6f:	8d 83 93 c9 ff ff    	lea    -0x366d(%ebx),%eax
c0003c75:	50                   	push   %eax
c0003c76:	6a 21                	push   $0x21
c0003c78:	e8 0d e6 ff ff       	call   c000228a <register_handler>
c0003c7d:	83 c4 10             	add    $0x10,%esp
c0003c80:	83 ec 0c             	sub    $0xc,%esp
c0003c83:	8d 83 ab d3 ff ff    	lea    -0x2c55(%ebx),%eax
c0003c89:	50                   	push   %eax
c0003c8a:	e8 d5 d9 ff ff       	call   c0001664 <put_str>
c0003c8f:	83 c4 10             	add    $0x10,%esp
c0003c92:	90                   	nop
c0003c93:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003c96:	c9                   	leave  
c0003c97:	c3                   	ret    

c0003c98 <init_ioqueue>:
c0003c98:	55                   	push   %ebp
c0003c99:	89 e5                	mov    %esp,%ebp
c0003c9b:	53                   	push   %ebx
c0003c9c:	83 ec 04             	sub    $0x4,%esp
c0003c9f:	e8 05 e6 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003ca4:	05 5c 33 00 00       	add    $0x335c,%eax
c0003ca9:	8b 55 08             	mov    0x8(%ebp),%edx
c0003cac:	83 ec 0c             	sub    $0xc,%esp
c0003caf:	52                   	push   %edx
c0003cb0:	89 c3                	mov    %eax,%ebx
c0003cb2:	e8 ee f4 ff ff       	call   c00031a5 <init_lock>
c0003cb7:	83 c4 10             	add    $0x10,%esp
c0003cba:	8b 45 08             	mov    0x8(%ebp),%eax
c0003cbd:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
c0003cc4:	8b 45 08             	mov    0x8(%ebp),%eax
c0003cc7:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
c0003cce:	8b 45 08             	mov    0x8(%ebp),%eax
c0003cd1:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%eax)
c0003cd8:	8b 45 08             	mov    0x8(%ebp),%eax
c0003cdb:	c7 40 60 00 00 00 00 	movl   $0x0,0x60(%eax)
c0003ce2:	90                   	nop
c0003ce3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003ce6:	c9                   	leave  
c0003ce7:	c3                   	ret    

c0003ce8 <next_pos>:
c0003ce8:	55                   	push   %ebp
c0003ce9:	89 e5                	mov    %esp,%ebp
c0003ceb:	e8 b9 e5 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003cf0:	05 10 33 00 00       	add    $0x3310,%eax
c0003cf5:	8b 45 08             	mov    0x8(%ebp),%eax
c0003cf8:	83 c0 01             	add    $0x1,%eax
c0003cfb:	83 e0 3f             	and    $0x3f,%eax
c0003cfe:	5d                   	pop    %ebp
c0003cff:	c3                   	ret    

c0003d00 <full_ioqueue>:
c0003d00:	55                   	push   %ebp
c0003d01:	89 e5                	mov    %esp,%ebp
c0003d03:	e8 a1 e5 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003d08:	05 f8 32 00 00       	add    $0x32f8,%eax
c0003d0d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d10:	8b 40 60             	mov    0x60(%eax),%eax
c0003d13:	50                   	push   %eax
c0003d14:	e8 cf ff ff ff       	call   c0003ce8 <next_pos>
c0003d19:	83 c4 04             	add    $0x4,%esp
c0003d1c:	89 c2                	mov    %eax,%edx
c0003d1e:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d21:	8b 40 5c             	mov    0x5c(%eax),%eax
c0003d24:	39 c2                	cmp    %eax,%edx
c0003d26:	0f 94 c0             	sete   %al
c0003d29:	c9                   	leave  
c0003d2a:	c3                   	ret    

c0003d2b <empty_ioqueue>:
c0003d2b:	55                   	push   %ebp
c0003d2c:	89 e5                	mov    %esp,%ebp
c0003d2e:	e8 76 e5 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003d33:	05 cd 32 00 00       	add    $0x32cd,%eax
c0003d38:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d3b:	8b 50 5c             	mov    0x5c(%eax),%edx
c0003d3e:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d41:	8b 40 60             	mov    0x60(%eax),%eax
c0003d44:	39 c2                	cmp    %eax,%edx
c0003d46:	0f 94 c0             	sete   %al
c0003d49:	5d                   	pop    %ebp
c0003d4a:	c3                   	ret    

c0003d4b <ioq_put_char>:
c0003d4b:	55                   	push   %ebp
c0003d4c:	89 e5                	mov    %esp,%ebp
c0003d4e:	53                   	push   %ebx
c0003d4f:	83 ec 14             	sub    $0x14,%esp
c0003d52:	e8 0b d8 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003d57:	81 c3 a9 32 00 00    	add    $0x32a9,%ebx
c0003d5d:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003d60:	88 45 f4             	mov    %al,-0xc(%ebp)
c0003d63:	e8 ec e4 ff ff       	call   c0002254 <intr_status>
c0003d68:	85 c0                	test   %eax,%eax
c0003d6a:	74 5e                	je     c0003dca <ioq_put_char+0x7f>
c0003d6c:	e8 b7 e4 ff ff       	call   c0002228 <intclose>
c0003d71:	83 ec 0c             	sub    $0xc,%esp
c0003d74:	6a 0a                	push   $0xa
c0003d76:	e8 f5 d7 ff ff       	call   c0001570 <put_char>
c0003d7b:	83 c4 10             	add    $0x10,%esp
c0003d7e:	83 ec 0c             	sub    $0xc,%esp
c0003d81:	8d 83 bc d3 ff ff    	lea    -0x2c44(%ebx),%eax
c0003d87:	50                   	push   %eax
c0003d88:	e8 d7 d8 ff ff       	call   c0001664 <put_str>
c0003d8d:	83 c4 10             	add    $0x10,%esp
c0003d90:	eb fe                	jmp    c0003d90 <ioq_put_char+0x45>
c0003d92:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d95:	83 ec 0c             	sub    $0xc,%esp
c0003d98:	50                   	push   %eax
c0003d99:	e8 3b f4 ff ff       	call   c00031d9 <acquire_lock>
c0003d9e:	83 c4 10             	add    $0x10,%esp
c0003da1:	e8 aa ef ff ff       	call   c0002d50 <running_thread>
c0003da6:	89 c2                	mov    %eax,%edx
c0003da8:	8b 45 08             	mov    0x8(%ebp),%eax
c0003dab:	89 50 14             	mov    %edx,0x14(%eax)
c0003dae:	83 ec 0c             	sub    $0xc,%esp
c0003db1:	6a 02                	push   $0x2
c0003db3:	e8 3b f3 ff ff       	call   c00030f3 <thread_block>
c0003db8:	83 c4 10             	add    $0x10,%esp
c0003dbb:	8b 45 08             	mov    0x8(%ebp),%eax
c0003dbe:	83 ec 0c             	sub    $0xc,%esp
c0003dc1:	50                   	push   %eax
c0003dc2:	e8 83 f4 ff ff       	call   c000324a <release_lock>
c0003dc7:	83 c4 10             	add    $0x10,%esp
c0003dca:	83 ec 0c             	sub    $0xc,%esp
c0003dcd:	ff 75 08             	pushl  0x8(%ebp)
c0003dd0:	e8 2b ff ff ff       	call   c0003d00 <full_ioqueue>
c0003dd5:	83 c4 10             	add    $0x10,%esp
c0003dd8:	84 c0                	test   %al,%al
c0003dda:	75 b6                	jne    c0003d92 <ioq_put_char+0x47>
c0003ddc:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ddf:	8b 40 18             	mov    0x18(%eax),%eax
c0003de2:	85 c0                	test   %eax,%eax
c0003de4:	74 1c                	je     c0003e02 <ioq_put_char+0xb7>
c0003de6:	8b 45 08             	mov    0x8(%ebp),%eax
c0003de9:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
c0003df0:	8b 45 08             	mov    0x8(%ebp),%eax
c0003df3:	8b 40 18             	mov    0x18(%eax),%eax
c0003df6:	83 ec 0c             	sub    $0xc,%esp
c0003df9:	50                   	push   %eax
c0003dfa:	e8 3b f3 ff ff       	call   c000313a <thread_unblock>
c0003dff:	83 c4 10             	add    $0x10,%esp
c0003e02:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e05:	8b 40 60             	mov    0x60(%eax),%eax
c0003e08:	8b 55 08             	mov    0x8(%ebp),%edx
c0003e0b:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx
c0003e0f:	88 4c 02 1c          	mov    %cl,0x1c(%edx,%eax,1)
c0003e13:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e16:	8b 40 60             	mov    0x60(%eax),%eax
c0003e19:	83 ec 0c             	sub    $0xc,%esp
c0003e1c:	50                   	push   %eax
c0003e1d:	e8 c6 fe ff ff       	call   c0003ce8 <next_pos>
c0003e22:	83 c4 10             	add    $0x10,%esp
c0003e25:	89 c2                	mov    %eax,%edx
c0003e27:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e2a:	89 50 60             	mov    %edx,0x60(%eax)
c0003e2d:	90                   	nop
c0003e2e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003e31:	c9                   	leave  
c0003e32:	c3                   	ret    

c0003e33 <ioq_get_char>:
c0003e33:	55                   	push   %ebp
c0003e34:	89 e5                	mov    %esp,%ebp
c0003e36:	53                   	push   %ebx
c0003e37:	83 ec 14             	sub    $0x14,%esp
c0003e3a:	e8 23 d7 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003e3f:	81 c3 c1 31 00 00    	add    $0x31c1,%ebx
c0003e45:	e8 0a e4 ff ff       	call   c0002254 <intr_status>
c0003e4a:	85 c0                	test   %eax,%eax
c0003e4c:	74 5e                	je     c0003eac <ioq_get_char+0x79>
c0003e4e:	e8 d5 e3 ff ff       	call   c0002228 <intclose>
c0003e53:	83 ec 0c             	sub    $0xc,%esp
c0003e56:	6a 0a                	push   $0xa
c0003e58:	e8 13 d7 ff ff       	call   c0001570 <put_char>
c0003e5d:	83 c4 10             	add    $0x10,%esp
c0003e60:	83 ec 0c             	sub    $0xc,%esp
c0003e63:	8d 83 bc d3 ff ff    	lea    -0x2c44(%ebx),%eax
c0003e69:	50                   	push   %eax
c0003e6a:	e8 f5 d7 ff ff       	call   c0001664 <put_str>
c0003e6f:	83 c4 10             	add    $0x10,%esp
c0003e72:	eb fe                	jmp    c0003e72 <ioq_get_char+0x3f>
c0003e74:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e77:	83 ec 0c             	sub    $0xc,%esp
c0003e7a:	50                   	push   %eax
c0003e7b:	e8 59 f3 ff ff       	call   c00031d9 <acquire_lock>
c0003e80:	83 c4 10             	add    $0x10,%esp
c0003e83:	e8 c8 ee ff ff       	call   c0002d50 <running_thread>
c0003e88:	89 c2                	mov    %eax,%edx
c0003e8a:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e8d:	89 50 18             	mov    %edx,0x18(%eax)
c0003e90:	83 ec 0c             	sub    $0xc,%esp
c0003e93:	6a 02                	push   $0x2
c0003e95:	e8 59 f2 ff ff       	call   c00030f3 <thread_block>
c0003e9a:	83 c4 10             	add    $0x10,%esp
c0003e9d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ea0:	83 ec 0c             	sub    $0xc,%esp
c0003ea3:	50                   	push   %eax
c0003ea4:	e8 a1 f3 ff ff       	call   c000324a <release_lock>
c0003ea9:	83 c4 10             	add    $0x10,%esp
c0003eac:	83 ec 0c             	sub    $0xc,%esp
c0003eaf:	ff 75 08             	pushl  0x8(%ebp)
c0003eb2:	e8 74 fe ff ff       	call   c0003d2b <empty_ioqueue>
c0003eb7:	83 c4 10             	add    $0x10,%esp
c0003eba:	84 c0                	test   %al,%al
c0003ebc:	75 b6                	jne    c0003e74 <ioq_get_char+0x41>
c0003ebe:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ec1:	8b 40 14             	mov    0x14(%eax),%eax
c0003ec4:	85 c0                	test   %eax,%eax
c0003ec6:	74 1c                	je     c0003ee4 <ioq_get_char+0xb1>
c0003ec8:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ecb:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
c0003ed2:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ed5:	8b 40 14             	mov    0x14(%eax),%eax
c0003ed8:	83 ec 0c             	sub    $0xc,%esp
c0003edb:	50                   	push   %eax
c0003edc:	e8 59 f2 ff ff       	call   c000313a <thread_unblock>
c0003ee1:	83 c4 10             	add    $0x10,%esp
c0003ee4:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ee7:	8b 40 5c             	mov    0x5c(%eax),%eax
c0003eea:	8b 55 08             	mov    0x8(%ebp),%edx
c0003eed:	0f b6 44 02 1c       	movzbl 0x1c(%edx,%eax,1),%eax
c0003ef2:	88 45 f7             	mov    %al,-0x9(%ebp)
c0003ef5:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ef8:	8b 40 5c             	mov    0x5c(%eax),%eax
c0003efb:	83 ec 0c             	sub    $0xc,%esp
c0003efe:	50                   	push   %eax
c0003eff:	e8 e4 fd ff ff       	call   c0003ce8 <next_pos>
c0003f04:	83 c4 10             	add    $0x10,%esp
c0003f07:	89 c2                	mov    %eax,%edx
c0003f09:	8b 45 08             	mov    0x8(%ebp),%eax
c0003f0c:	89 50 5c             	mov    %edx,0x5c(%eax)
c0003f0f:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
c0003f13:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003f16:	c9                   	leave  
c0003f17:	c3                   	ret    

c0003f18 <update_tss_esp>:
c0003f18:	55                   	push   %ebp
c0003f19:	89 e5                	mov    %esp,%ebp
c0003f1b:	e8 89 e3 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003f20:	05 e0 30 00 00       	add    $0x30e0,%eax
c0003f25:	8b 55 08             	mov    0x8(%ebp),%edx
c0003f28:	81 c2 00 10 00 00    	add    $0x1000,%edx
c0003f2e:	89 90 24 03 00 00    	mov    %edx,0x324(%eax)
c0003f34:	90                   	nop
c0003f35:	5d                   	pop    %ebp
c0003f36:	c3                   	ret    

c0003f37 <make_gdt_desc>:
c0003f37:	55                   	push   %ebp
c0003f38:	89 e5                	mov    %esp,%ebp
c0003f3a:	83 ec 18             	sub    $0x18,%esp
c0003f3d:	e8 67 e3 ff ff       	call   c00022a9 <__x86.get_pc_thunk.ax>
c0003f42:	05 be 30 00 00       	add    $0x30be,%eax
c0003f47:	8b 55 14             	mov    0x14(%ebp),%edx
c0003f4a:	8b 45 18             	mov    0x18(%ebp),%eax
c0003f4d:	88 55 ec             	mov    %dl,-0x14(%ebp)
c0003f50:	88 45 e8             	mov    %al,-0x18(%ebp)
c0003f53:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003f56:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0003f59:	8b 45 10             	mov    0x10(%ebp),%eax
c0003f5c:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0003f60:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0003f63:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
c0003f67:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0003f6a:	c1 e8 10             	shr    $0x10,%eax
c0003f6d:	88 45 f8             	mov    %al,-0x8(%ebp)
c0003f70:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
c0003f74:	88 45 f9             	mov    %al,-0x7(%ebp)
c0003f77:	8b 45 10             	mov    0x10(%ebp),%eax
c0003f7a:	c1 e8 10             	shr    $0x10,%eax
c0003f7d:	83 e0 0f             	and    $0xf,%eax
c0003f80:	89 c2                	mov    %eax,%edx
c0003f82:	0f b6 45 e8          	movzbl -0x18(%ebp),%eax
c0003f86:	01 d0                	add    %edx,%eax
c0003f88:	88 45 fa             	mov    %al,-0x6(%ebp)
c0003f8b:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0003f8e:	c1 e8 18             	shr    $0x18,%eax
c0003f91:	88 45 fb             	mov    %al,-0x5(%ebp)
c0003f94:	8b 4d 08             	mov    0x8(%ebp),%ecx
c0003f97:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003f9a:	8b 55 f8             	mov    -0x8(%ebp),%edx
c0003f9d:	89 01                	mov    %eax,(%ecx)
c0003f9f:	89 51 04             	mov    %edx,0x4(%ecx)
c0003fa2:	8b 45 08             	mov    0x8(%ebp),%eax
c0003fa5:	c9                   	leave  
c0003fa6:	c2 04 00             	ret    $0x4

c0003fa9 <tss_init>:
c0003fa9:	55                   	push   %ebp
c0003faa:	89 e5                	mov    %esp,%ebp
c0003fac:	56                   	push   %esi
c0003fad:	53                   	push   %ebx
c0003fae:	83 ec 20             	sub    $0x20,%esp
c0003fb1:	e8 ac d5 ff ff       	call   c0001562 <__x86.get_pc_thunk.bx>
c0003fb6:	81 c3 4a 30 00 00    	add    $0x304a,%ebx
c0003fbc:	c7 45 f4 6c 00 00 00 	movl   $0x6c,-0xc(%ebp)
c0003fc3:	83 ec 04             	sub    $0x4,%esp
c0003fc6:	ff 75 f4             	pushl  -0xc(%ebp)
c0003fc9:	6a 00                	push   $0x0
c0003fcb:	8d 83 20 03 00 00    	lea    0x320(%ebx),%eax
c0003fd1:	50                   	push   %eax
c0003fd2:	e8 3c eb ff ff       	call   c0002b13 <memset>
c0003fd7:	83 c4 10             	add    $0x10,%esp
c0003fda:	c7 83 28 03 00 00 10 	movl   $0x10,0x328(%ebx)
c0003fe1:	00 00 00 
c0003fe4:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003fe7:	89 83 88 03 00 00    	mov    %eax,0x388(%ebx)
c0003fed:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003ff0:	8d 50 ff             	lea    -0x1(%eax),%edx
c0003ff3:	be 23 09 00 c0       	mov    $0xc0000923,%esi
c0003ff8:	8d 45 e0             	lea    -0x20(%ebp),%eax
c0003ffb:	83 ec 0c             	sub    $0xc,%esp
c0003ffe:	68 80 00 00 00       	push   $0x80
c0004003:	68 89 00 00 00       	push   $0x89
c0004008:	52                   	push   %edx
c0004009:	8d 93 20 03 00 00    	lea    0x320(%ebx),%edx
c000400f:	52                   	push   %edx
c0004010:	50                   	push   %eax
c0004011:	e8 21 ff ff ff       	call   c0003f37 <make_gdt_desc>
c0004016:	83 c4 1c             	add    $0x1c,%esp
c0004019:	8b 45 e0             	mov    -0x20(%ebp),%eax
c000401c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
c000401f:	89 06                	mov    %eax,(%esi)
c0004021:	89 56 04             	mov    %edx,0x4(%esi)
c0004024:	bb 2b 09 00 c0       	mov    $0xc000092b,%ebx
c0004029:	8d 45 e0             	lea    -0x20(%ebp),%eax
c000402c:	83 ec 0c             	sub    $0xc,%esp
c000402f:	68 c0 00 00 00       	push   $0xc0
c0004034:	68 f8 00 00 00       	push   $0xf8
c0004039:	68 ff ff 0f 00       	push   $0xfffff
c000403e:	6a 00                	push   $0x0
c0004040:	50                   	push   %eax
c0004041:	e8 f1 fe ff ff       	call   c0003f37 <make_gdt_desc>
c0004046:	83 c4 1c             	add    $0x1c,%esp
c0004049:	8b 45 e0             	mov    -0x20(%ebp),%eax
c000404c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
c000404f:	89 03                	mov    %eax,(%ebx)
c0004051:	89 53 04             	mov    %edx,0x4(%ebx)
c0004054:	bb 33 09 00 c0       	mov    $0xc0000933,%ebx
c0004059:	8d 45 e0             	lea    -0x20(%ebp),%eax
c000405c:	83 ec 0c             	sub    $0xc,%esp
c000405f:	68 c0 00 00 00       	push   $0xc0
c0004064:	68 f2 00 00 00       	push   $0xf2
c0004069:	68 ff ff 0f 00       	push   $0xfffff
c000406e:	6a 00                	push   $0x0
c0004070:	50                   	push   %eax
c0004071:	e8 c1 fe ff ff       	call   c0003f37 <make_gdt_desc>
c0004076:	83 c4 1c             	add    $0x1c,%esp
c0004079:	8b 45 e0             	mov    -0x20(%ebp),%eax
c000407c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
c000407f:	89 03                	mov    %eax,(%ebx)
c0004081:	89 53 04             	mov    %edx,0x4(%ebx)
c0004084:	c7 45 e8 37 00 03 09 	movl   $0x9030037,-0x18(%ebp)
c000408b:	c7 45 ec 00 c0 00 00 	movl   $0xc000,-0x14(%ebp)
c0004092:	0f 01 55 e8          	lgdtl  -0x18(%ebp)
c0004096:	b8 20 00 00 00       	mov    $0x20,%eax
c000409b:	0f 00 d8             	ltr    %ax
c000409e:	90                   	nop
c000409f:	8d 65 f8             	lea    -0x8(%ebp),%esp
c00040a2:	5b                   	pop    %ebx
c00040a3:	5e                   	pop    %esi
c00040a4:	5d                   	pop    %ebp
c00040a5:	c3                   	ret    
