
kernel：     檔案格式 elf32-i386


Disassembly of section .text:

c0001500 <main>:
c0001500:	8d 4c 24 04          	lea    0x4(%esp),%ecx
c0001504:	83 e4 f0             	and    $0xfffffff0,%esp
c0001507:	ff 71 fc             	pushl  -0x4(%ecx)
c000150a:	55                   	push   %ebp
c000150b:	89 e5                	mov    %esp,%ebp
c000150d:	53                   	push   %ebx
c000150e:	51                   	push   %ecx
c000150f:	e8 ed 00 00 00       	call   c0001601 <__x86.get_pc_thunk.bx>
c0001514:	81 c3 ec 5a 00 00    	add    $0x5aec,%ebx
c000151a:	e8 a2 00 00 00       	call   c00015c1 <initialize_all>
c000151f:	83 ec 0c             	sub    $0xc,%esp
c0001522:	8d 83 d0 d4 ff ff    	lea    -0x2b30(%ebx),%eax
c0001528:	50                   	push   %eax
c0001529:	e8 d6 01 00 00       	call   c0001704 <put_str>
c000152e:	83 c4 10             	add    $0x10,%esp
c0001531:	c7 c0 2c 76 00 c0    	mov    $0xc000762c,%eax
c0001537:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c000153d:	6a 14                	push   $0x14
c000153f:	6a 00                	push   $0x0
c0001541:	8d 83 77 a5 ff ff    	lea    -0x5a89(%ebx),%eax
c0001547:	50                   	push   %eax
c0001548:	8d 83 e1 d4 ff ff    	lea    -0x2b1f(%ebx),%eax
c000154e:	50                   	push   %eax
c000154f:	e8 42 1a 00 00       	call   c0002f96 <thread_start>
c0001554:	83 c4 10             	add    $0x10,%esp
c0001557:	83 ec 08             	sub    $0x8,%esp
c000155a:	8d 83 ea d4 ff ff    	lea    -0x2b16(%ebx),%eax
c0001560:	50                   	push   %eax
c0001561:	8d 83 9f a5 ff ff    	lea    -0x5a61(%ebx),%eax
c0001567:	50                   	push   %eax
c0001568:	e8 68 2e 00 00       	call   c00043d5 <process_execute>
c000156d:	83 c4 10             	add    $0x10,%esp
c0001570:	e8 6c 0d 00 00       	call   c00022e1 <intopen>
c0001575:	eb fe                	jmp    c0001575 <main+0x75>

c0001577 <k_thread>:
c0001577:	55                   	push   %ebp
c0001578:	89 e5                	mov    %esp,%ebp
c000157a:	53                   	push   %ebx
c000157b:	83 ec 04             	sub    $0x4,%esp
c000157e:	e8 7e 00 00 00       	call   c0001601 <__x86.get_pc_thunk.bx>
c0001583:	81 c3 7d 5a 00 00    	add    $0x5a7d,%ebx
c0001589:	c7 c0 2c 76 00 c0    	mov    $0xc000762c,%eax
c000158f:	8b 00                	mov    (%eax),%eax
c0001591:	83 ec 0c             	sub    $0xc,%esp
c0001594:	50                   	push   %eax
c0001595:	e8 e4 23 00 00       	call   c000397e <console_put_int>
c000159a:	83 c4 10             	add    $0x10,%esp
c000159d:	eb ea                	jmp    c0001589 <k_thread+0x12>

c000159f <p_thread>:
c000159f:	55                   	push   %ebp
c00015a0:	89 e5                	mov    %esp,%ebp
c00015a2:	e8 56 00 00 00       	call   c00015fd <__x86.get_pc_thunk.ax>
c00015a7:	05 59 5a 00 00       	add    $0x5a59,%eax
c00015ac:	c7 c2 2c 76 00 c0    	mov    $0xc000762c,%edx
c00015b2:	8b 12                	mov    (%edx),%edx
c00015b4:	8d 4a 01             	lea    0x1(%edx),%ecx
c00015b7:	c7 c2 2c 76 00 c0    	mov    $0xc000762c,%edx
c00015bd:	89 0a                	mov    %ecx,(%edx)
c00015bf:	eb eb                	jmp    c00015ac <p_thread+0xd>

c00015c1 <initialize_all>:
c00015c1:	55                   	push   %ebp
c00015c2:	89 e5                	mov    %esp,%ebp
c00015c4:	53                   	push   %ebx
c00015c5:	83 ec 04             	sub    $0x4,%esp
c00015c8:	e8 34 00 00 00       	call   c0001601 <__x86.get_pc_thunk.bx>
c00015cd:	81 c3 33 5a 00 00    	add    $0x5a33,%ebx
c00015d3:	e8 99 0c 00 00       	call   c0002271 <idt_init>
c00015d8:	e8 1a 0f 00 00       	call   c00024f7 <bitmap_init_all>
c00015dd:	e8 27 22 00 00       	call   c0003809 <timer_init>
c00015e2:	e8 aa 1b 00 00       	call   c0003191 <thread_init>
c00015e7:	e8 cb 22 00 00       	call   c00038b7 <console_init>
c00015ec:	e8 34 27 00 00       	call   c0003d25 <keyboard_init>
c00015f1:	e8 90 2a 00 00       	call   c0004086 <tss_init>
c00015f6:	90                   	nop
c00015f7:	83 c4 04             	add    $0x4,%esp
c00015fa:	5b                   	pop    %ebx
c00015fb:	5d                   	pop    %ebp
c00015fc:	c3                   	ret    

c00015fd <__x86.get_pc_thunk.ax>:
c00015fd:	8b 04 24             	mov    (%esp),%eax
c0001600:	c3                   	ret    

c0001601 <__x86.get_pc_thunk.bx>:
c0001601:	8b 1c 24             	mov    (%esp),%ebx
c0001604:	c3                   	ret    
c0001605:	66 90                	xchg   %ax,%ax
c0001607:	66 90                	xchg   %ax,%ax
c0001609:	66 90                	xchg   %ax,%ax
c000160b:	66 90                	xchg   %ax,%ax
c000160d:	66 90                	xchg   %ax,%ax
c000160f:	90                   	nop

c0001610 <put_char>:
c0001610:	60                   	pusha  
c0001611:	66 b8 18 00          	mov    $0x18,%ax
c0001615:	8e e8                	mov    %eax,%gs
c0001617:	66 ba d4 03          	mov    $0x3d4,%dx
c000161b:	b0 0e                	mov    $0xe,%al
c000161d:	ee                   	out    %al,(%dx)
c000161e:	66 ba d5 03          	mov    $0x3d5,%dx
c0001622:	ec                   	in     (%dx),%al
c0001623:	88 c4                	mov    %al,%ah
c0001625:	66 ba d4 03          	mov    $0x3d4,%dx
c0001629:	b0 0f                	mov    $0xf,%al
c000162b:	ee                   	out    %al,(%dx)
c000162c:	66 ba d5 03          	mov    $0x3d5,%dx
c0001630:	ec                   	in     (%dx),%al
c0001631:	66 89 c3             	mov    %ax,%bx
c0001634:	8a 44 24 24          	mov    0x24(%esp),%al
c0001638:	3c 0a                	cmp    $0xa,%al
c000163a:	74 0a                	je     c0001646 <put_char.is_enter>
c000163c:	3c 0d                	cmp    $0xd,%al
c000163e:	74 06                	je     c0001646 <put_char.is_enter>
c0001640:	3c 08                	cmp    $0x8,%al
c0001642:	74 18                	je     c000165c <put_char.is_backspace>
c0001644:	eb 34                	jmp    c000167a <put_char.normal_case>

c0001646 <put_char.is_enter>:
c0001646:	66 31 d2             	xor    %dx,%dx
c0001649:	66 89 d8             	mov    %bx,%ax
c000164c:	66 b9 50 00          	mov    $0x50,%cx
c0001650:	66 f7 f1             	div    %cx
c0001653:	66 29 d3             	sub    %dx,%bx
c0001656:	66 83 c3 50          	add    $0x50,%bx
c000165a:	eb 33                	jmp    c000168f <put_char.page_roll>

c000165c <put_char.is_backspace>:
c000165c:	66 83 fb 00          	cmp    $0x0,%bx
c0001660:	74 7f                	je     c00016e1 <put_char.putchar_end>
c0001662:	66 83 eb 01          	sub    $0x1,%bx
c0001666:	66 d1 e3             	shl    %bx
c0001669:	65 67 c6 07 00       	movb   $0x0,%gs:(%bx)
c000166e:	66 43                	inc    %bx
c0001670:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c0001675:	66 d1 eb             	shr    %bx
c0001678:	eb 15                	jmp    c000168f <put_char.page_roll>

c000167a <put_char.normal_case>:
c000167a:	66 d1 e3             	shl    %bx
c000167d:	65 67 88 07          	mov    %al,%gs:(%bx)
c0001681:	66 43                	inc    %bx
c0001683:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c0001688:	66 43                	inc    %bx
c000168a:	66 d1 eb             	shr    %bx
c000168d:	eb 00                	jmp    c000168f <put_char.page_roll>

c000168f <put_char.page_roll>:
c000168f:	66 81 fb d0 07       	cmp    $0x7d0,%bx
c0001694:	7c 2f                	jl     c00016c5 <put_char.reset_cursor>
c0001696:	fc                   	cld    
c0001697:	b9 c0 03 00 00       	mov    $0x3c0,%ecx
c000169c:	be a0 80 0b c0       	mov    $0xc00b80a0,%esi
c00016a1:	bf 00 80 0b c0       	mov    $0xc00b8000,%edi
c00016a6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
c00016a8:	b9 50 00 00 00       	mov    $0x50,%ecx
c00016ad:	66 bb 00 0f          	mov    $0xf00,%bx

c00016b1 <put_char.clr>:
c00016b1:	65 67 c6 07 07       	movb   $0x7,%gs:(%bx)
c00016b6:	66 43                	inc    %bx
c00016b8:	65 67 c6 07 20       	movb   $0x20,%gs:(%bx)
c00016bd:	66 43                	inc    %bx
c00016bf:	e2 f0                	loop   c00016b1 <put_char.clr>
c00016c1:	66 bb 80 07          	mov    $0x780,%bx

c00016c5 <put_char.reset_cursor>:
c00016c5:	66 ba d4 03          	mov    $0x3d4,%dx
c00016c9:	b0 0e                	mov    $0xe,%al
c00016cb:	ee                   	out    %al,(%dx)
c00016cc:	66 ba d5 03          	mov    $0x3d5,%dx
c00016d0:	88 f8                	mov    %bh,%al
c00016d2:	ee                   	out    %al,(%dx)
c00016d3:	66 ba d4 03          	mov    $0x3d4,%dx
c00016d7:	b0 0f                	mov    $0xf,%al
c00016d9:	ee                   	out    %al,(%dx)
c00016da:	66 ba d5 03          	mov    $0x3d5,%dx
c00016de:	88 d8                	mov    %bl,%al
c00016e0:	ee                   	out    %al,(%dx)

c00016e1 <put_char.putchar_end>:
c00016e1:	61                   	popa   
c00016e2:	c3                   	ret    

c00016e3 <set_cursor>:
c00016e3:	8b 5c 24 04          	mov    0x4(%esp),%ebx
c00016e7:	66 ba d4 03          	mov    $0x3d4,%dx
c00016eb:	b0 0e                	mov    $0xe,%al
c00016ed:	ee                   	out    %al,(%dx)
c00016ee:	66 ba d5 03          	mov    $0x3d5,%dx
c00016f2:	88 f8                	mov    %bh,%al
c00016f4:	ee                   	out    %al,(%dx)
c00016f5:	66 ba d4 03          	mov    $0x3d4,%dx
c00016f9:	b0 0f                	mov    $0xf,%al
c00016fb:	ee                   	out    %al,(%dx)
c00016fc:	66 ba d5 03          	mov    $0x3d5,%dx
c0001700:	88 d8                	mov    %bl,%al
c0001702:	ee                   	out    %al,(%dx)
c0001703:	c3                   	ret    

c0001704 <put_str>:
c0001704:	55                   	push   %ebp
c0001705:	89 e5                	mov    %esp,%ebp
c0001707:	53                   	push   %ebx
c0001708:	83 ec 14             	sub    $0x14,%esp
c000170b:	e8 f1 fe ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0001710:	81 c3 f0 58 00 00    	add    $0x58f0,%ebx
c0001716:	8b 45 08             	mov    0x8(%ebp),%eax
c0001719:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000171c:	eb 19                	jmp    c0001737 <put_str+0x33>
c000171e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0001721:	0f b6 00             	movzbl (%eax),%eax
c0001724:	0f b6 c0             	movzbl %al,%eax
c0001727:	83 ec 0c             	sub    $0xc,%esp
c000172a:	50                   	push   %eax
c000172b:	e8 e0 fe ff ff       	call   c0001610 <put_char>
c0001730:	83 c4 10             	add    $0x10,%esp
c0001733:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001737:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000173a:	0f b6 00             	movzbl (%eax),%eax
c000173d:	84 c0                	test   %al,%al
c000173f:	75 dd                	jne    c000171e <put_str+0x1a>
c0001741:	90                   	nop
c0001742:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001745:	c9                   	leave  
c0001746:	c3                   	ret    

c0001747 <put_int>:
c0001747:	55                   	push   %ebp
c0001748:	89 e5                	mov    %esp,%ebp
c000174a:	53                   	push   %ebx
c000174b:	83 ec 14             	sub    $0x14,%esp
c000174e:	e8 ae fe ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0001753:	81 c3 ad 58 00 00    	add    $0x58ad,%ebx
c0001759:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c000175d:	75 0d                	jne    c000176c <put_int+0x25>
c000175f:	83 ec 0c             	sub    $0xc,%esp
c0001762:	6a 30                	push   $0x30
c0001764:	e8 a7 fe ff ff       	call   c0001610 <put_char>
c0001769:	83 c4 10             	add    $0x10,%esp
c000176c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001773:	eb 44                	jmp    c00017b9 <put_int+0x72>
c0001775:	8b 45 08             	mov    0x8(%ebp),%eax
c0001778:	83 e0 0f             	and    $0xf,%eax
c000177b:	83 f8 09             	cmp    $0x9,%eax
c000177e:	76 17                	jbe    c0001797 <put_int+0x50>
c0001780:	8b 45 08             	mov    0x8(%ebp),%eax
c0001783:	83 e0 0f             	and    $0xf,%eax
c0001786:	8d 50 57             	lea    0x57(%eax),%edx
c0001789:	b8 07 00 00 00       	mov    $0x7,%eax
c000178e:	2b 45 f4             	sub    -0xc(%ebp),%eax
c0001791:	88 54 05 ec          	mov    %dl,-0x14(%ebp,%eax,1)
c0001795:	eb 15                	jmp    c00017ac <put_int+0x65>
c0001797:	8b 45 08             	mov    0x8(%ebp),%eax
c000179a:	83 e0 0f             	and    $0xf,%eax
c000179d:	8d 50 30             	lea    0x30(%eax),%edx
c00017a0:	b8 07 00 00 00       	mov    $0x7,%eax
c00017a5:	2b 45 f4             	sub    -0xc(%ebp),%eax
c00017a8:	88 54 05 ec          	mov    %dl,-0x14(%ebp,%eax,1)
c00017ac:	8b 45 08             	mov    0x8(%ebp),%eax
c00017af:	c1 e8 04             	shr    $0x4,%eax
c00017b2:	89 45 08             	mov    %eax,0x8(%ebp)
c00017b5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c00017b9:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)
c00017bd:	7e b6                	jle    c0001775 <put_int+0x2e>
c00017bf:	83 ec 0c             	sub    $0xc,%esp
c00017c2:	6a 30                	push   $0x30
c00017c4:	e8 47 fe ff ff       	call   c0001610 <put_char>
c00017c9:	83 c4 10             	add    $0x10,%esp
c00017cc:	83 ec 0c             	sub    $0xc,%esp
c00017cf:	6a 78                	push   $0x78
c00017d1:	e8 3a fe ff ff       	call   c0001610 <put_char>
c00017d6:	83 c4 10             	add    $0x10,%esp
c00017d9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c00017e0:	eb 1e                	jmp    c0001800 <put_int+0xb9>
c00017e2:	8d 55 ec             	lea    -0x14(%ebp),%edx
c00017e5:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00017e8:	01 d0                	add    %edx,%eax
c00017ea:	0f b6 00             	movzbl (%eax),%eax
c00017ed:	0f b6 c0             	movzbl %al,%eax
c00017f0:	83 ec 0c             	sub    $0xc,%esp
c00017f3:	50                   	push   %eax
c00017f4:	e8 17 fe ff ff       	call   c0001610 <put_char>
c00017f9:	83 c4 10             	add    $0x10,%esp
c00017fc:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001800:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)
c0001804:	7e dc                	jle    c00017e2 <put_int+0x9b>
c0001806:	90                   	nop
c0001807:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000180a:	c9                   	leave  
c000180b:	c3                   	ret    
c000180c:	66 90                	xchg   %ax,%ax
c000180e:	66 90                	xchg   %ax,%ax

c0001810 <intr0x0entry>:
c0001810:	6a 00                	push   $0x0
c0001812:	1e                   	push   %ds
c0001813:	06                   	push   %es
c0001814:	0f a0                	push   %fs
c0001816:	0f a8                	push   %gs
c0001818:	60                   	pusha  
c0001819:	b0 20                	mov    $0x20,%al
c000181b:	e6 a0                	out    %al,$0xa0
c000181d:	e6 20                	out    %al,$0x20
c000181f:	6a 00                	push   $0x0
c0001821:	ff 15 60 78 00 c0    	call   *0xc0007860
c0001827:	e9 f4 57 00 00       	jmp    c0007020 <intr_exit>

c000182c <intr1entry>:
c000182c:	6a 00                	push   $0x0
c000182e:	1e                   	push   %ds
c000182f:	06                   	push   %es
c0001830:	0f a0                	push   %fs
c0001832:	0f a8                	push   %gs
c0001834:	60                   	pusha  
c0001835:	b0 20                	mov    $0x20,%al
c0001837:	e6 a0                	out    %al,$0xa0
c0001839:	e6 20                	out    %al,$0x20
c000183b:	6a 01                	push   $0x1
c000183d:	ff 15 64 78 00 c0    	call   *0xc0007864
c0001843:	e9 d8 57 00 00       	jmp    c0007020 <intr_exit>

c0001848 <intr2entry>:
c0001848:	6a 00                	push   $0x0
c000184a:	1e                   	push   %ds
c000184b:	06                   	push   %es
c000184c:	0f a0                	push   %fs
c000184e:	0f a8                	push   %gs
c0001850:	60                   	pusha  
c0001851:	b0 20                	mov    $0x20,%al
c0001853:	e6 a0                	out    %al,$0xa0
c0001855:	e6 20                	out    %al,$0x20
c0001857:	6a 02                	push   $0x2
c0001859:	ff 15 68 78 00 c0    	call   *0xc0007868
c000185f:	e9 bc 57 00 00       	jmp    c0007020 <intr_exit>

c0001864 <intr3entry>:
c0001864:	6a 00                	push   $0x0
c0001866:	1e                   	push   %ds
c0001867:	06                   	push   %es
c0001868:	0f a0                	push   %fs
c000186a:	0f a8                	push   %gs
c000186c:	60                   	pusha  
c000186d:	b0 20                	mov    $0x20,%al
c000186f:	e6 a0                	out    %al,$0xa0
c0001871:	e6 20                	out    %al,$0x20
c0001873:	6a 03                	push   $0x3
c0001875:	ff 15 6c 78 00 c0    	call   *0xc000786c
c000187b:	e9 a0 57 00 00       	jmp    c0007020 <intr_exit>

c0001880 <intr4entry>:
c0001880:	6a 00                	push   $0x0
c0001882:	1e                   	push   %ds
c0001883:	06                   	push   %es
c0001884:	0f a0                	push   %fs
c0001886:	0f a8                	push   %gs
c0001888:	60                   	pusha  
c0001889:	b0 20                	mov    $0x20,%al
c000188b:	e6 a0                	out    %al,$0xa0
c000188d:	e6 20                	out    %al,$0x20
c000188f:	6a 04                	push   $0x4
c0001891:	ff 15 70 78 00 c0    	call   *0xc0007870
c0001897:	e9 84 57 00 00       	jmp    c0007020 <intr_exit>

c000189c <intr5entry>:
c000189c:	6a 00                	push   $0x0
c000189e:	1e                   	push   %ds
c000189f:	06                   	push   %es
c00018a0:	0f a0                	push   %fs
c00018a2:	0f a8                	push   %gs
c00018a4:	60                   	pusha  
c00018a5:	b0 20                	mov    $0x20,%al
c00018a7:	e6 a0                	out    %al,$0xa0
c00018a9:	e6 20                	out    %al,$0x20
c00018ab:	6a 05                	push   $0x5
c00018ad:	ff 15 74 78 00 c0    	call   *0xc0007874
c00018b3:	e9 68 57 00 00       	jmp    c0007020 <intr_exit>

c00018b8 <intr6entry>:
c00018b8:	6a 00                	push   $0x0
c00018ba:	1e                   	push   %ds
c00018bb:	06                   	push   %es
c00018bc:	0f a0                	push   %fs
c00018be:	0f a8                	push   %gs
c00018c0:	60                   	pusha  
c00018c1:	b0 20                	mov    $0x20,%al
c00018c3:	e6 a0                	out    %al,$0xa0
c00018c5:	e6 20                	out    %al,$0x20
c00018c7:	6a 06                	push   $0x6
c00018c9:	ff 15 78 78 00 c0    	call   *0xc0007878
c00018cf:	e9 4c 57 00 00       	jmp    c0007020 <intr_exit>

c00018d4 <intr7entry>:
c00018d4:	6a 00                	push   $0x0
c00018d6:	1e                   	push   %ds
c00018d7:	06                   	push   %es
c00018d8:	0f a0                	push   %fs
c00018da:	0f a8                	push   %gs
c00018dc:	60                   	pusha  
c00018dd:	b0 20                	mov    $0x20,%al
c00018df:	e6 a0                	out    %al,$0xa0
c00018e1:	e6 20                	out    %al,$0x20
c00018e3:	6a 07                	push   $0x7
c00018e5:	ff 15 7c 78 00 c0    	call   *0xc000787c
c00018eb:	e9 30 57 00 00       	jmp    c0007020 <intr_exit>

c00018f0 <intr8entry>:
c00018f0:	6a 00                	push   $0x0
c00018f2:	1e                   	push   %ds
c00018f3:	06                   	push   %es
c00018f4:	0f a0                	push   %fs
c00018f6:	0f a8                	push   %gs
c00018f8:	60                   	pusha  
c00018f9:	b0 20                	mov    $0x20,%al
c00018fb:	e6 a0                	out    %al,$0xa0
c00018fd:	e6 20                	out    %al,$0x20
c00018ff:	6a 08                	push   $0x8
c0001901:	ff 15 80 78 00 c0    	call   *0xc0007880
c0001907:	e9 14 57 00 00       	jmp    c0007020 <intr_exit>

c000190c <intr9entry>:
c000190c:	6a 00                	push   $0x0
c000190e:	1e                   	push   %ds
c000190f:	06                   	push   %es
c0001910:	0f a0                	push   %fs
c0001912:	0f a8                	push   %gs
c0001914:	60                   	pusha  
c0001915:	b0 20                	mov    $0x20,%al
c0001917:	e6 a0                	out    %al,$0xa0
c0001919:	e6 20                	out    %al,$0x20
c000191b:	6a 09                	push   $0x9
c000191d:	ff 15 84 78 00 c0    	call   *0xc0007884
c0001923:	e9 f8 56 00 00       	jmp    c0007020 <intr_exit>

c0001928 <intr10entry>:
c0001928:	6a 00                	push   $0x0
c000192a:	1e                   	push   %ds
c000192b:	06                   	push   %es
c000192c:	0f a0                	push   %fs
c000192e:	0f a8                	push   %gs
c0001930:	60                   	pusha  
c0001931:	b0 20                	mov    $0x20,%al
c0001933:	e6 a0                	out    %al,$0xa0
c0001935:	e6 20                	out    %al,$0x20
c0001937:	6a 0a                	push   $0xa
c0001939:	ff 15 88 78 00 c0    	call   *0xc0007888
c000193f:	e9 dc 56 00 00       	jmp    c0007020 <intr_exit>

c0001944 <intr11entry>:
c0001944:	6a 00                	push   $0x0
c0001946:	1e                   	push   %ds
c0001947:	06                   	push   %es
c0001948:	0f a0                	push   %fs
c000194a:	0f a8                	push   %gs
c000194c:	60                   	pusha  
c000194d:	b0 20                	mov    $0x20,%al
c000194f:	e6 a0                	out    %al,$0xa0
c0001951:	e6 20                	out    %al,$0x20
c0001953:	6a 0b                	push   $0xb
c0001955:	ff 15 8c 78 00 c0    	call   *0xc000788c
c000195b:	e9 c0 56 00 00       	jmp    c0007020 <intr_exit>

c0001960 <intr12entry>:
c0001960:	6a 00                	push   $0x0
c0001962:	1e                   	push   %ds
c0001963:	06                   	push   %es
c0001964:	0f a0                	push   %fs
c0001966:	0f a8                	push   %gs
c0001968:	60                   	pusha  
c0001969:	b0 20                	mov    $0x20,%al
c000196b:	e6 a0                	out    %al,$0xa0
c000196d:	e6 20                	out    %al,$0x20
c000196f:	6a 0c                	push   $0xc
c0001971:	ff 15 90 78 00 c0    	call   *0xc0007890
c0001977:	e9 a4 56 00 00       	jmp    c0007020 <intr_exit>

c000197c <intr13entry>:
c000197c:	6a 00                	push   $0x0
c000197e:	1e                   	push   %ds
c000197f:	06                   	push   %es
c0001980:	0f a0                	push   %fs
c0001982:	0f a8                	push   %gs
c0001984:	60                   	pusha  
c0001985:	b0 20                	mov    $0x20,%al
c0001987:	e6 a0                	out    %al,$0xa0
c0001989:	e6 20                	out    %al,$0x20
c000198b:	6a 0d                	push   $0xd
c000198d:	ff 15 94 78 00 c0    	call   *0xc0007894
c0001993:	e9 88 56 00 00       	jmp    c0007020 <intr_exit>

c0001998 <intr14entry>:
c0001998:	6a 00                	push   $0x0
c000199a:	1e                   	push   %ds
c000199b:	06                   	push   %es
c000199c:	0f a0                	push   %fs
c000199e:	0f a8                	push   %gs
c00019a0:	60                   	pusha  
c00019a1:	b0 20                	mov    $0x20,%al
c00019a3:	e6 a0                	out    %al,$0xa0
c00019a5:	e6 20                	out    %al,$0x20
c00019a7:	6a 0e                	push   $0xe
c00019a9:	ff 15 98 78 00 c0    	call   *0xc0007898
c00019af:	e9 6c 56 00 00       	jmp    c0007020 <intr_exit>

c00019b4 <intr15entry>:
c00019b4:	6a 00                	push   $0x0
c00019b6:	1e                   	push   %ds
c00019b7:	06                   	push   %es
c00019b8:	0f a0                	push   %fs
c00019ba:	0f a8                	push   %gs
c00019bc:	60                   	pusha  
c00019bd:	b0 20                	mov    $0x20,%al
c00019bf:	e6 a0                	out    %al,$0xa0
c00019c1:	e6 20                	out    %al,$0x20
c00019c3:	6a 0f                	push   $0xf
c00019c5:	ff 15 9c 78 00 c0    	call   *0xc000789c
c00019cb:	e9 50 56 00 00       	jmp    c0007020 <intr_exit>

c00019d0 <intr16entry>:
c00019d0:	6a 00                	push   $0x0
c00019d2:	1e                   	push   %ds
c00019d3:	06                   	push   %es
c00019d4:	0f a0                	push   %fs
c00019d6:	0f a8                	push   %gs
c00019d8:	60                   	pusha  
c00019d9:	b0 20                	mov    $0x20,%al
c00019db:	e6 a0                	out    %al,$0xa0
c00019dd:	e6 20                	out    %al,$0x20
c00019df:	6a 10                	push   $0x10
c00019e1:	ff 15 a0 78 00 c0    	call   *0xc00078a0
c00019e7:	e9 34 56 00 00       	jmp    c0007020 <intr_exit>

c00019ec <intr17entry>:
c00019ec:	6a 00                	push   $0x0
c00019ee:	1e                   	push   %ds
c00019ef:	06                   	push   %es
c00019f0:	0f a0                	push   %fs
c00019f2:	0f a8                	push   %gs
c00019f4:	60                   	pusha  
c00019f5:	b0 20                	mov    $0x20,%al
c00019f7:	e6 a0                	out    %al,$0xa0
c00019f9:	e6 20                	out    %al,$0x20
c00019fb:	6a 11                	push   $0x11
c00019fd:	ff 15 a4 78 00 c0    	call   *0xc00078a4
c0001a03:	e9 18 56 00 00       	jmp    c0007020 <intr_exit>

c0001a08 <intr18entry>:
c0001a08:	6a 00                	push   $0x0
c0001a0a:	1e                   	push   %ds
c0001a0b:	06                   	push   %es
c0001a0c:	0f a0                	push   %fs
c0001a0e:	0f a8                	push   %gs
c0001a10:	60                   	pusha  
c0001a11:	b0 20                	mov    $0x20,%al
c0001a13:	e6 a0                	out    %al,$0xa0
c0001a15:	e6 20                	out    %al,$0x20
c0001a17:	6a 12                	push   $0x12
c0001a19:	ff 15 a8 78 00 c0    	call   *0xc00078a8
c0001a1f:	e9 fc 55 00 00       	jmp    c0007020 <intr_exit>

c0001a24 <intr19entry>:
c0001a24:	6a 00                	push   $0x0
c0001a26:	1e                   	push   %ds
c0001a27:	06                   	push   %es
c0001a28:	0f a0                	push   %fs
c0001a2a:	0f a8                	push   %gs
c0001a2c:	60                   	pusha  
c0001a2d:	b0 20                	mov    $0x20,%al
c0001a2f:	e6 a0                	out    %al,$0xa0
c0001a31:	e6 20                	out    %al,$0x20
c0001a33:	6a 13                	push   $0x13
c0001a35:	ff 15 ac 78 00 c0    	call   *0xc00078ac
c0001a3b:	e9 e0 55 00 00       	jmp    c0007020 <intr_exit>

c0001a40 <intr20entry>:
c0001a40:	6a 00                	push   $0x0
c0001a42:	1e                   	push   %ds
c0001a43:	06                   	push   %es
c0001a44:	0f a0                	push   %fs
c0001a46:	0f a8                	push   %gs
c0001a48:	60                   	pusha  
c0001a49:	b0 20                	mov    $0x20,%al
c0001a4b:	e6 a0                	out    %al,$0xa0
c0001a4d:	e6 20                	out    %al,$0x20
c0001a4f:	6a 14                	push   $0x14
c0001a51:	ff 15 b0 78 00 c0    	call   *0xc00078b0
c0001a57:	e9 c4 55 00 00       	jmp    c0007020 <intr_exit>

c0001a5c <intr21entry>:
c0001a5c:	6a 00                	push   $0x0
c0001a5e:	1e                   	push   %ds
c0001a5f:	06                   	push   %es
c0001a60:	0f a0                	push   %fs
c0001a62:	0f a8                	push   %gs
c0001a64:	60                   	pusha  
c0001a65:	b0 20                	mov    $0x20,%al
c0001a67:	e6 a0                	out    %al,$0xa0
c0001a69:	e6 20                	out    %al,$0x20
c0001a6b:	6a 15                	push   $0x15
c0001a6d:	ff 15 b4 78 00 c0    	call   *0xc00078b4
c0001a73:	e9 a8 55 00 00       	jmp    c0007020 <intr_exit>

c0001a78 <intr22entry>:
c0001a78:	6a 00                	push   $0x0
c0001a7a:	1e                   	push   %ds
c0001a7b:	06                   	push   %es
c0001a7c:	0f a0                	push   %fs
c0001a7e:	0f a8                	push   %gs
c0001a80:	60                   	pusha  
c0001a81:	b0 20                	mov    $0x20,%al
c0001a83:	e6 a0                	out    %al,$0xa0
c0001a85:	e6 20                	out    %al,$0x20
c0001a87:	6a 16                	push   $0x16
c0001a89:	ff 15 b8 78 00 c0    	call   *0xc00078b8
c0001a8f:	e9 8c 55 00 00       	jmp    c0007020 <intr_exit>

c0001a94 <intr23entry>:
c0001a94:	6a 00                	push   $0x0
c0001a96:	1e                   	push   %ds
c0001a97:	06                   	push   %es
c0001a98:	0f a0                	push   %fs
c0001a9a:	0f a8                	push   %gs
c0001a9c:	60                   	pusha  
c0001a9d:	b0 20                	mov    $0x20,%al
c0001a9f:	e6 a0                	out    %al,$0xa0
c0001aa1:	e6 20                	out    %al,$0x20
c0001aa3:	6a 17                	push   $0x17
c0001aa5:	ff 15 bc 78 00 c0    	call   *0xc00078bc
c0001aab:	e9 70 55 00 00       	jmp    c0007020 <intr_exit>

c0001ab0 <intr24entry>:
c0001ab0:	6a 00                	push   $0x0
c0001ab2:	1e                   	push   %ds
c0001ab3:	06                   	push   %es
c0001ab4:	0f a0                	push   %fs
c0001ab6:	0f a8                	push   %gs
c0001ab8:	60                   	pusha  
c0001ab9:	b0 20                	mov    $0x20,%al
c0001abb:	e6 a0                	out    %al,$0xa0
c0001abd:	e6 20                	out    %al,$0x20
c0001abf:	6a 18                	push   $0x18
c0001ac1:	ff 15 c0 78 00 c0    	call   *0xc00078c0
c0001ac7:	e9 54 55 00 00       	jmp    c0007020 <intr_exit>

c0001acc <intr25entry>:
c0001acc:	6a 00                	push   $0x0
c0001ace:	1e                   	push   %ds
c0001acf:	06                   	push   %es
c0001ad0:	0f a0                	push   %fs
c0001ad2:	0f a8                	push   %gs
c0001ad4:	60                   	pusha  
c0001ad5:	b0 20                	mov    $0x20,%al
c0001ad7:	e6 a0                	out    %al,$0xa0
c0001ad9:	e6 20                	out    %al,$0x20
c0001adb:	6a 19                	push   $0x19
c0001add:	ff 15 c4 78 00 c0    	call   *0xc00078c4
c0001ae3:	e9 38 55 00 00       	jmp    c0007020 <intr_exit>

c0001ae8 <intr26entry>:
c0001ae8:	6a 00                	push   $0x0
c0001aea:	1e                   	push   %ds
c0001aeb:	06                   	push   %es
c0001aec:	0f a0                	push   %fs
c0001aee:	0f a8                	push   %gs
c0001af0:	60                   	pusha  
c0001af1:	b0 20                	mov    $0x20,%al
c0001af3:	e6 a0                	out    %al,$0xa0
c0001af5:	e6 20                	out    %al,$0x20
c0001af7:	6a 1a                	push   $0x1a
c0001af9:	ff 15 c8 78 00 c0    	call   *0xc00078c8
c0001aff:	e9 1c 55 00 00       	jmp    c0007020 <intr_exit>

c0001b04 <intr27entry>:
c0001b04:	6a 00                	push   $0x0
c0001b06:	1e                   	push   %ds
c0001b07:	06                   	push   %es
c0001b08:	0f a0                	push   %fs
c0001b0a:	0f a8                	push   %gs
c0001b0c:	60                   	pusha  
c0001b0d:	b0 20                	mov    $0x20,%al
c0001b0f:	e6 a0                	out    %al,$0xa0
c0001b11:	e6 20                	out    %al,$0x20
c0001b13:	6a 1b                	push   $0x1b
c0001b15:	ff 15 cc 78 00 c0    	call   *0xc00078cc
c0001b1b:	e9 00 55 00 00       	jmp    c0007020 <intr_exit>

c0001b20 <intr28entry>:
c0001b20:	6a 00                	push   $0x0
c0001b22:	1e                   	push   %ds
c0001b23:	06                   	push   %es
c0001b24:	0f a0                	push   %fs
c0001b26:	0f a8                	push   %gs
c0001b28:	60                   	pusha  
c0001b29:	b0 20                	mov    $0x20,%al
c0001b2b:	e6 a0                	out    %al,$0xa0
c0001b2d:	e6 20                	out    %al,$0x20
c0001b2f:	6a 1c                	push   $0x1c
c0001b31:	ff 15 d0 78 00 c0    	call   *0xc00078d0
c0001b37:	e9 e4 54 00 00       	jmp    c0007020 <intr_exit>

c0001b3c <intr29entry>:
c0001b3c:	6a 00                	push   $0x0
c0001b3e:	1e                   	push   %ds
c0001b3f:	06                   	push   %es
c0001b40:	0f a0                	push   %fs
c0001b42:	0f a8                	push   %gs
c0001b44:	60                   	pusha  
c0001b45:	b0 20                	mov    $0x20,%al
c0001b47:	e6 a0                	out    %al,$0xa0
c0001b49:	e6 20                	out    %al,$0x20
c0001b4b:	6a 1d                	push   $0x1d
c0001b4d:	ff 15 d4 78 00 c0    	call   *0xc00078d4
c0001b53:	e9 c8 54 00 00       	jmp    c0007020 <intr_exit>

c0001b58 <intr30entry>:
c0001b58:	6a 00                	push   $0x0
c0001b5a:	1e                   	push   %ds
c0001b5b:	06                   	push   %es
c0001b5c:	0f a0                	push   %fs
c0001b5e:	0f a8                	push   %gs
c0001b60:	60                   	pusha  
c0001b61:	b0 20                	mov    $0x20,%al
c0001b63:	e6 a0                	out    %al,$0xa0
c0001b65:	e6 20                	out    %al,$0x20
c0001b67:	6a 1e                	push   $0x1e
c0001b69:	ff 15 d8 78 00 c0    	call   *0xc00078d8
c0001b6f:	e9 ac 54 00 00       	jmp    c0007020 <intr_exit>

c0001b74 <intr31entry>:
c0001b74:	6a 00                	push   $0x0
c0001b76:	1e                   	push   %ds
c0001b77:	06                   	push   %es
c0001b78:	0f a0                	push   %fs
c0001b7a:	0f a8                	push   %gs
c0001b7c:	60                   	pusha  
c0001b7d:	b0 20                	mov    $0x20,%al
c0001b7f:	e6 a0                	out    %al,$0xa0
c0001b81:	e6 20                	out    %al,$0x20
c0001b83:	6a 1f                	push   $0x1f
c0001b85:	ff 15 dc 78 00 c0    	call   *0xc00078dc
c0001b8b:	e9 90 54 00 00       	jmp    c0007020 <intr_exit>

c0001b90 <intr32entry>:
c0001b90:	6a 00                	push   $0x0
c0001b92:	1e                   	push   %ds
c0001b93:	06                   	push   %es
c0001b94:	0f a0                	push   %fs
c0001b96:	0f a8                	push   %gs
c0001b98:	60                   	pusha  
c0001b99:	b0 20                	mov    $0x20,%al
c0001b9b:	e6 a0                	out    %al,$0xa0
c0001b9d:	e6 20                	out    %al,$0x20
c0001b9f:	6a 20                	push   $0x20
c0001ba1:	ff 15 e0 78 00 c0    	call   *0xc00078e0
c0001ba7:	e9 74 54 00 00       	jmp    c0007020 <intr_exit>

c0001bac <intr33entry>:
c0001bac:	6a 00                	push   $0x0
c0001bae:	1e                   	push   %ds
c0001baf:	06                   	push   %es
c0001bb0:	0f a0                	push   %fs
c0001bb2:	0f a8                	push   %gs
c0001bb4:	60                   	pusha  
c0001bb5:	b0 20                	mov    $0x20,%al
c0001bb7:	e6 a0                	out    %al,$0xa0
c0001bb9:	e6 20                	out    %al,$0x20
c0001bbb:	6a 21                	push   $0x21
c0001bbd:	ff 15 e4 78 00 c0    	call   *0xc00078e4
c0001bc3:	e9 58 54 00 00       	jmp    c0007020 <intr_exit>

c0001bc8 <intr34entry>:
c0001bc8:	6a 00                	push   $0x0
c0001bca:	1e                   	push   %ds
c0001bcb:	06                   	push   %es
c0001bcc:	0f a0                	push   %fs
c0001bce:	0f a8                	push   %gs
c0001bd0:	60                   	pusha  
c0001bd1:	b0 20                	mov    $0x20,%al
c0001bd3:	e6 a0                	out    %al,$0xa0
c0001bd5:	e6 20                	out    %al,$0x20
c0001bd7:	6a 22                	push   $0x22
c0001bd9:	ff 15 e8 78 00 c0    	call   *0xc00078e8
c0001bdf:	e9 3c 54 00 00       	jmp    c0007020 <intr_exit>

c0001be4 <intr35entry>:
c0001be4:	6a 00                	push   $0x0
c0001be6:	1e                   	push   %ds
c0001be7:	06                   	push   %es
c0001be8:	0f a0                	push   %fs
c0001bea:	0f a8                	push   %gs
c0001bec:	60                   	pusha  
c0001bed:	b0 20                	mov    $0x20,%al
c0001bef:	e6 a0                	out    %al,$0xa0
c0001bf1:	e6 20                	out    %al,$0x20
c0001bf3:	6a 23                	push   $0x23
c0001bf5:	ff 15 ec 78 00 c0    	call   *0xc00078ec
c0001bfb:	e9 20 54 00 00       	jmp    c0007020 <intr_exit>

c0001c00 <intr36entry>:
c0001c00:	6a 00                	push   $0x0
c0001c02:	1e                   	push   %ds
c0001c03:	06                   	push   %es
c0001c04:	0f a0                	push   %fs
c0001c06:	0f a8                	push   %gs
c0001c08:	60                   	pusha  
c0001c09:	b0 20                	mov    $0x20,%al
c0001c0b:	e6 a0                	out    %al,$0xa0
c0001c0d:	e6 20                	out    %al,$0x20
c0001c0f:	6a 24                	push   $0x24
c0001c11:	ff 15 f0 78 00 c0    	call   *0xc00078f0
c0001c17:	e9 04 54 00 00       	jmp    c0007020 <intr_exit>

c0001c1c <intr37entry>:
c0001c1c:	6a 00                	push   $0x0
c0001c1e:	1e                   	push   %ds
c0001c1f:	06                   	push   %es
c0001c20:	0f a0                	push   %fs
c0001c22:	0f a8                	push   %gs
c0001c24:	60                   	pusha  
c0001c25:	b0 20                	mov    $0x20,%al
c0001c27:	e6 a0                	out    %al,$0xa0
c0001c29:	e6 20                	out    %al,$0x20
c0001c2b:	6a 25                	push   $0x25
c0001c2d:	ff 15 f4 78 00 c0    	call   *0xc00078f4
c0001c33:	e9 e8 53 00 00       	jmp    c0007020 <intr_exit>

c0001c38 <intr38entry>:
c0001c38:	6a 00                	push   $0x0
c0001c3a:	1e                   	push   %ds
c0001c3b:	06                   	push   %es
c0001c3c:	0f a0                	push   %fs
c0001c3e:	0f a8                	push   %gs
c0001c40:	60                   	pusha  
c0001c41:	b0 20                	mov    $0x20,%al
c0001c43:	e6 a0                	out    %al,$0xa0
c0001c45:	e6 20                	out    %al,$0x20
c0001c47:	6a 26                	push   $0x26
c0001c49:	ff 15 f8 78 00 c0    	call   *0xc00078f8
c0001c4f:	e9 cc 53 00 00       	jmp    c0007020 <intr_exit>

c0001c54 <intr39entry>:
c0001c54:	6a 00                	push   $0x0
c0001c56:	1e                   	push   %ds
c0001c57:	06                   	push   %es
c0001c58:	0f a0                	push   %fs
c0001c5a:	0f a8                	push   %gs
c0001c5c:	60                   	pusha  
c0001c5d:	b0 20                	mov    $0x20,%al
c0001c5f:	e6 a0                	out    %al,$0xa0
c0001c61:	e6 20                	out    %al,$0x20
c0001c63:	6a 27                	push   $0x27
c0001c65:	ff 15 fc 78 00 c0    	call   *0xc00078fc
c0001c6b:	e9 b0 53 00 00       	jmp    c0007020 <intr_exit>

c0001c70 <intr40entry>:
c0001c70:	6a 00                	push   $0x0
c0001c72:	1e                   	push   %ds
c0001c73:	06                   	push   %es
c0001c74:	0f a0                	push   %fs
c0001c76:	0f a8                	push   %gs
c0001c78:	60                   	pusha  
c0001c79:	b0 20                	mov    $0x20,%al
c0001c7b:	e6 a0                	out    %al,$0xa0
c0001c7d:	e6 20                	out    %al,$0x20
c0001c7f:	6a 28                	push   $0x28
c0001c81:	ff 15 00 79 00 c0    	call   *0xc0007900
c0001c87:	e9 94 53 00 00       	jmp    c0007020 <intr_exit>

c0001c8c <intr41entry>:
c0001c8c:	6a 00                	push   $0x0
c0001c8e:	1e                   	push   %ds
c0001c8f:	06                   	push   %es
c0001c90:	0f a0                	push   %fs
c0001c92:	0f a8                	push   %gs
c0001c94:	60                   	pusha  
c0001c95:	b0 20                	mov    $0x20,%al
c0001c97:	e6 a0                	out    %al,$0xa0
c0001c99:	e6 20                	out    %al,$0x20
c0001c9b:	6a 29                	push   $0x29
c0001c9d:	ff 15 04 79 00 c0    	call   *0xc0007904
c0001ca3:	e9 78 53 00 00       	jmp    c0007020 <intr_exit>

c0001ca8 <intr42entry>:
c0001ca8:	6a 00                	push   $0x0
c0001caa:	1e                   	push   %ds
c0001cab:	06                   	push   %es
c0001cac:	0f a0                	push   %fs
c0001cae:	0f a8                	push   %gs
c0001cb0:	60                   	pusha  
c0001cb1:	b0 20                	mov    $0x20,%al
c0001cb3:	e6 a0                	out    %al,$0xa0
c0001cb5:	e6 20                	out    %al,$0x20
c0001cb7:	6a 2a                	push   $0x2a
c0001cb9:	ff 15 08 79 00 c0    	call   *0xc0007908
c0001cbf:	e9 5c 53 00 00       	jmp    c0007020 <intr_exit>

c0001cc4 <intr43entry>:
c0001cc4:	6a 00                	push   $0x0
c0001cc6:	1e                   	push   %ds
c0001cc7:	06                   	push   %es
c0001cc8:	0f a0                	push   %fs
c0001cca:	0f a8                	push   %gs
c0001ccc:	60                   	pusha  
c0001ccd:	b0 20                	mov    $0x20,%al
c0001ccf:	e6 a0                	out    %al,$0xa0
c0001cd1:	e6 20                	out    %al,$0x20
c0001cd3:	6a 2b                	push   $0x2b
c0001cd5:	ff 15 0c 79 00 c0    	call   *0xc000790c
c0001cdb:	e9 40 53 00 00       	jmp    c0007020 <intr_exit>

c0001ce0 <intr44entry>:
c0001ce0:	6a 00                	push   $0x0
c0001ce2:	1e                   	push   %ds
c0001ce3:	06                   	push   %es
c0001ce4:	0f a0                	push   %fs
c0001ce6:	0f a8                	push   %gs
c0001ce8:	60                   	pusha  
c0001ce9:	b0 20                	mov    $0x20,%al
c0001ceb:	e6 a0                	out    %al,$0xa0
c0001ced:	e6 20                	out    %al,$0x20
c0001cef:	6a 2c                	push   $0x2c
c0001cf1:	ff 15 10 79 00 c0    	call   *0xc0007910
c0001cf7:	e9 24 53 00 00       	jmp    c0007020 <intr_exit>

c0001cfc <intr45entry>:
c0001cfc:	6a 00                	push   $0x0
c0001cfe:	1e                   	push   %ds
c0001cff:	06                   	push   %es
c0001d00:	0f a0                	push   %fs
c0001d02:	0f a8                	push   %gs
c0001d04:	60                   	pusha  
c0001d05:	b0 20                	mov    $0x20,%al
c0001d07:	e6 a0                	out    %al,$0xa0
c0001d09:	e6 20                	out    %al,$0x20
c0001d0b:	6a 2d                	push   $0x2d
c0001d0d:	ff 15 14 79 00 c0    	call   *0xc0007914
c0001d13:	e9 08 53 00 00       	jmp    c0007020 <intr_exit>

c0001d18 <intr46entry>:
c0001d18:	6a 00                	push   $0x0
c0001d1a:	1e                   	push   %ds
c0001d1b:	06                   	push   %es
c0001d1c:	0f a0                	push   %fs
c0001d1e:	0f a8                	push   %gs
c0001d20:	60                   	pusha  
c0001d21:	b0 20                	mov    $0x20,%al
c0001d23:	e6 a0                	out    %al,$0xa0
c0001d25:	e6 20                	out    %al,$0x20
c0001d27:	6a 2e                	push   $0x2e
c0001d29:	ff 15 18 79 00 c0    	call   *0xc0007918
c0001d2f:	e9 ec 52 00 00       	jmp    c0007020 <intr_exit>

c0001d34 <intr47entry>:
c0001d34:	6a 00                	push   $0x0
c0001d36:	1e                   	push   %ds
c0001d37:	06                   	push   %es
c0001d38:	0f a0                	push   %fs
c0001d3a:	0f a8                	push   %gs
c0001d3c:	60                   	pusha  
c0001d3d:	b0 20                	mov    $0x20,%al
c0001d3f:	e6 a0                	out    %al,$0xa0
c0001d41:	e6 20                	out    %al,$0x20
c0001d43:	6a 2f                	push   $0x2f
c0001d45:	ff 15 1c 79 00 c0    	call   *0xc000791c
c0001d4b:	e9 d0 52 00 00       	jmp    c0007020 <intr_exit>

c0001d50 <intr48entry>:
c0001d50:	6a 00                	push   $0x0
c0001d52:	1e                   	push   %ds
c0001d53:	06                   	push   %es
c0001d54:	0f a0                	push   %fs
c0001d56:	0f a8                	push   %gs
c0001d58:	60                   	pusha  
c0001d59:	b0 20                	mov    $0x20,%al
c0001d5b:	e6 a0                	out    %al,$0xa0
c0001d5d:	e6 20                	out    %al,$0x20
c0001d5f:	6a 30                	push   $0x30
c0001d61:	ff 15 20 79 00 c0    	call   *0xc0007920
c0001d67:	e9 b4 52 00 00       	jmp    c0007020 <intr_exit>

c0001d6c <syscall_handler>:
c0001d6c:	6a 00                	push   $0x0
c0001d6e:	1e                   	push   %ds
c0001d6f:	06                   	push   %es
c0001d70:	0f a0                	push   %fs
c0001d72:	0f a8                	push   %gs
c0001d74:	60                   	pusha  
c0001d75:	68 80 00 00 00       	push   $0x80
c0001d7a:	50                   	push   %eax
c0001d7b:	51                   	push   %ecx
c0001d7c:	53                   	push   %ebx
c0001d7d:	ff 14 85 e0 7b 00 c0 	call   *-0x3fff8420(,%eax,4)
c0001d84:	89 44 24 20          	mov    %eax,0x20(%esp)
c0001d88:	e9 93 52 00 00       	jmp    c0007020 <intr_exit>

c0001d8d <outb>:
c0001d8d:	55                   	push   %ebp
c0001d8e:	89 e5                	mov    %esp,%ebp
c0001d90:	83 ec 08             	sub    $0x8,%esp
c0001d93:	e8 65 f8 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0001d98:	05 68 52 00 00       	add    $0x5268,%eax
c0001d9d:	8b 55 08             	mov    0x8(%ebp),%edx
c0001da0:	8b 45 0c             	mov    0xc(%ebp),%eax
c0001da3:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c0001da7:	88 45 f8             	mov    %al,-0x8(%ebp)
c0001daa:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c0001dae:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c0001db2:	ee                   	out    %al,(%dx)
c0001db3:	90                   	nop
c0001db4:	c9                   	leave  
c0001db5:	c3                   	ret    

c0001db6 <outsw>:
c0001db6:	55                   	push   %ebp
c0001db7:	89 e5                	mov    %esp,%ebp
c0001db9:	56                   	push   %esi
c0001dba:	53                   	push   %ebx
c0001dbb:	83 ec 04             	sub    $0x4,%esp
c0001dbe:	e8 3a f8 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0001dc3:	05 3d 52 00 00       	add    $0x523d,%eax
c0001dc8:	8b 45 08             	mov    0x8(%ebp),%eax
c0001dcb:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0001dcf:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0001dd3:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0001dd6:	8b 45 10             	mov    0x10(%ebp),%eax
c0001dd9:	89 cb                	mov    %ecx,%ebx
c0001ddb:	89 de                	mov    %ebx,%esi
c0001ddd:	89 c1                	mov    %eax,%ecx
c0001ddf:	fc                   	cld    
c0001de0:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c0001de3:	89 c8                	mov    %ecx,%eax
c0001de5:	89 f3                	mov    %esi,%ebx
c0001de7:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0001dea:	89 45 10             	mov    %eax,0x10(%ebp)
c0001ded:	90                   	nop
c0001dee:	83 c4 04             	add    $0x4,%esp
c0001df1:	5b                   	pop    %ebx
c0001df2:	5e                   	pop    %esi
c0001df3:	5d                   	pop    %ebp
c0001df4:	c3                   	ret    

c0001df5 <inb>:
c0001df5:	55                   	push   %ebp
c0001df6:	89 e5                	mov    %esp,%ebp
c0001df8:	83 ec 14             	sub    $0x14,%esp
c0001dfb:	e8 fd f7 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0001e00:	05 00 52 00 00       	add    $0x5200,%eax
c0001e05:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e08:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0001e0c:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c0001e10:	89 c2                	mov    %eax,%edx
c0001e12:	ec                   	in     (%dx),%al
c0001e13:	88 45 ff             	mov    %al,-0x1(%ebp)
c0001e16:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c0001e1a:	c9                   	leave  
c0001e1b:	c3                   	ret    

c0001e1c <insw>:
c0001e1c:	55                   	push   %ebp
c0001e1d:	89 e5                	mov    %esp,%ebp
c0001e1f:	57                   	push   %edi
c0001e20:	53                   	push   %ebx
c0001e21:	83 ec 04             	sub    $0x4,%esp
c0001e24:	e8 d4 f7 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0001e29:	05 d7 51 00 00       	add    $0x51d7,%eax
c0001e2e:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e31:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0001e35:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0001e39:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0001e3c:	8b 45 10             	mov    0x10(%ebp),%eax
c0001e3f:	89 cb                	mov    %ecx,%ebx
c0001e41:	89 df                	mov    %ebx,%edi
c0001e43:	89 c1                	mov    %eax,%ecx
c0001e45:	fc                   	cld    
c0001e46:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0001e49:	89 c8                	mov    %ecx,%eax
c0001e4b:	89 fb                	mov    %edi,%ebx
c0001e4d:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0001e50:	89 45 10             	mov    %eax,0x10(%ebp)
c0001e53:	90                   	nop
c0001e54:	83 c4 04             	add    $0x4,%esp
c0001e57:	5b                   	pop    %ebx
c0001e58:	5f                   	pop    %edi
c0001e59:	5d                   	pop    %ebp
c0001e5a:	c3                   	ret    

c0001e5b <make_idt_desc>:
c0001e5b:	55                   	push   %ebp
c0001e5c:	89 e5                	mov    %esp,%ebp
c0001e5e:	83 ec 04             	sub    $0x4,%esp
c0001e61:	e8 97 f7 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0001e66:	05 9a 51 00 00       	add    $0x519a,%eax
c0001e6b:	8b 45 0c             	mov    0xc(%ebp),%eax
c0001e6e:	88 45 fc             	mov    %al,-0x4(%ebp)
c0001e71:	8b 45 10             	mov    0x10(%ebp),%eax
c0001e74:	89 c2                	mov    %eax,%edx
c0001e76:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e79:	66 89 10             	mov    %dx,(%eax)
c0001e7c:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e7f:	66 c7 40 02 08 00    	movw   $0x8,0x2(%eax)
c0001e85:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e88:	c6 40 04 00          	movb   $0x0,0x4(%eax)
c0001e8c:	8b 45 08             	mov    0x8(%ebp),%eax
c0001e8f:	0f b6 55 fc          	movzbl -0x4(%ebp),%edx
c0001e93:	88 50 05             	mov    %dl,0x5(%eax)
c0001e96:	8b 45 10             	mov    0x10(%ebp),%eax
c0001e99:	c1 e8 10             	shr    $0x10,%eax
c0001e9c:	89 c2                	mov    %eax,%edx
c0001e9e:	8b 45 08             	mov    0x8(%ebp),%eax
c0001ea1:	66 89 50 06          	mov    %dx,0x6(%eax)
c0001ea5:	90                   	nop
c0001ea6:	c9                   	leave  
c0001ea7:	c3                   	ret    

c0001ea8 <idt_desc_init>:
c0001ea8:	55                   	push   %ebp
c0001ea9:	89 e5                	mov    %esp,%ebp
c0001eab:	53                   	push   %ebx
c0001eac:	83 ec 14             	sub    $0x14,%esp
c0001eaf:	e8 4d f7 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0001eb4:	81 c3 4c 51 00 00    	add    $0x514c,%ebx
c0001eba:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0001ec1:	eb 31                	jmp    c0001ef4 <idt_desc_init+0x4c>
c0001ec3:	c7 c0 2e 70 00 c0    	mov    $0xc000702e,%eax
c0001ec9:	8b 55 f4             	mov    -0xc(%ebp),%edx
c0001ecc:	8b 04 90             	mov    (%eax,%edx,4),%eax
c0001ecf:	8b 55 f4             	mov    -0xc(%ebp),%edx
c0001ed2:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
c0001ed9:	8d 93 80 01 00 00    	lea    0x180(%ebx),%edx
c0001edf:	01 ca                	add    %ecx,%edx
c0001ee1:	50                   	push   %eax
c0001ee2:	68 8e 00 00 00       	push   $0x8e
c0001ee7:	52                   	push   %edx
c0001ee8:	e8 6e ff ff ff       	call   c0001e5b <make_idt_desc>
c0001eed:	83 c4 0c             	add    $0xc,%esp
c0001ef0:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0001ef4:	81 7d f4 80 00 00 00 	cmpl   $0x80,-0xc(%ebp)
c0001efb:	7e c6                	jle    c0001ec3 <idt_desc_init+0x1b>
c0001efd:	c7 c0 6c 1d 00 c0    	mov    $0xc0001d6c,%eax
c0001f03:	50                   	push   %eax
c0001f04:	68 ee 00 00 00       	push   $0xee
c0001f09:	8d 83 80 05 00 00    	lea    0x580(%ebx),%eax
c0001f0f:	50                   	push   %eax
c0001f10:	e8 46 ff ff ff       	call   c0001e5b <make_idt_desc>
c0001f15:	83 c4 0c             	add    $0xc,%esp
c0001f18:	83 ec 0c             	sub    $0xc,%esp
c0001f1b:	8d 83 f4 d4 ff ff    	lea    -0x2b0c(%ebx),%eax
c0001f21:	50                   	push   %eax
c0001f22:	e8 dd f7 ff ff       	call   c0001704 <put_str>
c0001f27:	83 c4 10             	add    $0x10,%esp
c0001f2a:	90                   	nop
c0001f2b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001f2e:	c9                   	leave  
c0001f2f:	c3                   	ret    

c0001f30 <pic_init>:
c0001f30:	55                   	push   %ebp
c0001f31:	89 e5                	mov    %esp,%ebp
c0001f33:	53                   	push   %ebx
c0001f34:	83 ec 04             	sub    $0x4,%esp
c0001f37:	e8 c5 f6 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0001f3c:	81 c3 c4 50 00 00    	add    $0x50c4,%ebx
c0001f42:	6a 11                	push   $0x11
c0001f44:	6a 20                	push   $0x20
c0001f46:	e8 42 fe ff ff       	call   c0001d8d <outb>
c0001f4b:	83 c4 08             	add    $0x8,%esp
c0001f4e:	6a 20                	push   $0x20
c0001f50:	6a 21                	push   $0x21
c0001f52:	e8 36 fe ff ff       	call   c0001d8d <outb>
c0001f57:	83 c4 08             	add    $0x8,%esp
c0001f5a:	6a 04                	push   $0x4
c0001f5c:	6a 21                	push   $0x21
c0001f5e:	e8 2a fe ff ff       	call   c0001d8d <outb>
c0001f63:	83 c4 08             	add    $0x8,%esp
c0001f66:	6a 01                	push   $0x1
c0001f68:	6a 21                	push   $0x21
c0001f6a:	e8 1e fe ff ff       	call   c0001d8d <outb>
c0001f6f:	83 c4 08             	add    $0x8,%esp
c0001f72:	6a 11                	push   $0x11
c0001f74:	68 a0 00 00 00       	push   $0xa0
c0001f79:	e8 0f fe ff ff       	call   c0001d8d <outb>
c0001f7e:	83 c4 08             	add    $0x8,%esp
c0001f81:	6a 28                	push   $0x28
c0001f83:	68 a1 00 00 00       	push   $0xa1
c0001f88:	e8 00 fe ff ff       	call   c0001d8d <outb>
c0001f8d:	83 c4 08             	add    $0x8,%esp
c0001f90:	6a 02                	push   $0x2
c0001f92:	68 a1 00 00 00       	push   $0xa1
c0001f97:	e8 f1 fd ff ff       	call   c0001d8d <outb>
c0001f9c:	83 c4 08             	add    $0x8,%esp
c0001f9f:	6a 01                	push   $0x1
c0001fa1:	68 a1 00 00 00       	push   $0xa1
c0001fa6:	e8 e2 fd ff ff       	call   c0001d8d <outb>
c0001fab:	83 c4 08             	add    $0x8,%esp
c0001fae:	68 fc 00 00 00       	push   $0xfc
c0001fb3:	6a 21                	push   $0x21
c0001fb5:	e8 d3 fd ff ff       	call   c0001d8d <outb>
c0001fba:	83 c4 08             	add    $0x8,%esp
c0001fbd:	68 ff 00 00 00       	push   $0xff
c0001fc2:	68 a1 00 00 00       	push   $0xa1
c0001fc7:	e8 c1 fd ff ff       	call   c0001d8d <outb>
c0001fcc:	83 c4 08             	add    $0x8,%esp
c0001fcf:	83 ec 0c             	sub    $0xc,%esp
c0001fd2:	8d 83 0c d5 ff ff    	lea    -0x2af4(%ebx),%eax
c0001fd8:	50                   	push   %eax
c0001fd9:	e8 26 f7 ff ff       	call   c0001704 <put_str>
c0001fde:	83 c4 10             	add    $0x10,%esp
c0001fe1:	90                   	nop
c0001fe2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0001fe5:	c9                   	leave  
c0001fe6:	c3                   	ret    

c0001fe7 <general>:
c0001fe7:	55                   	push   %ebp
c0001fe8:	89 e5                	mov    %esp,%ebp
c0001fea:	53                   	push   %ebx
c0001feb:	83 ec 14             	sub    $0x14,%esp
c0001fee:	e8 0e f6 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0001ff3:	81 c3 0d 50 00 00    	add    $0x500d,%ebx
c0001ff9:	83 7d 08 27          	cmpl   $0x27,0x8(%ebp)
c0001ffd:	0f 84 d5 00 00 00    	je     c00020d8 <general+0xf1>
c0002003:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)
c0002007:	0f 84 cb 00 00 00    	je     c00020d8 <general+0xf1>
c000200d:	83 ec 0c             	sub    $0xc,%esp
c0002010:	6a 00                	push   $0x0
c0002012:	e8 cc f6 ff ff       	call   c00016e3 <set_cursor>
c0002017:	83 c4 10             	add    $0x10,%esp
c000201a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0002021:	eb 11                	jmp    c0002034 <general+0x4d>
c0002023:	83 ec 0c             	sub    $0xc,%esp
c0002026:	6a 20                	push   $0x20
c0002028:	e8 e3 f5 ff ff       	call   c0001610 <put_char>
c000202d:	83 c4 10             	add    $0x10,%esp
c0002030:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0002034:	81 7d f4 3f 01 00 00 	cmpl   $0x13f,-0xc(%ebp)
c000203b:	7e e6                	jle    c0002023 <general+0x3c>
c000203d:	83 ec 0c             	sub    $0xc,%esp
c0002040:	6a 00                	push   $0x0
c0002042:	e8 9c f6 ff ff       	call   c00016e3 <set_cursor>
c0002047:	83 c4 10             	add    $0x10,%esp
c000204a:	83 ec 0c             	sub    $0xc,%esp
c000204d:	8d 83 24 d5 ff ff    	lea    -0x2adc(%ebx),%eax
c0002053:	50                   	push   %eax
c0002054:	e8 ab f6 ff ff       	call   c0001704 <put_str>
c0002059:	83 c4 10             	add    $0x10,%esp
c000205c:	83 ec 0c             	sub    $0xc,%esp
c000205f:	6a 58                	push   $0x58
c0002061:	e8 7d f6 ff ff       	call   c00016e3 <set_cursor>
c0002066:	83 c4 10             	add    $0x10,%esp
c0002069:	c7 c0 40 76 00 c0    	mov    $0xc0007640,%eax
c000206f:	8b 55 08             	mov    0x8(%ebp),%edx
c0002072:	8b 04 90             	mov    (%eax,%edx,4),%eax
c0002075:	83 ec 0c             	sub    $0xc,%esp
c0002078:	50                   	push   %eax
c0002079:	e8 86 f6 ff ff       	call   c0001704 <put_str>
c000207e:	83 c4 10             	add    $0x10,%esp
c0002081:	83 7d 08 0e          	cmpl   $0xe,0x8(%ebp)
c0002085:	75 2d                	jne    c00020b4 <general+0xcd>
c0002087:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
c000208e:	0f 20 d0             	mov    %cr2,%eax
c0002091:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002094:	83 ec 0c             	sub    $0xc,%esp
c0002097:	8d 83 45 d5 ff ff    	lea    -0x2abb(%ebx),%eax
c000209d:	50                   	push   %eax
c000209e:	e8 61 f6 ff ff       	call   c0001704 <put_str>
c00020a3:	83 c4 10             	add    $0x10,%esp
c00020a6:	83 ec 0c             	sub    $0xc,%esp
c00020a9:	ff 75 f0             	pushl  -0x10(%ebp)
c00020ac:	e8 96 f6 ff ff       	call   c0001747 <put_int>
c00020b1:	83 c4 10             	add    $0x10,%esp
c00020b4:	83 ec 0c             	sub    $0xc,%esp
c00020b7:	68 a8 00 00 00       	push   $0xa8
c00020bc:	e8 22 f6 ff ff       	call   c00016e3 <set_cursor>
c00020c1:	83 c4 10             	add    $0x10,%esp
c00020c4:	83 ec 0c             	sub    $0xc,%esp
c00020c7:	8d 83 64 d5 ff ff    	lea    -0x2a9c(%ebx),%eax
c00020cd:	50                   	push   %eax
c00020ce:	e8 31 f6 ff ff       	call   c0001704 <put_str>
c00020d3:	83 c4 10             	add    $0x10,%esp
c00020d6:	eb fe                	jmp    c00020d6 <general+0xef>
c00020d8:	90                   	nop
c00020d9:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00020dc:	c9                   	leave  
c00020dd:	c3                   	ret    

c00020de <exception_init>:
c00020de:	55                   	push   %ebp
c00020df:	89 e5                	mov    %esp,%ebp
c00020e1:	53                   	push   %ebx
c00020e2:	83 ec 10             	sub    $0x10,%esp
c00020e5:	e8 13 f5 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00020ea:	05 16 4f 00 00       	add    $0x4f16,%eax
c00020ef:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c00020f5:	8d 88 83 d5 ff ff    	lea    -0x2a7d(%eax),%ecx
c00020fb:	89 0a                	mov    %ecx,(%edx)
c00020fd:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c0002103:	8d 88 90 d5 ff ff    	lea    -0x2a70(%eax),%ecx
c0002109:	89 4a 04             	mov    %ecx,0x4(%edx)
c000210c:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c0002112:	8d 88 a0 d5 ff ff    	lea    -0x2a60(%eax),%ecx
c0002118:	89 4a 08             	mov    %ecx,0x8(%edx)
c000211b:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c0002121:	8d 88 ae d5 ff ff    	lea    -0x2a52(%eax),%ecx
c0002127:	89 4a 0c             	mov    %ecx,0xc(%edx)
c000212a:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c0002130:	8d 88 c3 d5 ff ff    	lea    -0x2a3d(%eax),%ecx
c0002136:	89 4a 10             	mov    %ecx,0x10(%edx)
c0002139:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c000213f:	8d 88 d6 d5 ff ff    	lea    -0x2a2a(%eax),%ecx
c0002145:	89 4a 14             	mov    %ecx,0x14(%edx)
c0002148:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c000214e:	8d 88 f3 d5 ff ff    	lea    -0x2a0d(%eax),%ecx
c0002154:	89 4a 18             	mov    %ecx,0x18(%edx)
c0002157:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c000215d:	8d 88 02 d6 ff ff    	lea    -0x29fe(%eax),%ecx
c0002163:	89 4a 1c             	mov    %ecx,0x1c(%edx)
c0002166:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c000216c:	8d 88 17 d6 ff ff    	lea    -0x29e9(%eax),%ecx
c0002172:	89 4a 20             	mov    %ecx,0x20(%edx)
c0002175:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c000217b:	8d 88 2e d6 ff ff    	lea    -0x29d2(%eax),%ecx
c0002181:	89 4a 24             	mov    %ecx,0x24(%edx)
c0002184:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c000218a:	8d 88 4a d6 ff ff    	lea    -0x29b6(%eax),%ecx
c0002190:	89 4a 28             	mov    %ecx,0x28(%edx)
c0002193:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c0002199:	8d 88 60 d6 ff ff    	lea    -0x29a0(%eax),%ecx
c000219f:	89 4a 2c             	mov    %ecx,0x2c(%edx)
c00021a2:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c00021a8:	8d 88 74 d6 ff ff    	lea    -0x298c(%eax),%ecx
c00021ae:	89 4a 30             	mov    %ecx,0x30(%edx)
c00021b1:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c00021b7:	8d 88 8a d6 ff ff    	lea    -0x2976(%eax),%ecx
c00021bd:	89 4a 34             	mov    %ecx,0x34(%edx)
c00021c0:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c00021c6:	8d 88 a8 d6 ff ff    	lea    -0x2958(%eax),%ecx
c00021cc:	89 4a 38             	mov    %ecx,0x38(%edx)
c00021cf:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c00021d5:	8d 88 b3 d6 ff ff    	lea    -0x294d(%eax),%ecx
c00021db:	89 4a 3c             	mov    %ecx,0x3c(%edx)
c00021de:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c00021e4:	8d 88 bc d6 ff ff    	lea    -0x2944(%eax),%ecx
c00021ea:	89 4a 40             	mov    %ecx,0x40(%edx)
c00021ed:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c00021f3:	8d 88 d1 d6 ff ff    	lea    -0x292f(%eax),%ecx
c00021f9:	89 4a 44             	mov    %ecx,0x44(%edx)
c00021fc:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c0002202:	8d 88 e4 d6 ff ff    	lea    -0x291c(%eax),%ecx
c0002208:	89 4a 48             	mov    %ecx,0x48(%edx)
c000220b:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c0002211:	8d 88 f6 d6 ff ff    	lea    -0x290a(%eax),%ecx
c0002217:	89 4a 4c             	mov    %ecx,0x4c(%edx)
c000221a:	c7 45 f8 14 00 00 00 	movl   $0x14,-0x8(%ebp)
c0002221:	eb 16                	jmp    c0002239 <exception_init+0x15b>
c0002223:	c7 c2 40 76 00 c0    	mov    $0xc0007640,%edx
c0002229:	8b 4d f8             	mov    -0x8(%ebp),%ecx
c000222c:	8d 98 0e d7 ff ff    	lea    -0x28f2(%eax),%ebx
c0002232:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
c0002235:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c0002239:	81 7d f8 80 00 00 00 	cmpl   $0x80,-0x8(%ebp)
c0002240:	7e e1                	jle    c0002223 <exception_init+0x145>
c0002242:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c0002249:	eb 16                	jmp    c0002261 <exception_init+0x183>
c000224b:	c7 c2 60 78 00 c0    	mov    $0xc0007860,%edx
c0002251:	8b 4d f8             	mov    -0x8(%ebp),%ecx
c0002254:	8d 98 e7 af ff ff    	lea    -0x5019(%eax),%ebx
c000225a:	89 1c 8a             	mov    %ebx,(%edx,%ecx,4)
c000225d:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c0002261:	81 7d f8 80 00 00 00 	cmpl   $0x80,-0x8(%ebp)
c0002268:	7e e1                	jle    c000224b <exception_init+0x16d>
c000226a:	90                   	nop
c000226b:	83 c4 10             	add    $0x10,%esp
c000226e:	5b                   	pop    %ebx
c000226f:	5d                   	pop    %ebp
c0002270:	c3                   	ret    

c0002271 <idt_init>:
c0002271:	55                   	push   %ebp
c0002272:	89 e5                	mov    %esp,%ebp
c0002274:	57                   	push   %edi
c0002275:	56                   	push   %esi
c0002276:	53                   	push   %ebx
c0002277:	83 ec 1c             	sub    $0x1c,%esp
c000227a:	e8 0f 01 00 00       	call   c000238e <__x86.get_pc_thunk.di>
c000227f:	81 c7 81 4d 00 00    	add    $0x4d81,%edi
c0002285:	e8 1e fc ff ff       	call   c0001ea8 <idt_desc_init>
c000228a:	e8 a1 fc ff ff       	call   c0001f30 <pic_init>
c000228f:	e8 4a fe ff ff       	call   c00020de <exception_init>
c0002294:	8d 87 80 01 00 00    	lea    0x180(%edi),%eax
c000229a:	ba 00 00 00 00       	mov    $0x0,%edx
c000229f:	0f a4 c2 10          	shld   $0x10,%eax,%edx
c00022a3:	c1 e0 10             	shl    $0x10,%eax
c00022a6:	89 d1                	mov    %edx,%ecx
c00022a8:	89 c2                	mov    %eax,%edx
c00022aa:	89 d0                	mov    %edx,%eax
c00022ac:	0d 07 04 00 00       	or     $0x407,%eax
c00022b1:	89 c3                	mov    %eax,%ebx
c00022b3:	89 c8                	mov    %ecx,%eax
c00022b5:	80 cc 00             	or     $0x0,%ah
c00022b8:	89 c6                	mov    %eax,%esi
c00022ba:	89 5d e0             	mov    %ebx,-0x20(%ebp)
c00022bd:	89 75 e4             	mov    %esi,-0x1c(%ebp)
c00022c0:	0f 01 5d e0          	lidtl  -0x20(%ebp)
c00022c4:	83 ec 0c             	sub    $0xc,%esp
c00022c7:	8d 87 18 d7 ff ff    	lea    -0x28e8(%edi),%eax
c00022cd:	50                   	push   %eax
c00022ce:	89 fb                	mov    %edi,%ebx
c00022d0:	e8 2f f4 ff ff       	call   c0001704 <put_str>
c00022d5:	83 c4 10             	add    $0x10,%esp
c00022d8:	90                   	nop
c00022d9:	8d 65 f4             	lea    -0xc(%ebp),%esp
c00022dc:	5b                   	pop    %ebx
c00022dd:	5e                   	pop    %esi
c00022de:	5f                   	pop    %edi
c00022df:	5d                   	pop    %ebp
c00022e0:	c3                   	ret    

c00022e1 <intopen>:
c00022e1:	55                   	push   %ebp
c00022e2:	89 e5                	mov    %esp,%ebp
c00022e4:	83 ec 10             	sub    $0x10,%esp
c00022e7:	e8 11 f3 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00022ec:	05 14 4d 00 00       	add    $0x4d14,%eax
c00022f1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c00022f8:	9c                   	pushf  
c00022f9:	58                   	pop    %eax
c00022fa:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00022fd:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002300:	25 00 02 00 00       	and    $0x200,%eax
c0002305:	85 c0                	test   %eax,%eax
c0002307:	75 01                	jne    c000230a <intopen+0x29>
c0002309:	fb                   	sti    
c000230a:	90                   	nop
c000230b:	c9                   	leave  
c000230c:	c3                   	ret    

c000230d <intclose>:
c000230d:	55                   	push   %ebp
c000230e:	89 e5                	mov    %esp,%ebp
c0002310:	83 ec 10             	sub    $0x10,%esp
c0002313:	e8 e5 f2 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002318:	05 e8 4c 00 00       	add    $0x4ce8,%eax
c000231d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c0002324:	9c                   	pushf  
c0002325:	58                   	pop    %eax
c0002326:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002329:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000232c:	25 00 02 00 00       	and    $0x200,%eax
c0002331:	85 c0                	test   %eax,%eax
c0002333:	74 01                	je     c0002336 <intclose+0x29>
c0002335:	fa                   	cli    
c0002336:	90                   	nop
c0002337:	c9                   	leave  
c0002338:	c3                   	ret    

c0002339 <intr_status>:
c0002339:	55                   	push   %ebp
c000233a:	89 e5                	mov    %esp,%ebp
c000233c:	83 ec 10             	sub    $0x10,%esp
c000233f:	e8 b9 f2 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002344:	05 bc 4c 00 00       	add    $0x4cbc,%eax
c0002349:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c0002350:	9c                   	pushf  
c0002351:	58                   	pop    %eax
c0002352:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002355:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002358:	25 00 02 00 00       	and    $0x200,%eax
c000235d:	85 c0                	test   %eax,%eax
c000235f:	74 07                	je     c0002368 <intr_status+0x2f>
c0002361:	b8 01 00 00 00       	mov    $0x1,%eax
c0002366:	eb 05                	jmp    c000236d <intr_status+0x34>
c0002368:	b8 00 00 00 00       	mov    $0x0,%eax
c000236d:	c9                   	leave  
c000236e:	c3                   	ret    

c000236f <register_handler>:
c000236f:	55                   	push   %ebp
c0002370:	89 e5                	mov    %esp,%ebp
c0002372:	e8 86 f2 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002377:	05 89 4c 00 00       	add    $0x4c89,%eax
c000237c:	c7 c0 60 78 00 c0    	mov    $0xc0007860,%eax
c0002382:	8b 55 08             	mov    0x8(%ebp),%edx
c0002385:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0002388:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
c000238b:	90                   	nop
c000238c:	5d                   	pop    %ebp
c000238d:	c3                   	ret    

c000238e <__x86.get_pc_thunk.di>:
c000238e:	8b 3c 24             	mov    (%esp),%edi
c0002391:	c3                   	ret    

c0002392 <bitmap_set>:
c0002392:	55                   	push   %ebp
c0002393:	89 e5                	mov    %esp,%ebp
c0002395:	83 ec 14             	sub    $0x14,%esp
c0002398:	e8 60 f2 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c000239d:	05 63 4c 00 00       	add    $0x4c63,%eax
c00023a2:	8b 45 10             	mov    0x10(%ebp),%eax
c00023a5:	88 45 ec             	mov    %al,-0x14(%ebp)
c00023a8:	8b 45 0c             	mov    0xc(%ebp),%eax
c00023ab:	c1 e8 03             	shr    $0x3,%eax
c00023ae:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00023b1:	8b 45 0c             	mov    0xc(%ebp),%eax
c00023b4:	83 e0 07             	and    $0x7,%eax
c00023b7:	89 45 f8             	mov    %eax,-0x8(%ebp)
c00023ba:	80 7d ec 00          	cmpb   $0x0,-0x14(%ebp)
c00023be:	74 30                	je     c00023f0 <bitmap_set+0x5e>
c00023c0:	0f b6 55 ec          	movzbl -0x14(%ebp),%edx
c00023c4:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00023c7:	89 c1                	mov    %eax,%ecx
c00023c9:	d3 e2                	shl    %cl,%edx
c00023cb:	89 d0                	mov    %edx,%eax
c00023cd:	88 45 ec             	mov    %al,-0x14(%ebp)
c00023d0:	8b 45 08             	mov    0x8(%ebp),%eax
c00023d3:	8b 50 04             	mov    0x4(%eax),%edx
c00023d6:	8b 45 fc             	mov    -0x4(%ebp),%eax
c00023d9:	01 d0                	add    %edx,%eax
c00023db:	0f b6 00             	movzbl (%eax),%eax
c00023de:	8b 55 08             	mov    0x8(%ebp),%edx
c00023e1:	8b 4a 04             	mov    0x4(%edx),%ecx
c00023e4:	8b 55 fc             	mov    -0x4(%ebp),%edx
c00023e7:	01 ca                	add    %ecx,%edx
c00023e9:	0a 45 ec             	or     -0x14(%ebp),%al
c00023ec:	88 02                	mov    %al,(%edx)
c00023ee:	eb 31                	jmp    c0002421 <bitmap_set+0x8f>
c00023f0:	8b 45 f8             	mov    -0x8(%ebp),%eax
c00023f3:	ba 01 00 00 00       	mov    $0x1,%edx
c00023f8:	89 c1                	mov    %eax,%ecx
c00023fa:	d3 e2                	shl    %cl,%edx
c00023fc:	89 d0                	mov    %edx,%eax
c00023fe:	f7 d0                	not    %eax
c0002400:	88 45 ec             	mov    %al,-0x14(%ebp)
c0002403:	8b 45 08             	mov    0x8(%ebp),%eax
c0002406:	8b 50 04             	mov    0x4(%eax),%edx
c0002409:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000240c:	01 d0                	add    %edx,%eax
c000240e:	0f b6 00             	movzbl (%eax),%eax
c0002411:	8b 55 08             	mov    0x8(%ebp),%edx
c0002414:	8b 4a 04             	mov    0x4(%edx),%ecx
c0002417:	8b 55 fc             	mov    -0x4(%ebp),%edx
c000241a:	01 ca                	add    %ecx,%edx
c000241c:	22 45 ec             	and    -0x14(%ebp),%al
c000241f:	88 02                	mov    %al,(%edx)
c0002421:	90                   	nop
c0002422:	c9                   	leave  
c0002423:	c3                   	ret    

c0002424 <bitmap_init>:
c0002424:	55                   	push   %ebp
c0002425:	89 e5                	mov    %esp,%ebp
c0002427:	83 ec 10             	sub    $0x10,%esp
c000242a:	e8 ce f1 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c000242f:	05 d1 4b 00 00       	add    $0x4bd1,%eax
c0002434:	8b 45 08             	mov    0x8(%ebp),%eax
c0002437:	8b 40 04             	mov    0x4(%eax),%eax
c000243a:	89 45 f8             	mov    %eax,-0x8(%ebp)
c000243d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c0002444:	eb 10                	jmp    c0002456 <bitmap_init+0x32>
c0002446:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002449:	8d 50 01             	lea    0x1(%eax),%edx
c000244c:	89 55 f8             	mov    %edx,-0x8(%ebp)
c000244f:	c6 00 00             	movb   $0x0,(%eax)
c0002452:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
c0002456:	8b 45 08             	mov    0x8(%ebp),%eax
c0002459:	8b 10                	mov    (%eax),%edx
c000245b:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000245e:	39 c2                	cmp    %eax,%edx
c0002460:	77 e4                	ja     c0002446 <bitmap_init+0x22>
c0002462:	90                   	nop
c0002463:	c9                   	leave  
c0002464:	c3                   	ret    

c0002465 <bitmap_state>:
c0002465:	55                   	push   %ebp
c0002466:	89 e5                	mov    %esp,%ebp
c0002468:	83 ec 10             	sub    $0x10,%esp
c000246b:	e8 8d f1 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002470:	05 90 4b 00 00       	add    $0x4b90,%eax
c0002475:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002478:	c1 e8 03             	shr    $0x3,%eax
c000247b:	89 45 fc             	mov    %eax,-0x4(%ebp)
c000247e:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002481:	83 e0 07             	and    $0x7,%eax
c0002484:	89 45 f8             	mov    %eax,-0x8(%ebp)
c0002487:	8b 45 08             	mov    0x8(%ebp),%eax
c000248a:	8b 50 04             	mov    0x4(%eax),%edx
c000248d:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002490:	01 d0                	add    %edx,%eax
c0002492:	0f b6 00             	movzbl (%eax),%eax
c0002495:	0f b6 d0             	movzbl %al,%edx
c0002498:	8b 45 f8             	mov    -0x8(%ebp),%eax
c000249b:	89 c1                	mov    %eax,%ecx
c000249d:	d3 fa                	sar    %cl,%edx
c000249f:	89 d0                	mov    %edx,%eax
c00024a1:	83 e0 01             	and    $0x1,%eax
c00024a4:	c9                   	leave  
c00024a5:	c3                   	ret    

c00024a6 <memory_pool_init>:
c00024a6:	55                   	push   %ebp
c00024a7:	89 e5                	mov    %esp,%ebp
c00024a9:	e8 4f f1 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00024ae:	05 52 4b 00 00       	add    $0x4b52,%eax
c00024b3:	8b 45 10             	mov    0x10(%ebp),%eax
c00024b6:	8d 50 07             	lea    0x7(%eax),%edx
c00024b9:	85 c0                	test   %eax,%eax
c00024bb:	0f 48 c2             	cmovs  %edx,%eax
c00024be:	c1 f8 03             	sar    $0x3,%eax
c00024c1:	89 c2                	mov    %eax,%edx
c00024c3:	8b 45 08             	mov    0x8(%ebp),%eax
c00024c6:	89 10                	mov    %edx,(%eax)
c00024c8:	8b 55 14             	mov    0x14(%ebp),%edx
c00024cb:	8b 45 08             	mov    0x8(%ebp),%eax
c00024ce:	89 50 04             	mov    %edx,0x4(%eax)
c00024d1:	8b 45 10             	mov    0x10(%ebp),%eax
c00024d4:	c1 e0 0c             	shl    $0xc,%eax
c00024d7:	89 c2                	mov    %eax,%edx
c00024d9:	8b 45 08             	mov    0x8(%ebp),%eax
c00024dc:	89 50 08             	mov    %edx,0x8(%eax)
c00024df:	8b 45 08             	mov    0x8(%ebp),%eax
c00024e2:	8b 55 0c             	mov    0xc(%ebp),%edx
c00024e5:	89 50 0c             	mov    %edx,0xc(%eax)
c00024e8:	8b 45 08             	mov    0x8(%ebp),%eax
c00024eb:	50                   	push   %eax
c00024ec:	e8 33 ff ff ff       	call   c0002424 <bitmap_init>
c00024f1:	83 c4 04             	add    $0x4,%esp
c00024f4:	90                   	nop
c00024f5:	c9                   	leave  
c00024f6:	c3                   	ret    

c00024f7 <bitmap_init_all>:
c00024f7:	55                   	push   %ebp
c00024f8:	89 e5                	mov    %esp,%ebp
c00024fa:	53                   	push   %ebx
c00024fb:	83 ec 34             	sub    $0x34,%esp
c00024fe:	e8 fe f0 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002503:	81 c3 fd 4a 00 00    	add    $0x4afd,%ebx
c0002509:	c7 45 f4 00 00 00 02 	movl   $0x2000000,-0xc(%ebp)
c0002510:	c7 45 f0 00 00 20 00 	movl   $0x200000,-0x10(%ebp)
c0002517:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000251a:	2b 45 f0             	sub    -0x10(%ebp),%eax
c000251d:	89 45 ec             	mov    %eax,-0x14(%ebp)
c0002520:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0002523:	c1 e8 0c             	shr    $0xc,%eax
c0002526:	89 45 e8             	mov    %eax,-0x18(%ebp)
c0002529:	8b 45 e8             	mov    -0x18(%ebp),%eax
c000252c:	d1 e8                	shr    %eax
c000252e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
c0002531:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002534:	2b 45 e4             	sub    -0x1c(%ebp),%eax
c0002537:	89 45 e0             	mov    %eax,-0x20(%ebp)
c000253a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c000253d:	c1 e8 03             	shr    $0x3,%eax
c0002540:	89 45 dc             	mov    %eax,-0x24(%ebp)
c0002543:	8b 45 e0             	mov    -0x20(%ebp),%eax
c0002546:	c1 e8 03             	shr    $0x3,%eax
c0002549:	89 45 d8             	mov    %eax,-0x28(%ebp)
c000254c:	c7 45 d4 00 00 20 00 	movl   $0x200000,-0x2c(%ebp)
c0002553:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c0002556:	c1 e0 0c             	shl    $0xc,%eax
c0002559:	89 c2                	mov    %eax,%edx
c000255b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
c000255e:	01 d0                	add    %edx,%eax
c0002560:	89 45 d0             	mov    %eax,-0x30(%ebp)
c0002563:	c7 45 cc 00 a0 09 c0 	movl   $0xc009a000,-0x34(%ebp)
c000256a:	8b 55 cc             	mov    -0x34(%ebp),%edx
c000256d:	8b 45 dc             	mov    -0x24(%ebp),%eax
c0002570:	01 d0                	add    %edx,%eax
c0002572:	89 45 c8             	mov    %eax,-0x38(%ebp)
c0002575:	8b 45 e4             	mov    -0x1c(%ebp),%eax
c0002578:	ff 75 cc             	pushl  -0x34(%ebp)
c000257b:	50                   	push   %eax
c000257c:	ff 75 d4             	pushl  -0x2c(%ebp)
c000257f:	c7 c0 e0 7a 00 c0    	mov    $0xc0007ae0,%eax
c0002585:	50                   	push   %eax
c0002586:	e8 1b ff ff ff       	call   c00024a6 <memory_pool_init>
c000258b:	83 c4 10             	add    $0x10,%esp
c000258e:	8b 45 e0             	mov    -0x20(%ebp),%eax
c0002591:	ff 75 c8             	pushl  -0x38(%ebp)
c0002594:	50                   	push   %eax
c0002595:	ff 75 d0             	pushl  -0x30(%ebp)
c0002598:	c7 c0 a0 7a 00 c0    	mov    $0xc0007aa0,%eax
c000259e:	50                   	push   %eax
c000259f:	e8 02 ff ff ff       	call   c00024a6 <memory_pool_init>
c00025a4:	83 c4 10             	add    $0x10,%esp
c00025a7:	c7 c0 80 7a 00 c0    	mov    $0xc0007a80,%eax
c00025ad:	c7 40 08 00 00 10 c0 	movl   $0xc0100000,0x8(%eax)
c00025b4:	c7 c0 80 7a 00 c0    	mov    $0xc0007a80,%eax
c00025ba:	8b 55 dc             	mov    -0x24(%ebp),%edx
c00025bd:	89 10                	mov    %edx,(%eax)
c00025bf:	8b 55 dc             	mov    -0x24(%ebp),%edx
c00025c2:	8b 45 d8             	mov    -0x28(%ebp),%eax
c00025c5:	01 d0                	add    %edx,%eax
c00025c7:	2d 00 60 f6 3f       	sub    $0x3ff66000,%eax
c00025cc:	89 c2                	mov    %eax,%edx
c00025ce:	c7 c0 80 7a 00 c0    	mov    $0xc0007a80,%eax
c00025d4:	89 50 04             	mov    %edx,0x4(%eax)
c00025d7:	c7 c0 80 7a 00 c0    	mov    $0xc0007a80,%eax
c00025dd:	50                   	push   %eax
c00025de:	e8 41 fe ff ff       	call   c0002424 <bitmap_init>
c00025e3:	83 c4 04             	add    $0x4,%esp
c00025e6:	83 ec 0c             	sub    $0xc,%esp
c00025e9:	c7 c0 e0 7a 00 c0    	mov    $0xc0007ae0,%eax
c00025ef:	8d 40 10             	lea    0x10(%eax),%eax
c00025f2:	50                   	push   %eax
c00025f3:	e8 9d 0c 00 00       	call   c0003295 <init_lock>
c00025f8:	83 c4 10             	add    $0x10,%esp
c00025fb:	83 ec 0c             	sub    $0xc,%esp
c00025fe:	c7 c0 a0 7a 00 c0    	mov    $0xc0007aa0,%eax
c0002604:	8d 40 10             	lea    0x10(%eax),%eax
c0002607:	50                   	push   %eax
c0002608:	e8 88 0c 00 00       	call   c0003295 <init_lock>
c000260d:	83 c4 10             	add    $0x10,%esp
c0002610:	90                   	nop
c0002611:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002614:	c9                   	leave  
c0002615:	c3                   	ret    

c0002616 <bitmap_scan>:
c0002616:	55                   	push   %ebp
c0002617:	89 e5                	mov    %esp,%ebp
c0002619:	83 ec 10             	sub    $0x10,%esp
c000261c:	e8 dc ef ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002621:	05 df 49 00 00       	add    $0x49df,%eax
c0002626:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c000262d:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c0002634:	eb 24                	jmp    c000265a <bitmap_scan+0x44>
c0002636:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002639:	50                   	push   %eax
c000263a:	ff 75 08             	pushl  0x8(%ebp)
c000263d:	e8 23 fe ff ff       	call   c0002465 <bitmap_state>
c0002642:	83 c4 08             	add    $0x8,%esp
c0002645:	85 c0                	test   %eax,%eax
c0002647:	75 06                	jne    c000264f <bitmap_scan+0x39>
c0002649:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
c000264d:	eb 07                	jmp    c0002656 <bitmap_scan+0x40>
c000264f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
c0002656:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c000265a:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000265d:	39 45 0c             	cmp    %eax,0xc(%ebp)
c0002660:	76 13                	jbe    c0002675 <bitmap_scan+0x5f>
c0002662:	8b 45 08             	mov    0x8(%ebp),%eax
c0002665:	8b 00                	mov    (%eax),%eax
c0002667:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx
c000266e:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002671:	39 c2                	cmp    %eax,%edx
c0002673:	77 c1                	ja     c0002636 <bitmap_scan+0x20>
c0002675:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002678:	39 45 0c             	cmp    %eax,0xc(%ebp)
c000267b:	75 08                	jne    c0002685 <bitmap_scan+0x6f>
c000267d:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002680:	2b 45 0c             	sub    0xc(%ebp),%eax
c0002683:	eb 05                	jmp    c000268a <bitmap_scan+0x74>
c0002685:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
c000268a:	c9                   	leave  
c000268b:	c3                   	ret    

c000268c <vaddr_get>:
c000268c:	55                   	push   %ebp
c000268d:	89 e5                	mov    %esp,%ebp
c000268f:	53                   	push   %ebx
c0002690:	83 ec 14             	sub    $0x14,%esp
c0002693:	e8 69 ef ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002698:	81 c3 68 49 00 00    	add    $0x4968,%ebx
c000269e:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%ebp)
c00026a5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
c00026ac:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c00026b0:	75 67                	jne    c0002719 <vaddr_get+0x8d>
c00026b2:	ff 75 0c             	pushl  0xc(%ebp)
c00026b5:	c7 c0 80 7a 00 c0    	mov    $0xc0007a80,%eax
c00026bb:	50                   	push   %eax
c00026bc:	e8 55 ff ff ff       	call   c0002616 <bitmap_scan>
c00026c1:	83 c4 08             	add    $0x8,%esp
c00026c4:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00026c7:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
c00026cb:	75 0a                	jne    c00026d7 <vaddr_get+0x4b>
c00026cd:	b8 00 00 00 00       	mov    $0x0,%eax
c00026d2:	e9 b0 00 00 00       	jmp    c0002787 <vaddr_get+0xfb>
c00026d7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c00026de:	eb 1e                	jmp    c00026fe <vaddr_get+0x72>
c00026e0:	8b 55 f0             	mov    -0x10(%ebp),%edx
c00026e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00026e6:	01 d0                	add    %edx,%eax
c00026e8:	6a 01                	push   $0x1
c00026ea:	50                   	push   %eax
c00026eb:	c7 c0 80 7a 00 c0    	mov    $0xc0007a80,%eax
c00026f1:	50                   	push   %eax
c00026f2:	e8 9b fc ff ff       	call   c0002392 <bitmap_set>
c00026f7:	83 c4 0c             	add    $0xc,%esp
c00026fa:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c00026fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002701:	39 45 0c             	cmp    %eax,0xc(%ebp)
c0002704:	77 da                	ja     c00026e0 <vaddr_get+0x54>
c0002706:	c7 c0 80 7a 00 c0    	mov    $0xc0007a80,%eax
c000270c:	8b 40 08             	mov    0x8(%eax),%eax
c000270f:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002712:	c1 e2 0c             	shl    $0xc,%edx
c0002715:	01 d0                	add    %edx,%eax
c0002717:	eb 6e                	jmp    c0002787 <vaddr_get+0xfb>
c0002719:	e8 f5 06 00 00       	call   c0002e13 <running_thread>
c000271e:	89 45 e8             	mov    %eax,-0x18(%ebp)
c0002721:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002724:	83 c0 38             	add    $0x38,%eax
c0002727:	83 ec 08             	sub    $0x8,%esp
c000272a:	ff 75 0c             	pushl  0xc(%ebp)
c000272d:	50                   	push   %eax
c000272e:	e8 e3 fe ff ff       	call   c0002616 <bitmap_scan>
c0002733:	83 c4 10             	add    $0x10,%esp
c0002736:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002739:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
c000273d:	75 07                	jne    c0002746 <vaddr_get+0xba>
c000273f:	b8 00 00 00 00       	mov    $0x0,%eax
c0002744:	eb 41                	jmp    c0002787 <vaddr_get+0xfb>
c0002746:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c000274d:	eb 1c                	jmp    c000276b <vaddr_get+0xdf>
c000274f:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002752:	8b 55 e8             	mov    -0x18(%ebp),%edx
c0002755:	83 c2 38             	add    $0x38,%edx
c0002758:	83 ec 04             	sub    $0x4,%esp
c000275b:	6a 01                	push   $0x1
c000275d:	50                   	push   %eax
c000275e:	52                   	push   %edx
c000275f:	e8 2e fc ff ff       	call   c0002392 <bitmap_set>
c0002764:	83 c4 10             	add    $0x10,%esp
c0002767:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c000276b:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000276e:	39 45 0c             	cmp    %eax,0xc(%ebp)
c0002771:	77 dc                	ja     c000274f <vaddr_get+0xc3>
c0002773:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002776:	8b 40 40             	mov    0x40(%eax),%eax
c0002779:	8b 55 f0             	mov    -0x10(%ebp),%edx
c000277c:	c1 e2 0c             	shl    $0xc,%edx
c000277f:	01 d0                	add    %edx,%eax
c0002781:	89 45 ec             	mov    %eax,-0x14(%ebp)
c0002784:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0002787:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000278a:	c9                   	leave  
c000278b:	c3                   	ret    

c000278c <pde_ptr>:
c000278c:	55                   	push   %ebp
c000278d:	89 e5                	mov    %esp,%ebp
c000278f:	83 ec 10             	sub    $0x10,%esp
c0002792:	e8 66 ee ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002797:	05 69 48 00 00       	add    $0x4869,%eax
c000279c:	8b 45 08             	mov    0x8(%ebp),%eax
c000279f:	c1 e8 16             	shr    $0x16,%eax
c00027a2:	05 00 fc ff 3f       	add    $0x3ffffc00,%eax
c00027a7:	c1 e0 02             	shl    $0x2,%eax
c00027aa:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00027ad:	90                   	nop
c00027ae:	c9                   	leave  
c00027af:	c3                   	ret    

c00027b0 <pte_ptr>:
c00027b0:	55                   	push   %ebp
c00027b1:	89 e5                	mov    %esp,%ebp
c00027b3:	83 ec 10             	sub    $0x10,%esp
c00027b6:	e8 42 ee ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00027bb:	05 45 48 00 00       	add    $0x4845,%eax
c00027c0:	8b 45 08             	mov    0x8(%ebp),%eax
c00027c3:	c1 e8 0a             	shr    $0xa,%eax
c00027c6:	25 00 f0 3f 00       	and    $0x3ff000,%eax
c00027cb:	89 c2                	mov    %eax,%edx
c00027cd:	8b 45 08             	mov    0x8(%ebp),%eax
c00027d0:	c1 e8 0c             	shr    $0xc,%eax
c00027d3:	25 ff 03 00 00       	and    $0x3ff,%eax
c00027d8:	c1 e0 02             	shl    $0x2,%eax
c00027db:	01 d0                	add    %edx,%eax
c00027dd:	2d 00 00 40 00       	sub    $0x400000,%eax
c00027e2:	89 45 fc             	mov    %eax,-0x4(%ebp)
c00027e5:	90                   	nop
c00027e6:	c9                   	leave  
c00027e7:	c3                   	ret    

c00027e8 <palloc>:
c00027e8:	55                   	push   %ebp
c00027e9:	89 e5                	mov    %esp,%ebp
c00027eb:	83 ec 10             	sub    $0x10,%esp
c00027ee:	e8 0a ee ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00027f3:	05 0d 48 00 00       	add    $0x480d,%eax
c00027f8:	8b 45 08             	mov    0x8(%ebp),%eax
c00027fb:	6a 01                	push   $0x1
c00027fd:	50                   	push   %eax
c00027fe:	e8 13 fe ff ff       	call   c0002616 <bitmap_scan>
c0002803:	83 c4 08             	add    $0x8,%esp
c0002806:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002809:	8b 55 fc             	mov    -0x4(%ebp),%edx
c000280c:	8b 45 08             	mov    0x8(%ebp),%eax
c000280f:	6a 01                	push   $0x1
c0002811:	52                   	push   %edx
c0002812:	50                   	push   %eax
c0002813:	e8 7a fb ff ff       	call   c0002392 <bitmap_set>
c0002818:	83 c4 0c             	add    $0xc,%esp
c000281b:	8b 45 08             	mov    0x8(%ebp),%eax
c000281e:	8b 40 0c             	mov    0xc(%eax),%eax
c0002821:	8b 55 fc             	mov    -0x4(%ebp),%edx
c0002824:	c1 e2 0c             	shl    $0xc,%edx
c0002827:	01 d0                	add    %edx,%eax
c0002829:	c9                   	leave  
c000282a:	c3                   	ret    

c000282b <page_table_add>:
c000282b:	55                   	push   %ebp
c000282c:	89 e5                	mov    %esp,%ebp
c000282e:	53                   	push   %ebx
c000282f:	83 ec 14             	sub    $0x14,%esp
c0002832:	e8 ca ed ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002837:	81 c3 c9 47 00 00    	add    $0x47c9,%ebx
c000283d:	8b 45 08             	mov    0x8(%ebp),%eax
c0002840:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002843:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002846:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002849:	ff 75 f4             	pushl  -0xc(%ebp)
c000284c:	e8 3b ff ff ff       	call   c000278c <pde_ptr>
c0002851:	83 c4 04             	add    $0x4,%esp
c0002854:	89 45 ec             	mov    %eax,-0x14(%ebp)
c0002857:	ff 75 f4             	pushl  -0xc(%ebp)
c000285a:	e8 51 ff ff ff       	call   c00027b0 <pte_ptr>
c000285f:	83 c4 04             	add    $0x4,%esp
c0002862:	89 45 e8             	mov    %eax,-0x18(%ebp)
c0002865:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0002868:	8b 00                	mov    (%eax),%eax
c000286a:	83 e0 01             	and    $0x1,%eax
c000286d:	85 c0                	test   %eax,%eax
c000286f:	75 39                	jne    c00028aa <page_table_add+0x7f>
c0002871:	c7 c0 e0 7a 00 c0    	mov    $0xc0007ae0,%eax
c0002877:	50                   	push   %eax
c0002878:	e8 6b ff ff ff       	call   c00027e8 <palloc>
c000287d:	83 c4 04             	add    $0x4,%esp
c0002880:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002885:	83 c8 07             	or     $0x7,%eax
c0002888:	89 c2                	mov    %eax,%edx
c000288a:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000288d:	89 10                	mov    %edx,(%eax)
c000288f:	8b 45 e8             	mov    -0x18(%ebp),%eax
c0002892:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002897:	83 ec 04             	sub    $0x4,%esp
c000289a:	68 00 10 00 00       	push   $0x1000
c000289f:	6a 00                	push   $0x0
c00028a1:	50                   	push   %eax
c00028a2:	e8 df 02 00 00       	call   c0002b86 <memset>
c00028a7:	83 c4 10             	add    $0x10,%esp
c00028aa:	8b 45 e8             	mov    -0x18(%ebp),%eax
c00028ad:	8b 00                	mov    (%eax),%eax
c00028af:	83 e0 01             	and    $0x1,%eax
c00028b2:	85 c0                	test   %eax,%eax
c00028b4:	74 26                	je     c00028dc <page_table_add+0xb1>
c00028b6:	e8 52 fa ff ff       	call   c000230d <intclose>
c00028bb:	83 ec 0c             	sub    $0xc,%esp
c00028be:	6a 0a                	push   $0xa
c00028c0:	e8 4b ed ff ff       	call   c0001610 <put_char>
c00028c5:	83 c4 10             	add    $0x10,%esp
c00028c8:	83 ec 0c             	sub    $0xc,%esp
c00028cb:	8d 83 25 d7 ff ff    	lea    -0x28db(%ebx),%eax
c00028d1:	50                   	push   %eax
c00028d2:	e8 2d ee ff ff       	call   c0001704 <put_str>
c00028d7:	83 c4 10             	add    $0x10,%esp
c00028da:	eb fe                	jmp    c00028da <page_table_add+0xaf>
c00028dc:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00028df:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c00028e4:	83 c8 07             	or     $0x7,%eax
c00028e7:	89 c2                	mov    %eax,%edx
c00028e9:	8b 45 e8             	mov    -0x18(%ebp),%eax
c00028ec:	89 10                	mov    %edx,(%eax)
c00028ee:	90                   	nop
c00028ef:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00028f2:	c9                   	leave  
c00028f3:	c3                   	ret    

c00028f4 <malloc>:
c00028f4:	55                   	push   %ebp
c00028f5:	89 e5                	mov    %esp,%ebp
c00028f7:	53                   	push   %ebx
c00028f8:	83 ec 14             	sub    $0x14,%esp
c00028fb:	e8 01 ed ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002900:	81 c3 00 47 00 00    	add    $0x4700,%ebx
c0002906:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c000290a:	75 5b                	jne    c0002967 <malloc+0x73>
c000290c:	83 ec 08             	sub    $0x8,%esp
c000290f:	ff 75 0c             	pushl  0xc(%ebp)
c0002912:	6a 00                	push   $0x0
c0002914:	e8 73 fd ff ff       	call   c000268c <vaddr_get>
c0002919:	83 c4 10             	add    $0x10,%esp
c000291c:	89 45 f0             	mov    %eax,-0x10(%ebp)
c000291f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
c0002926:	eb 32                	jmp    c000295a <malloc+0x66>
c0002928:	83 ec 0c             	sub    $0xc,%esp
c000292b:	c7 c0 e0 7a 00 c0    	mov    $0xc0007ae0,%eax
c0002931:	50                   	push   %eax
c0002932:	e8 b1 fe ff ff       	call   c00027e8 <palloc>
c0002937:	83 c4 10             	add    $0x10,%esp
c000293a:	89 c2                	mov    %eax,%edx
c000293c:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000293f:	c1 e0 0c             	shl    $0xc,%eax
c0002942:	89 c1                	mov    %eax,%ecx
c0002944:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002947:	01 c8                	add    %ecx,%eax
c0002949:	83 ec 08             	sub    $0x8,%esp
c000294c:	52                   	push   %edx
c000294d:	50                   	push   %eax
c000294e:	e8 d8 fe ff ff       	call   c000282b <page_table_add>
c0002953:	83 c4 10             	add    $0x10,%esp
c0002956:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c000295a:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000295d:	39 45 0c             	cmp    %eax,0xc(%ebp)
c0002960:	77 c6                	ja     c0002928 <malloc+0x34>
c0002962:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002965:	eb 05                	jmp    c000296c <malloc+0x78>
c0002967:	b8 00 00 00 00       	mov    $0x0,%eax
c000296c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000296f:	c9                   	leave  
c0002970:	c3                   	ret    

c0002971 <get_kernel_pages>:
c0002971:	55                   	push   %ebp
c0002972:	89 e5                	mov    %esp,%ebp
c0002974:	53                   	push   %ebx
c0002975:	83 ec 14             	sub    $0x14,%esp
c0002978:	e8 84 ec ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c000297d:	81 c3 83 46 00 00    	add    $0x4683,%ebx
c0002983:	83 ec 0c             	sub    $0xc,%esp
c0002986:	c7 c0 e0 7a 00 c0    	mov    $0xc0007ae0,%eax
c000298c:	8d 40 10             	lea    0x10(%eax),%eax
c000298f:	50                   	push   %eax
c0002990:	e8 34 09 00 00       	call   c00032c9 <acquire_lock>
c0002995:	83 c4 10             	add    $0x10,%esp
c0002998:	83 ec 08             	sub    $0x8,%esp
c000299b:	ff 75 08             	pushl  0x8(%ebp)
c000299e:	6a 00                	push   $0x0
c00029a0:	e8 4f ff ff ff       	call   c00028f4 <malloc>
c00029a5:	83 c4 10             	add    $0x10,%esp
c00029a8:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00029ab:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00029af:	74 17                	je     c00029c8 <get_kernel_pages+0x57>
c00029b1:	8b 45 08             	mov    0x8(%ebp),%eax
c00029b4:	c1 e0 0c             	shl    $0xc,%eax
c00029b7:	83 ec 04             	sub    $0x4,%esp
c00029ba:	50                   	push   %eax
c00029bb:	6a 00                	push   $0x0
c00029bd:	ff 75 f4             	pushl  -0xc(%ebp)
c00029c0:	e8 c1 01 00 00       	call   c0002b86 <memset>
c00029c5:	83 c4 10             	add    $0x10,%esp
c00029c8:	83 ec 0c             	sub    $0xc,%esp
c00029cb:	c7 c0 e0 7a 00 c0    	mov    $0xc0007ae0,%eax
c00029d1:	8d 40 10             	lea    0x10(%eax),%eax
c00029d4:	50                   	push   %eax
c00029d5:	e8 60 09 00 00       	call   c000333a <release_lock>
c00029da:	83 c4 10             	add    $0x10,%esp
c00029dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00029e0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00029e3:	c9                   	leave  
c00029e4:	c3                   	ret    

c00029e5 <get_user_pages>:
c00029e5:	55                   	push   %ebp
c00029e6:	89 e5                	mov    %esp,%ebp
c00029e8:	53                   	push   %ebx
c00029e9:	83 ec 14             	sub    $0x14,%esp
c00029ec:	e8 10 ec ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c00029f1:	81 c3 0f 46 00 00    	add    $0x460f,%ebx
c00029f7:	83 ec 0c             	sub    $0xc,%esp
c00029fa:	c7 c0 a0 7a 00 c0    	mov    $0xc0007aa0,%eax
c0002a00:	8d 40 10             	lea    0x10(%eax),%eax
c0002a03:	50                   	push   %eax
c0002a04:	e8 c0 08 00 00       	call   c00032c9 <acquire_lock>
c0002a09:	83 c4 10             	add    $0x10,%esp
c0002a0c:	83 ec 08             	sub    $0x8,%esp
c0002a0f:	ff 75 08             	pushl  0x8(%ebp)
c0002a12:	6a 01                	push   $0x1
c0002a14:	e8 db fe ff ff       	call   c00028f4 <malloc>
c0002a19:	83 c4 10             	add    $0x10,%esp
c0002a1c:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002a1f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c0002a23:	74 17                	je     c0002a3c <get_user_pages+0x57>
c0002a25:	8b 45 08             	mov    0x8(%ebp),%eax
c0002a28:	c1 e0 0c             	shl    $0xc,%eax
c0002a2b:	83 ec 04             	sub    $0x4,%esp
c0002a2e:	50                   	push   %eax
c0002a2f:	6a 00                	push   $0x0
c0002a31:	ff 75 f4             	pushl  -0xc(%ebp)
c0002a34:	e8 4d 01 00 00       	call   c0002b86 <memset>
c0002a39:	83 c4 10             	add    $0x10,%esp
c0002a3c:	83 ec 0c             	sub    $0xc,%esp
c0002a3f:	c7 c0 a0 7a 00 c0    	mov    $0xc0007aa0,%eax
c0002a45:	8d 40 10             	lea    0x10(%eax),%eax
c0002a48:	50                   	push   %eax
c0002a49:	e8 ec 08 00 00       	call   c000333a <release_lock>
c0002a4e:	83 c4 10             	add    $0x10,%esp
c0002a51:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002a54:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002a57:	c9                   	leave  
c0002a58:	c3                   	ret    

c0002a59 <get_a_page>:
c0002a59:	55                   	push   %ebp
c0002a5a:	89 e5                	mov    %esp,%ebp
c0002a5c:	53                   	push   %ebx
c0002a5d:	83 ec 14             	sub    $0x14,%esp
c0002a60:	e8 9c eb ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002a65:	81 c3 9b 45 00 00    	add    $0x459b,%ebx
c0002a6b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002a6f:	75 08                	jne    c0002a79 <get_a_page+0x20>
c0002a71:	c7 c0 e0 7a 00 c0    	mov    $0xc0007ae0,%eax
c0002a77:	eb 06                	jmp    c0002a7f <get_a_page+0x26>
c0002a79:	c7 c0 a0 7a 00 c0    	mov    $0xc0007aa0,%eax
c0002a7f:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002a82:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002a85:	83 c0 10             	add    $0x10,%eax
c0002a88:	83 ec 0c             	sub    $0xc,%esp
c0002a8b:	50                   	push   %eax
c0002a8c:	e8 38 08 00 00       	call   c00032c9 <acquire_lock>
c0002a91:	83 c4 10             	add    $0x10,%esp
c0002a94:	e8 7a 03 00 00       	call   c0002e13 <running_thread>
c0002a99:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002a9c:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%ebp)
c0002aa3:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002aa6:	8b 40 34             	mov    0x34(%eax),%eax
c0002aa9:	85 c0                	test   %eax,%eax
c0002aab:	74 33                	je     c0002ae0 <get_a_page+0x87>
c0002aad:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
c0002ab1:	75 2d                	jne    c0002ae0 <get_a_page+0x87>
c0002ab3:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002ab6:	8b 40 40             	mov    0x40(%eax),%eax
c0002ab9:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002abc:	29 c2                	sub    %eax,%edx
c0002abe:	89 d0                	mov    %edx,%eax
c0002ac0:	c1 e8 0c             	shr    $0xc,%eax
c0002ac3:	89 45 ec             	mov    %eax,-0x14(%ebp)
c0002ac6:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0002ac9:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002acc:	83 c2 38             	add    $0x38,%edx
c0002acf:	83 ec 04             	sub    $0x4,%esp
c0002ad2:	6a 01                	push   $0x1
c0002ad4:	50                   	push   %eax
c0002ad5:	52                   	push   %edx
c0002ad6:	e8 b7 f8 ff ff       	call   c0002392 <bitmap_set>
c0002adb:	83 c4 10             	add    $0x10,%esp
c0002ade:	eb 26                	jmp    c0002b06 <get_a_page+0xad>
c0002ae0:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002ae3:	8b 40 34             	mov    0x34(%eax),%eax
c0002ae6:	85 c0                	test   %eax,%eax
c0002ae8:	75 1c                	jne    c0002b06 <get_a_page+0xad>
c0002aea:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002aee:	75 16                	jne    c0002b06 <get_a_page+0xad>
c0002af0:	c7 c0 80 7a 00 c0    	mov    $0xc0007a80,%eax
c0002af6:	8b 40 08             	mov    0x8(%eax),%eax
c0002af9:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002afc:	29 c2                	sub    %eax,%edx
c0002afe:	89 d0                	mov    %edx,%eax
c0002b00:	c1 e8 0c             	shr    $0xc,%eax
c0002b03:	89 45 ec             	mov    %eax,-0x14(%ebp)
c0002b06:	83 ec 0c             	sub    $0xc,%esp
c0002b09:	ff 75 f4             	pushl  -0xc(%ebp)
c0002b0c:	e8 d7 fc ff ff       	call   c00027e8 <palloc>
c0002b11:	83 c4 10             	add    $0x10,%esp
c0002b14:	89 45 e8             	mov    %eax,-0x18(%ebp)
c0002b17:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
c0002b1b:	75 07                	jne    c0002b24 <get_a_page+0xcb>
c0002b1d:	b8 00 00 00 00       	mov    $0x0,%eax
c0002b22:	eb 27                	jmp    c0002b4b <get_a_page+0xf2>
c0002b24:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002b27:	83 ec 08             	sub    $0x8,%esp
c0002b2a:	ff 75 e8             	pushl  -0x18(%ebp)
c0002b2d:	50                   	push   %eax
c0002b2e:	e8 f8 fc ff ff       	call   c000282b <page_table_add>
c0002b33:	83 c4 10             	add    $0x10,%esp
c0002b36:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002b39:	83 c0 10             	add    $0x10,%eax
c0002b3c:	83 ec 0c             	sub    $0xc,%esp
c0002b3f:	50                   	push   %eax
c0002b40:	e8 f5 07 00 00       	call   c000333a <release_lock>
c0002b45:	83 c4 10             	add    $0x10,%esp
c0002b48:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002b4b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002b4e:	c9                   	leave  
c0002b4f:	c3                   	ret    

c0002b50 <addr_v2p>:
c0002b50:	55                   	push   %ebp
c0002b51:	89 e5                	mov    %esp,%ebp
c0002b53:	83 ec 10             	sub    $0x10,%esp
c0002b56:	e8 a2 ea ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002b5b:	05 a5 44 00 00       	add    $0x44a5,%eax
c0002b60:	ff 75 08             	pushl  0x8(%ebp)
c0002b63:	e8 48 fc ff ff       	call   c00027b0 <pte_ptr>
c0002b68:	83 c4 04             	add    $0x4,%esp
c0002b6b:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002b6e:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002b71:	8b 00                	mov    (%eax),%eax
c0002b73:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002b78:	89 c2                	mov    %eax,%edx
c0002b7a:	8b 45 08             	mov    0x8(%ebp),%eax
c0002b7d:	25 ff 0f 00 00       	and    $0xfff,%eax
c0002b82:	09 d0                	or     %edx,%eax
c0002b84:	c9                   	leave  
c0002b85:	c3                   	ret    

c0002b86 <memset>:
c0002b86:	55                   	push   %ebp
c0002b87:	89 e5                	mov    %esp,%ebp
c0002b89:	53                   	push   %ebx
c0002b8a:	83 ec 24             	sub    $0x24,%esp
c0002b8d:	e8 6f ea ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002b92:	81 c3 6e 44 00 00    	add    $0x446e,%ebx
c0002b98:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002b9b:	88 45 e4             	mov    %al,-0x1c(%ebp)
c0002b9e:	8b 45 08             	mov    0x8(%ebp),%eax
c0002ba1:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002ba4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002ba8:	75 35                	jne    c0002bdf <memset+0x59>
c0002baa:	e8 5e f7 ff ff       	call   c000230d <intclose>
c0002baf:	83 ec 0c             	sub    $0xc,%esp
c0002bb2:	6a 0a                	push   $0xa
c0002bb4:	e8 57 ea ff ff       	call   c0001610 <put_char>
c0002bb9:	83 c4 10             	add    $0x10,%esp
c0002bbc:	83 ec 0c             	sub    $0xc,%esp
c0002bbf:	8d 83 3a d7 ff ff    	lea    -0x28c6(%ebx),%eax
c0002bc5:	50                   	push   %eax
c0002bc6:	e8 39 eb ff ff       	call   c0001704 <put_str>
c0002bcb:	83 c4 10             	add    $0x10,%esp
c0002bce:	eb fe                	jmp    c0002bce <memset+0x48>
c0002bd0:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002bd3:	8d 50 01             	lea    0x1(%eax),%edx
c0002bd6:	89 55 f4             	mov    %edx,-0xc(%ebp)
c0002bd9:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx
c0002bdd:	88 10                	mov    %dl,(%eax)
c0002bdf:	8b 45 10             	mov    0x10(%ebp),%eax
c0002be2:	8d 50 ff             	lea    -0x1(%eax),%edx
c0002be5:	89 55 10             	mov    %edx,0x10(%ebp)
c0002be8:	85 c0                	test   %eax,%eax
c0002bea:	75 e4                	jne    c0002bd0 <memset+0x4a>
c0002bec:	90                   	nop
c0002bed:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002bf0:	c9                   	leave  
c0002bf1:	c3                   	ret    

c0002bf2 <memcpy>:
c0002bf2:	55                   	push   %ebp
c0002bf3:	89 e5                	mov    %esp,%ebp
c0002bf5:	53                   	push   %ebx
c0002bf6:	83 ec 14             	sub    $0x14,%esp
c0002bf9:	e8 03 ea ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002bfe:	81 c3 02 44 00 00    	add    $0x4402,%ebx
c0002c04:	8b 45 08             	mov    0x8(%ebp),%eax
c0002c07:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002c0a:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002c0d:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002c10:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002c14:	74 06                	je     c0002c1c <memcpy+0x2a>
c0002c16:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
c0002c1a:	75 26                	jne    c0002c42 <memcpy+0x50>
c0002c1c:	e8 ec f6 ff ff       	call   c000230d <intclose>
c0002c21:	83 ec 0c             	sub    $0xc,%esp
c0002c24:	6a 0a                	push   $0xa
c0002c26:	e8 e5 e9 ff ff       	call   c0001610 <put_char>
c0002c2b:	83 c4 10             	add    $0x10,%esp
c0002c2e:	83 ec 0c             	sub    $0xc,%esp
c0002c31:	8d 83 41 d7 ff ff    	lea    -0x28bf(%ebx),%eax
c0002c37:	50                   	push   %eax
c0002c38:	e8 c7 ea ff ff       	call   c0001704 <put_str>
c0002c3d:	83 c4 10             	add    $0x10,%esp
c0002c40:	eb fe                	jmp    c0002c40 <memcpy+0x4e>
c0002c42:	eb 17                	jmp    c0002c5b <memcpy+0x69>
c0002c44:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0002c47:	8d 42 01             	lea    0x1(%edx),%eax
c0002c4a:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002c4d:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002c50:	8d 48 01             	lea    0x1(%eax),%ecx
c0002c53:	89 4d f4             	mov    %ecx,-0xc(%ebp)
c0002c56:	0f b6 12             	movzbl (%edx),%edx
c0002c59:	88 10                	mov    %dl,(%eax)
c0002c5b:	8b 45 10             	mov    0x10(%ebp),%eax
c0002c5e:	8d 50 ff             	lea    -0x1(%eax),%edx
c0002c61:	89 55 10             	mov    %edx,0x10(%ebp)
c0002c64:	85 c0                	test   %eax,%eax
c0002c66:	75 dc                	jne    c0002c44 <memcpy+0x52>
c0002c68:	90                   	nop
c0002c69:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002c6c:	c9                   	leave  
c0002c6d:	c3                   	ret    

c0002c6e <memcmp>:
c0002c6e:	55                   	push   %ebp
c0002c6f:	89 e5                	mov    %esp,%ebp
c0002c71:	53                   	push   %ebx
c0002c72:	83 ec 14             	sub    $0x14,%esp
c0002c75:	e8 87 e9 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002c7a:	81 c3 86 43 00 00    	add    $0x4386,%ebx
c0002c80:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
c0002c84:	74 06                	je     c0002c8c <memcmp+0x1e>
c0002c86:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
c0002c8a:	75 26                	jne    c0002cb2 <memcmp+0x44>
c0002c8c:	e8 7c f6 ff ff       	call   c000230d <intclose>
c0002c91:	83 ec 0c             	sub    $0xc,%esp
c0002c94:	6a 0a                	push   $0xa
c0002c96:	e8 75 e9 ff ff       	call   c0001610 <put_char>
c0002c9b:	83 c4 10             	add    $0x10,%esp
c0002c9e:	83 ec 0c             	sub    $0xc,%esp
c0002ca1:	8d 83 52 d7 ff ff    	lea    -0x28ae(%ebx),%eax
c0002ca7:	50                   	push   %eax
c0002ca8:	e8 57 ea ff ff       	call   c0001704 <put_str>
c0002cad:	83 c4 10             	add    $0x10,%esp
c0002cb0:	eb fe                	jmp    c0002cb0 <memcmp+0x42>
c0002cb2:	8b 45 08             	mov    0x8(%ebp),%eax
c0002cb5:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002cb8:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002cbb:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0002cbe:	eb 36                	jmp    c0002cf6 <memcmp+0x88>
c0002cc0:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002cc3:	0f b6 10             	movzbl (%eax),%edx
c0002cc6:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002cc9:	0f b6 00             	movzbl (%eax),%eax
c0002ccc:	38 c2                	cmp    %al,%dl
c0002cce:	74 1e                	je     c0002cee <memcmp+0x80>
c0002cd0:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002cd3:	0f b6 10             	movzbl (%eax),%edx
c0002cd6:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0002cd9:	0f b6 00             	movzbl (%eax),%eax
c0002cdc:	38 c2                	cmp    %al,%dl
c0002cde:	7e 07                	jle    c0002ce7 <memcmp+0x79>
c0002ce0:	b8 01 00 00 00       	mov    $0x1,%eax
c0002ce5:	eb 21                	jmp    c0002d08 <memcmp+0x9a>
c0002ce7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
c0002cec:	eb 1a                	jmp    c0002d08 <memcmp+0x9a>
c0002cee:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
c0002cf2:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
c0002cf6:	8b 45 10             	mov    0x10(%ebp),%eax
c0002cf9:	8d 50 ff             	lea    -0x1(%eax),%edx
c0002cfc:	89 55 10             	mov    %edx,0x10(%ebp)
c0002cff:	85 c0                	test   %eax,%eax
c0002d01:	75 bd                	jne    c0002cc0 <memcmp+0x52>
c0002d03:	b8 00 00 00 00       	mov    $0x0,%eax
c0002d08:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002d0b:	c9                   	leave  
c0002d0c:	c3                   	ret    

c0002d0d <strcpy>:
c0002d0d:	55                   	push   %ebp
c0002d0e:	89 e5                	mov    %esp,%ebp
c0002d10:	e8 e8 e8 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002d15:	05 eb 42 00 00       	add    $0x42eb,%eax
c0002d1a:	eb 17                	jmp    c0002d33 <strcpy+0x26>
c0002d1c:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002d1f:	8d 42 01             	lea    0x1(%edx),%eax
c0002d22:	89 45 0c             	mov    %eax,0xc(%ebp)
c0002d25:	8b 45 08             	mov    0x8(%ebp),%eax
c0002d28:	8d 48 01             	lea    0x1(%eax),%ecx
c0002d2b:	89 4d 08             	mov    %ecx,0x8(%ebp)
c0002d2e:	0f b6 12             	movzbl (%edx),%edx
c0002d31:	88 10                	mov    %dl,(%eax)
c0002d33:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002d36:	0f b6 00             	movzbl (%eax),%eax
c0002d39:	84 c0                	test   %al,%al
c0002d3b:	75 df                	jne    c0002d1c <strcpy+0xf>
c0002d3d:	90                   	nop
c0002d3e:	5d                   	pop    %ebp
c0002d3f:	c3                   	ret    

c0002d40 <strlen>:
c0002d40:	55                   	push   %ebp
c0002d41:	89 e5                	mov    %esp,%ebp
c0002d43:	83 ec 10             	sub    $0x10,%esp
c0002d46:	e8 b2 e8 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002d4b:	05 b5 42 00 00       	add    $0x42b5,%eax
c0002d50:	8b 45 08             	mov    0x8(%ebp),%eax
c0002d53:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002d56:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
c0002d5d:	eb 04                	jmp    c0002d63 <strlen+0x23>
c0002d5f:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
c0002d63:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002d66:	8d 50 01             	lea    0x1(%eax),%edx
c0002d69:	89 55 fc             	mov    %edx,-0x4(%ebp)
c0002d6c:	0f b6 00             	movzbl (%eax),%eax
c0002d6f:	84 c0                	test   %al,%al
c0002d71:	75 ec                	jne    c0002d5f <strlen+0x1f>
c0002d73:	8b 45 f8             	mov    -0x8(%ebp),%eax
c0002d76:	c9                   	leave  
c0002d77:	c3                   	ret    

c0002d78 <string_equal>:
c0002d78:	55                   	push   %ebp
c0002d79:	89 e5                	mov    %esp,%ebp
c0002d7b:	e8 7d e8 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002d80:	05 80 42 00 00       	add    $0x4280,%eax
c0002d85:	eb 19                	jmp    c0002da0 <string_equal+0x28>
c0002d87:	8b 45 08             	mov    0x8(%ebp),%eax
c0002d8a:	0f b6 00             	movzbl (%eax),%eax
c0002d8d:	84 c0                	test   %al,%al
c0002d8f:	75 07                	jne    c0002d98 <string_equal+0x20>
c0002d91:	b8 01 00 00 00       	mov    $0x1,%eax
c0002d96:	eb 1d                	jmp    c0002db5 <string_equal+0x3d>
c0002d98:	83 45 08 01          	addl   $0x1,0x8(%ebp)
c0002d9c:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
c0002da0:	8b 45 08             	mov    0x8(%ebp),%eax
c0002da3:	0f b6 10             	movzbl (%eax),%edx
c0002da6:	8b 45 0c             	mov    0xc(%ebp),%eax
c0002da9:	0f b6 00             	movzbl (%eax),%eax
c0002dac:	38 c2                	cmp    %al,%dl
c0002dae:	74 d7                	je     c0002d87 <string_equal+0xf>
c0002db0:	b8 00 00 00 00       	mov    $0x0,%eax
c0002db5:	5d                   	pop    %ebp
c0002db6:	c3                   	ret    
c0002db7:	66 90                	xchg   %ax,%ax
c0002db9:	66 90                	xchg   %ax,%ax
c0002dbb:	66 90                	xchg   %ax,%ax
c0002dbd:	66 90                	xchg   %ax,%ax
c0002dbf:	90                   	nop

c0002dc0 <allocate_pid>:
c0002dc0:	55                   	push   %ebp
c0002dc1:	89 e5                	mov    %esp,%ebp
c0002dc3:	53                   	push   %ebx
c0002dc4:	83 ec 04             	sub    $0x4,%esp
c0002dc7:	e8 35 e8 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002dcc:	81 c3 34 42 00 00    	add    $0x4234,%ebx
c0002dd2:	83 ec 0c             	sub    $0xc,%esp
c0002dd5:	c7 c0 2c 7b 00 c0    	mov    $0xc0007b2c,%eax
c0002ddb:	50                   	push   %eax
c0002ddc:	e8 e8 04 00 00       	call   c00032c9 <acquire_lock>
c0002de1:	83 c4 10             	add    $0x10,%esp
c0002de4:	0f b7 83 88 05 00 00 	movzwl 0x588(%ebx),%eax
c0002deb:	83 c0 01             	add    $0x1,%eax
c0002dee:	66 89 83 88 05 00 00 	mov    %ax,0x588(%ebx)
c0002df5:	83 ec 0c             	sub    $0xc,%esp
c0002df8:	c7 c0 2c 7b 00 c0    	mov    $0xc0007b2c,%eax
c0002dfe:	50                   	push   %eax
c0002dff:	e8 36 05 00 00       	call   c000333a <release_lock>
c0002e04:	83 c4 10             	add    $0x10,%esp
c0002e07:	0f b7 83 88 05 00 00 	movzwl 0x588(%ebx),%eax
c0002e0e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002e11:	c9                   	leave  
c0002e12:	c3                   	ret    

c0002e13 <running_thread>:
c0002e13:	55                   	push   %ebp
c0002e14:	89 e5                	mov    %esp,%ebp
c0002e16:	83 ec 10             	sub    $0x10,%esp
c0002e19:	e8 df e7 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002e1e:	05 e2 41 00 00       	add    $0x41e2,%eax
c0002e23:	89 e0                	mov    %esp,%eax
c0002e25:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002e28:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e2b:	25 00 f0 ff ff       	and    $0xfffff000,%eax
c0002e30:	c9                   	leave  
c0002e31:	c3                   	ret    

c0002e32 <kernel_thread>:
c0002e32:	55                   	push   %ebp
c0002e33:	89 e5                	mov    %esp,%ebp
c0002e35:	53                   	push   %ebx
c0002e36:	83 ec 04             	sub    $0x4,%esp
c0002e39:	e8 bf e7 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0002e3e:	05 c2 41 00 00       	add    $0x41c2,%eax
c0002e43:	89 c3                	mov    %eax,%ebx
c0002e45:	e8 97 f4 ff ff       	call   c00022e1 <intopen>
c0002e4a:	83 ec 0c             	sub    $0xc,%esp
c0002e4d:	ff 75 0c             	pushl  0xc(%ebp)
c0002e50:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e53:	ff d0                	call   *%eax
c0002e55:	83 c4 10             	add    $0x10,%esp
c0002e58:	90                   	nop
c0002e59:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002e5c:	c9                   	leave  
c0002e5d:	c3                   	ret    

c0002e5e <thread_create>:
c0002e5e:	55                   	push   %ebp
c0002e5f:	89 e5                	mov    %esp,%ebp
c0002e61:	83 ec 10             	sub    $0x10,%esp
c0002e64:	e8 78 05 00 00       	call   c00033e1 <__x86.get_pc_thunk.dx>
c0002e69:	81 c2 97 41 00 00    	add    $0x4197,%edx
c0002e6f:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e72:	8b 00                	mov    (%eax),%eax
c0002e74:	8d 88 d0 fe ff ff    	lea    -0x130(%eax),%ecx
c0002e7a:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e7d:	89 08                	mov    %ecx,(%eax)
c0002e7f:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e82:	8b 00                	mov    (%eax),%eax
c0002e84:	8d 48 80             	lea    -0x80(%eax),%ecx
c0002e87:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e8a:	89 08                	mov    %ecx,(%eax)
c0002e8c:	8b 45 08             	mov    0x8(%ebp),%eax
c0002e8f:	8b 00                	mov    (%eax),%eax
c0002e91:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0002e94:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002e97:	8d 92 32 be ff ff    	lea    -0x41ce(%edx),%edx
c0002e9d:	89 50 10             	mov    %edx,0x10(%eax)
c0002ea0:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002ea3:	8b 55 0c             	mov    0xc(%ebp),%edx
c0002ea6:	89 50 18             	mov    %edx,0x18(%eax)
c0002ea9:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002eac:	8b 55 10             	mov    0x10(%ebp),%edx
c0002eaf:	89 50 1c             	mov    %edx,0x1c(%eax)
c0002eb2:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002eb5:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
c0002ebc:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002ebf:	8b 50 0c             	mov    0xc(%eax),%edx
c0002ec2:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002ec5:	89 50 08             	mov    %edx,0x8(%eax)
c0002ec8:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002ecb:	8b 50 08             	mov    0x8(%eax),%edx
c0002ece:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002ed1:	89 50 04             	mov    %edx,0x4(%eax)
c0002ed4:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002ed7:	8b 50 04             	mov    0x4(%eax),%edx
c0002eda:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0002edd:	89 10                	mov    %edx,(%eax)
c0002edf:	90                   	nop
c0002ee0:	c9                   	leave  
c0002ee1:	c3                   	ret    

c0002ee2 <init_thread>:
c0002ee2:	55                   	push   %ebp
c0002ee3:	89 e5                	mov    %esp,%ebp
c0002ee5:	53                   	push   %ebx
c0002ee6:	83 ec 04             	sub    $0x4,%esp
c0002ee9:	e8 13 e7 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002eee:	81 c3 12 41 00 00    	add    $0x4112,%ebx
c0002ef4:	83 ec 04             	sub    $0x4,%esp
c0002ef7:	68 00 10 00 00       	push   $0x1000
c0002efc:	6a 00                	push   $0x0
c0002efe:	ff 75 08             	pushl  0x8(%ebp)
c0002f01:	e8 80 fc ff ff       	call   c0002b86 <memset>
c0002f06:	83 c4 10             	add    $0x10,%esp
c0002f09:	e8 b2 fe ff ff       	call   c0002dc0 <allocate_pid>
c0002f0e:	89 c2                	mov    %eax,%edx
c0002f10:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f13:	66 89 50 04          	mov    %dx,0x4(%eax)
c0002f17:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f1a:	83 c0 0d             	add    $0xd,%eax
c0002f1d:	83 ec 08             	sub    $0x8,%esp
c0002f20:	ff 75 0c             	pushl  0xc(%ebp)
c0002f23:	50                   	push   %eax
c0002f24:	e8 e4 fd ff ff       	call   c0002d0d <strcpy>
c0002f29:	83 c4 10             	add    $0x10,%esp
c0002f2c:	c7 c0 24 7b 00 c0    	mov    $0xc0007b24,%eax
c0002f32:	8b 00                	mov    (%eax),%eax
c0002f34:	39 45 08             	cmp    %eax,0x8(%ebp)
c0002f37:	75 0c                	jne    c0002f45 <init_thread+0x63>
c0002f39:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f3c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
c0002f43:	eb 0a                	jmp    c0002f4f <init_thread+0x6d>
c0002f45:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f48:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
c0002f4f:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f52:	05 00 10 00 00       	add    $0x1000,%eax
c0002f57:	89 c2                	mov    %eax,%edx
c0002f59:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f5c:	89 10                	mov    %edx,(%eax)
c0002f5e:	8b 45 10             	mov    0x10(%ebp),%eax
c0002f61:	89 c2                	mov    %eax,%edx
c0002f63:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f66:	88 50 0c             	mov    %dl,0xc(%eax)
c0002f69:	8b 55 10             	mov    0x10(%ebp),%edx
c0002f6c:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f6f:	89 50 20             	mov    %edx,0x20(%eax)
c0002f72:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f75:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
c0002f7c:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f7f:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%eax)
c0002f86:	8b 45 08             	mov    0x8(%ebp),%eax
c0002f89:	c7 40 48 06 07 92 19 	movl   $0x19920706,0x48(%eax)
c0002f90:	90                   	nop
c0002f91:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0002f94:	c9                   	leave  
c0002f95:	c3                   	ret    

c0002f96 <thread_start>:
c0002f96:	55                   	push   %ebp
c0002f97:	89 e5                	mov    %esp,%ebp
c0002f99:	53                   	push   %ebx
c0002f9a:	83 ec 14             	sub    $0x14,%esp
c0002f9d:	e8 5f e6 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0002fa2:	81 c3 5e 40 00 00    	add    $0x405e,%ebx
c0002fa8:	83 ec 0c             	sub    $0xc,%esp
c0002fab:	6a 01                	push   $0x1
c0002fad:	e8 bf f9 ff ff       	call   c0002971 <get_kernel_pages>
c0002fb2:	83 c4 10             	add    $0x10,%esp
c0002fb5:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0002fb8:	83 ec 04             	sub    $0x4,%esp
c0002fbb:	ff 75 14             	pushl  0x14(%ebp)
c0002fbe:	ff 75 08             	pushl  0x8(%ebp)
c0002fc1:	ff 75 f4             	pushl  -0xc(%ebp)
c0002fc4:	e8 19 ff ff ff       	call   c0002ee2 <init_thread>
c0002fc9:	83 c4 10             	add    $0x10,%esp
c0002fcc:	83 ec 04             	sub    $0x4,%esp
c0002fcf:	ff 75 10             	pushl  0x10(%ebp)
c0002fd2:	ff 75 0c             	pushl  0xc(%ebp)
c0002fd5:	ff 75 f4             	pushl  -0xc(%ebp)
c0002fd8:	e8 81 fe ff ff       	call   c0002e5e <thread_create>
c0002fdd:	83 c4 10             	add    $0x10,%esp
c0002fe0:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002fe3:	83 c0 28             	add    $0x28,%eax
c0002fe6:	83 ec 08             	sub    $0x8,%esp
c0002fe9:	50                   	push   %eax
c0002fea:	c7 c0 04 7b 00 c0    	mov    $0xc0007b04,%eax
c0002ff0:	50                   	push   %eax
c0002ff1:	e8 97 04 00 00       	call   c000348d <_list_add_back>
c0002ff6:	83 c4 10             	add    $0x10,%esp
c0002ff9:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0002ffc:	83 c0 30             	add    $0x30,%eax
c0002fff:	83 ec 08             	sub    $0x8,%esp
c0003002:	50                   	push   %eax
c0003003:	c7 c0 14 7b 00 c0    	mov    $0xc0007b14,%eax
c0003009:	50                   	push   %eax
c000300a:	e8 7e 04 00 00       	call   c000348d <_list_add_back>
c000300f:	83 c4 10             	add    $0x10,%esp
c0003012:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003015:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003018:	c9                   	leave  
c0003019:	c3                   	ret    

c000301a <make_main_thread>:
c000301a:	55                   	push   %ebp
c000301b:	89 e5                	mov    %esp,%ebp
c000301d:	53                   	push   %ebx
c000301e:	83 ec 04             	sub    $0x4,%esp
c0003021:	e8 db e5 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003026:	81 c3 da 3f 00 00    	add    $0x3fda,%ebx
c000302c:	e8 e2 fd ff ff       	call   c0002e13 <running_thread>
c0003031:	89 c2                	mov    %eax,%edx
c0003033:	c7 c0 24 7b 00 c0    	mov    $0xc0007b24,%eax
c0003039:	89 10                	mov    %edx,(%eax)
c000303b:	c7 c0 24 7b 00 c0    	mov    $0xc0007b24,%eax
c0003041:	8b 00                	mov    (%eax),%eax
c0003043:	83 ec 04             	sub    $0x4,%esp
c0003046:	6a 3c                	push   $0x3c
c0003048:	8d 93 60 d7 ff ff    	lea    -0x28a0(%ebx),%edx
c000304e:	52                   	push   %edx
c000304f:	50                   	push   %eax
c0003050:	e8 8d fe ff ff       	call   c0002ee2 <init_thread>
c0003055:	83 c4 10             	add    $0x10,%esp
c0003058:	c7 c0 24 7b 00 c0    	mov    $0xc0007b24,%eax
c000305e:	8b 00                	mov    (%eax),%eax
c0003060:	83 c0 30             	add    $0x30,%eax
c0003063:	83 ec 08             	sub    $0x8,%esp
c0003066:	50                   	push   %eax
c0003067:	c7 c0 14 7b 00 c0    	mov    $0xc0007b14,%eax
c000306d:	50                   	push   %eax
c000306e:	e8 1a 04 00 00       	call   c000348d <_list_add_back>
c0003073:	83 c4 10             	add    $0x10,%esp
c0003076:	90                   	nop
c0003077:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000307a:	c9                   	leave  
c000307b:	c3                   	ret    

c000307c <set_prio>:
c000307c:	55                   	push   %ebp
c000307d:	89 e5                	mov    %esp,%ebp
c000307f:	53                   	push   %ebx
c0003080:	83 ec 24             	sub    $0x24,%esp
c0003083:	e8 79 e5 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003088:	81 c3 78 3f 00 00    	add    $0x3f78,%ebx
c000308e:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003091:	88 45 e4             	mov    %al,-0x1c(%ebp)
c0003094:	83 ec 0c             	sub    $0xc,%esp
c0003097:	c7 c0 14 7b 00 c0    	mov    $0xc0007b14,%eax
c000309d:	50                   	push   %eax
c000309e:	e8 ab 04 00 00       	call   c000354e <_list_front>
c00030a3:	83 c4 10             	add    $0x10,%esp
c00030a6:	83 e8 30             	sub    $0x30,%eax
c00030a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00030ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00030af:	83 c0 0d             	add    $0xd,%eax
c00030b2:	83 ec 08             	sub    $0x8,%esp
c00030b5:	50                   	push   %eax
c00030b6:	ff 75 08             	pushl  0x8(%ebp)
c00030b9:	e8 ba fc ff ff       	call   c0002d78 <string_equal>
c00030be:	83 c4 10             	add    $0x10,%esp
c00030c1:	85 c0                	test   %eax,%eax
c00030c3:	74 0a                	je     c00030cf <set_prio+0x53>
c00030c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00030c8:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx
c00030cc:	88 50 0c             	mov    %dl,0xc(%eax)
c00030cf:	90                   	nop
c00030d0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00030d3:	c9                   	leave  
c00030d4:	c3                   	ret    

c00030d5 <sched>:
c00030d5:	55                   	push   %ebp
c00030d6:	89 e5                	mov    %esp,%ebp
c00030d8:	53                   	push   %ebx
c00030d9:	83 ec 14             	sub    $0x14,%esp
c00030dc:	e8 20 e5 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c00030e1:	81 c3 1f 3f 00 00    	add    $0x3f1f,%ebx
c00030e7:	e8 27 fd ff ff       	call   c0002e13 <running_thread>
c00030ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00030ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00030f2:	8b 40 08             	mov    0x8(%eax),%eax
c00030f5:	85 c0                	test   %eax,%eax
c00030f7:	75 33                	jne    c000312c <sched+0x57>
c00030f9:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00030fc:	83 c0 28             	add    $0x28,%eax
c00030ff:	83 ec 08             	sub    $0x8,%esp
c0003102:	50                   	push   %eax
c0003103:	c7 c0 04 7b 00 c0    	mov    $0xc0007b04,%eax
c0003109:	50                   	push   %eax
c000310a:	e8 7e 03 00 00       	call   c000348d <_list_add_back>
c000310f:	83 c4 10             	add    $0x10,%esp
c0003112:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003115:	0f b6 40 0c          	movzbl 0xc(%eax),%eax
c0003119:	0f b6 d0             	movzbl %al,%edx
c000311c:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000311f:	89 50 20             	mov    %edx,0x20(%eax)
c0003122:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003125:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
c000312c:	c7 c0 28 7b 00 c0    	mov    $0xc0007b28,%eax
c0003132:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c0003138:	83 ec 0c             	sub    $0xc,%esp
c000313b:	c7 c0 04 7b 00 c0    	mov    $0xc0007b04,%eax
c0003141:	50                   	push   %eax
c0003142:	e8 9e 03 00 00       	call   c00034e5 <_list_pop_front>
c0003147:	83 c4 10             	add    $0x10,%esp
c000314a:	89 c2                	mov    %eax,%edx
c000314c:	c7 c0 28 7b 00 c0    	mov    $0xc0007b28,%eax
c0003152:	89 10                	mov    %edx,(%eax)
c0003154:	c7 c0 28 7b 00 c0    	mov    $0xc0007b28,%eax
c000315a:	8b 00                	mov    (%eax),%eax
c000315c:	83 e8 28             	sub    $0x28,%eax
c000315f:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003162:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0003165:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
c000316c:	83 ec 0c             	sub    $0xc,%esp
c000316f:	ff 75 f0             	pushl  -0x10(%ebp)
c0003172:	e8 5b 11 00 00       	call   c00042d2 <process_activate>
c0003177:	83 c4 10             	add    $0x10,%esp
c000317a:	83 ec 08             	sub    $0x8,%esp
c000317d:	ff 75 f0             	pushl  -0x10(%ebp)
c0003180:	ff 75 f4             	pushl  -0xc(%ebp)
c0003183:	e8 f8 00 00 00       	call   c0003280 <switch_to>
c0003188:	83 c4 10             	add    $0x10,%esp
c000318b:	90                   	nop
c000318c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000318f:	c9                   	leave  
c0003190:	c3                   	ret    

c0003191 <thread_init>:
c0003191:	55                   	push   %ebp
c0003192:	89 e5                	mov    %esp,%ebp
c0003194:	53                   	push   %ebx
c0003195:	83 ec 04             	sub    $0x4,%esp
c0003198:	e8 64 e4 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c000319d:	81 c3 63 3e 00 00    	add    $0x3e63,%ebx
c00031a3:	83 ec 0c             	sub    $0xc,%esp
c00031a6:	c7 c0 04 7b 00 c0    	mov    $0xc0007b04,%eax
c00031ac:	50                   	push   %eax
c00031ad:	e8 33 02 00 00       	call   c00033e5 <_list_init>
c00031b2:	83 c4 10             	add    $0x10,%esp
c00031b5:	83 ec 0c             	sub    $0xc,%esp
c00031b8:	c7 c0 14 7b 00 c0    	mov    $0xc0007b14,%eax
c00031be:	50                   	push   %eax
c00031bf:	e8 21 02 00 00       	call   c00033e5 <_list_init>
c00031c4:	83 c4 10             	add    $0x10,%esp
c00031c7:	83 ec 0c             	sub    $0xc,%esp
c00031ca:	c7 c0 2c 7b 00 c0    	mov    $0xc0007b2c,%eax
c00031d0:	50                   	push   %eax
c00031d1:	e8 bf 00 00 00       	call   c0003295 <init_lock>
c00031d6:	83 c4 10             	add    $0x10,%esp
c00031d9:	e8 3c fe ff ff       	call   c000301a <make_main_thread>
c00031de:	90                   	nop
c00031df:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00031e2:	c9                   	leave  
c00031e3:	c3                   	ret    

c00031e4 <thread_block>:
c00031e4:	55                   	push   %ebp
c00031e5:	89 e5                	mov    %esp,%ebp
c00031e7:	53                   	push   %ebx
c00031e8:	83 ec 14             	sub    $0x14,%esp
c00031eb:	e8 11 e4 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c00031f0:	81 c3 10 3e 00 00    	add    $0x3e10,%ebx
c00031f6:	e8 3e f1 ff ff       	call   c0002339 <intr_status>
c00031fb:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00031fe:	e8 0a f1 ff ff       	call   c000230d <intclose>
c0003203:	e8 0b fc ff ff       	call   c0002e13 <running_thread>
c0003208:	89 45 f0             	mov    %eax,-0x10(%ebp)
c000320b:	8b 45 f0             	mov    -0x10(%ebp),%eax
c000320e:	8b 55 08             	mov    0x8(%ebp),%edx
c0003211:	89 50 08             	mov    %edx,0x8(%eax)
c0003214:	e8 bc fe ff ff       	call   c00030d5 <sched>
c0003219:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000321d:	74 05                	je     c0003224 <thread_block+0x40>
c000321f:	e8 bd f0 ff ff       	call   c00022e1 <intopen>
c0003224:	90                   	nop
c0003225:	83 c4 14             	add    $0x14,%esp
c0003228:	5b                   	pop    %ebx
c0003229:	5d                   	pop    %ebp
c000322a:	c3                   	ret    

c000322b <thread_unblock>:
c000322b:	55                   	push   %ebp
c000322c:	89 e5                	mov    %esp,%ebp
c000322e:	53                   	push   %ebx
c000322f:	83 ec 14             	sub    $0x14,%esp
c0003232:	e8 ca e3 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003237:	81 c3 c9 3d 00 00    	add    $0x3dc9,%ebx
c000323d:	e8 f7 f0 ff ff       	call   c0002339 <intr_status>
c0003242:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003245:	e8 c3 f0 ff ff       	call   c000230d <intclose>
c000324a:	8b 45 08             	mov    0x8(%ebp),%eax
c000324d:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
c0003254:	8b 45 08             	mov    0x8(%ebp),%eax
c0003257:	83 c0 28             	add    $0x28,%eax
c000325a:	83 ec 08             	sub    $0x8,%esp
c000325d:	50                   	push   %eax
c000325e:	c7 c0 04 7b 00 c0    	mov    $0xc0007b04,%eax
c0003264:	50                   	push   %eax
c0003265:	e8 cf 01 00 00       	call   c0003439 <_list_add_front>
c000326a:	83 c4 10             	add    $0x10,%esp
c000326d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c0003271:	74 05                	je     c0003278 <thread_unblock+0x4d>
c0003273:	e8 69 f0 ff ff       	call   c00022e1 <intopen>
c0003278:	90                   	nop
c0003279:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000327c:	c9                   	leave  
c000327d:	c3                   	ret    
c000327e:	66 90                	xchg   %ax,%ax

c0003280 <switch_to>:
c0003280:	56                   	push   %esi
c0003281:	57                   	push   %edi
c0003282:	53                   	push   %ebx
c0003283:	55                   	push   %ebp
c0003284:	8b 44 24 14          	mov    0x14(%esp),%eax
c0003288:	89 20                	mov    %esp,(%eax)
c000328a:	8b 44 24 18          	mov    0x18(%esp),%eax
c000328e:	8b 20                	mov    (%eax),%esp
c0003290:	5d                   	pop    %ebp
c0003291:	5b                   	pop    %ebx
c0003292:	5f                   	pop    %edi
c0003293:	5e                   	pop    %esi
c0003294:	c3                   	ret    

c0003295 <init_lock>:
c0003295:	55                   	push   %ebp
c0003296:	89 e5                	mov    %esp,%ebp
c0003298:	53                   	push   %ebx
c0003299:	83 ec 04             	sub    $0x4,%esp
c000329c:	e8 5c e3 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00032a1:	05 5f 3d 00 00       	add    $0x3d5f,%eax
c00032a6:	8b 55 08             	mov    0x8(%ebp),%edx
c00032a9:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
c00032af:	8b 55 08             	mov    0x8(%ebp),%edx
c00032b2:	83 c2 04             	add    $0x4,%edx
c00032b5:	83 ec 0c             	sub    $0xc,%esp
c00032b8:	52                   	push   %edx
c00032b9:	89 c3                	mov    %eax,%ebx
c00032bb:	e8 25 01 00 00       	call   c00033e5 <_list_init>
c00032c0:	83 c4 10             	add    $0x10,%esp
c00032c3:	90                   	nop
c00032c4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00032c7:	c9                   	leave  
c00032c8:	c3                   	ret    

c00032c9 <acquire_lock>:
c00032c9:	55                   	push   %ebp
c00032ca:	89 e5                	mov    %esp,%ebp
c00032cc:	53                   	push   %ebx
c00032cd:	83 ec 14             	sub    $0x14,%esp
c00032d0:	e8 2c e3 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c00032d5:	81 c3 2b 3d 00 00    	add    $0x3d2b,%ebx
c00032db:	e8 59 f0 ff ff       	call   c0002339 <intr_status>
c00032e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00032e3:	e8 25 f0 ff ff       	call   c000230d <intclose>
c00032e8:	e8 26 fb ff ff       	call   c0002e13 <running_thread>
c00032ed:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00032f0:	eb 26                	jmp    c0003318 <acquire_lock+0x4f>
c00032f2:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00032f5:	8d 50 28             	lea    0x28(%eax),%edx
c00032f8:	8b 45 08             	mov    0x8(%ebp),%eax
c00032fb:	83 c0 04             	add    $0x4,%eax
c00032fe:	83 ec 08             	sub    $0x8,%esp
c0003301:	52                   	push   %edx
c0003302:	50                   	push   %eax
c0003303:	e8 85 01 00 00       	call   c000348d <_list_add_back>
c0003308:	83 c4 10             	add    $0x10,%esp
c000330b:	83 ec 0c             	sub    $0xc,%esp
c000330e:	6a 02                	push   $0x2
c0003310:	e8 cf fe ff ff       	call   c00031e4 <thread_block>
c0003315:	83 c4 10             	add    $0x10,%esp
c0003318:	8b 45 08             	mov    0x8(%ebp),%eax
c000331b:	8b 00                	mov    (%eax),%eax
c000331d:	85 c0                	test   %eax,%eax
c000331f:	75 d1                	jne    c00032f2 <acquire_lock+0x29>
c0003321:	8b 45 08             	mov    0x8(%ebp),%eax
c0003324:	8b 55 f0             	mov    -0x10(%ebp),%edx
c0003327:	89 10                	mov    %edx,(%eax)
c0003329:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000332d:	74 05                	je     c0003334 <acquire_lock+0x6b>
c000332f:	e8 ad ef ff ff       	call   c00022e1 <intopen>
c0003334:	90                   	nop
c0003335:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003338:	c9                   	leave  
c0003339:	c3                   	ret    

c000333a <release_lock>:
c000333a:	55                   	push   %ebp
c000333b:	89 e5                	mov    %esp,%ebp
c000333d:	56                   	push   %esi
c000333e:	53                   	push   %ebx
c000333f:	83 ec 10             	sub    $0x10,%esp
c0003342:	e8 ba e2 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003347:	81 c3 b9 3c 00 00    	add    $0x3cb9,%ebx
c000334d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003350:	8b 30                	mov    (%eax),%esi
c0003352:	e8 bc fa ff ff       	call   c0002e13 <running_thread>
c0003357:	39 c6                	cmp    %eax,%esi
c0003359:	74 26                	je     c0003381 <release_lock+0x47>
c000335b:	e8 ad ef ff ff       	call   c000230d <intclose>
c0003360:	83 ec 0c             	sub    $0xc,%esp
c0003363:	6a 0a                	push   $0xa
c0003365:	e8 a6 e2 ff ff       	call   c0001610 <put_char>
c000336a:	83 c4 10             	add    $0x10,%esp
c000336d:	83 ec 0c             	sub    $0xc,%esp
c0003370:	8d 83 6c d7 ff ff    	lea    -0x2894(%ebx),%eax
c0003376:	50                   	push   %eax
c0003377:	e8 88 e3 ff ff       	call   c0001704 <put_str>
c000337c:	83 c4 10             	add    $0x10,%esp
c000337f:	eb fe                	jmp    c000337f <release_lock+0x45>
c0003381:	e8 b3 ef ff ff       	call   c0002339 <intr_status>
c0003386:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003389:	e8 7f ef ff ff       	call   c000230d <intclose>
c000338e:	8b 45 08             	mov    0x8(%ebp),%eax
c0003391:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c0003397:	8b 45 08             	mov    0x8(%ebp),%eax
c000339a:	83 c0 04             	add    $0x4,%eax
c000339d:	83 ec 0c             	sub    $0xc,%esp
c00033a0:	50                   	push   %eax
c00033a1:	e8 76 02 00 00       	call   c000361c <_list_empty>
c00033a6:	83 c4 10             	add    $0x10,%esp
c00033a9:	84 c0                	test   %al,%al
c00033ab:	75 21                	jne    c00033ce <release_lock+0x94>
c00033ad:	8b 45 08             	mov    0x8(%ebp),%eax
c00033b0:	83 c0 04             	add    $0x4,%eax
c00033b3:	83 ec 0c             	sub    $0xc,%esp
c00033b6:	50                   	push   %eax
c00033b7:	e8 29 01 00 00       	call   c00034e5 <_list_pop_front>
c00033bc:	83 c4 10             	add    $0x10,%esp
c00033bf:	83 e8 28             	sub    $0x28,%eax
c00033c2:	83 ec 0c             	sub    $0xc,%esp
c00033c5:	50                   	push   %eax
c00033c6:	e8 60 fe ff ff       	call   c000322b <thread_unblock>
c00033cb:	83 c4 10             	add    $0x10,%esp
c00033ce:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00033d2:	74 05                	je     c00033d9 <release_lock+0x9f>
c00033d4:	e8 08 ef ff ff       	call   c00022e1 <intopen>
c00033d9:	90                   	nop
c00033da:	8d 65 f8             	lea    -0x8(%ebp),%esp
c00033dd:	5b                   	pop    %ebx
c00033de:	5e                   	pop    %esi
c00033df:	5d                   	pop    %ebp
c00033e0:	c3                   	ret    

c00033e1 <__x86.get_pc_thunk.dx>:
c00033e1:	8b 14 24             	mov    (%esp),%edx
c00033e4:	c3                   	ret    

c00033e5 <_list_init>:
c00033e5:	55                   	push   %ebp
c00033e6:	89 e5                	mov    %esp,%ebp
c00033e8:	53                   	push   %ebx
c00033e9:	83 ec 14             	sub    $0x14,%esp
c00033ec:	e8 10 e2 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c00033f1:	81 c3 0f 3c 00 00    	add    $0x3c0f,%ebx
c00033f7:	e8 3d ef ff ff       	call   c0002339 <intr_status>
c00033fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00033ff:	8b 45 08             	mov    0x8(%ebp),%eax
c0003402:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
c0003408:	8b 45 08             	mov    0x8(%ebp),%eax
c000340b:	8d 50 08             	lea    0x8(%eax),%edx
c000340e:	8b 45 08             	mov    0x8(%ebp),%eax
c0003411:	89 50 04             	mov    %edx,0x4(%eax)
c0003414:	8b 55 08             	mov    0x8(%ebp),%edx
c0003417:	8b 45 08             	mov    0x8(%ebp),%eax
c000341a:	89 50 08             	mov    %edx,0x8(%eax)
c000341d:	8b 45 08             	mov    0x8(%ebp),%eax
c0003420:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
c0003427:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000342b:	74 05                	je     c0003432 <_list_init+0x4d>
c000342d:	e8 af ee ff ff       	call   c00022e1 <intopen>
c0003432:	90                   	nop
c0003433:	83 c4 14             	add    $0x14,%esp
c0003436:	5b                   	pop    %ebx
c0003437:	5d                   	pop    %ebp
c0003438:	c3                   	ret    

c0003439 <_list_add_front>:
c0003439:	55                   	push   %ebp
c000343a:	89 e5                	mov    %esp,%ebp
c000343c:	53                   	push   %ebx
c000343d:	83 ec 14             	sub    $0x14,%esp
c0003440:	e8 bc e1 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003445:	81 c3 bb 3b 00 00    	add    $0x3bbb,%ebx
c000344b:	e8 e9 ee ff ff       	call   c0002339 <intr_status>
c0003450:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003453:	8b 55 08             	mov    0x8(%ebp),%edx
c0003456:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003459:	89 10                	mov    %edx,(%eax)
c000345b:	8b 45 08             	mov    0x8(%ebp),%eax
c000345e:	8b 50 04             	mov    0x4(%eax),%edx
c0003461:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003464:	89 50 04             	mov    %edx,0x4(%eax)
c0003467:	8b 45 08             	mov    0x8(%ebp),%eax
c000346a:	8b 40 04             	mov    0x4(%eax),%eax
c000346d:	8b 55 0c             	mov    0xc(%ebp),%edx
c0003470:	89 10                	mov    %edx,(%eax)
c0003472:	8b 45 08             	mov    0x8(%ebp),%eax
c0003475:	8b 55 0c             	mov    0xc(%ebp),%edx
c0003478:	89 50 04             	mov    %edx,0x4(%eax)
c000347b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000347f:	74 05                	je     c0003486 <_list_add_front+0x4d>
c0003481:	e8 5b ee ff ff       	call   c00022e1 <intopen>
c0003486:	90                   	nop
c0003487:	83 c4 14             	add    $0x14,%esp
c000348a:	5b                   	pop    %ebx
c000348b:	5d                   	pop    %ebp
c000348c:	c3                   	ret    

c000348d <_list_add_back>:
c000348d:	55                   	push   %ebp
c000348e:	89 e5                	mov    %esp,%ebp
c0003490:	53                   	push   %ebx
c0003491:	83 ec 14             	sub    $0x14,%esp
c0003494:	e8 68 e1 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003499:	81 c3 67 3b 00 00    	add    $0x3b67,%ebx
c000349f:	e8 95 ee ff ff       	call   c0002339 <intr_status>
c00034a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00034a7:	8b 45 08             	mov    0x8(%ebp),%eax
c00034aa:	8d 50 08             	lea    0x8(%eax),%edx
c00034ad:	8b 45 0c             	mov    0xc(%ebp),%eax
c00034b0:	89 50 04             	mov    %edx,0x4(%eax)
c00034b3:	8b 45 08             	mov    0x8(%ebp),%eax
c00034b6:	8b 50 08             	mov    0x8(%eax),%edx
c00034b9:	8b 45 0c             	mov    0xc(%ebp),%eax
c00034bc:	89 10                	mov    %edx,(%eax)
c00034be:	8b 45 08             	mov    0x8(%ebp),%eax
c00034c1:	8b 40 08             	mov    0x8(%eax),%eax
c00034c4:	8b 55 0c             	mov    0xc(%ebp),%edx
c00034c7:	89 50 04             	mov    %edx,0x4(%eax)
c00034ca:	8b 45 08             	mov    0x8(%ebp),%eax
c00034cd:	8b 55 0c             	mov    0xc(%ebp),%edx
c00034d0:	89 50 08             	mov    %edx,0x8(%eax)
c00034d3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00034d7:	74 05                	je     c00034de <_list_add_back+0x51>
c00034d9:	e8 03 ee ff ff       	call   c00022e1 <intopen>
c00034de:	90                   	nop
c00034df:	83 c4 14             	add    $0x14,%esp
c00034e2:	5b                   	pop    %ebx
c00034e3:	5d                   	pop    %ebp
c00034e4:	c3                   	ret    

c00034e5 <_list_pop_front>:
c00034e5:	55                   	push   %ebp
c00034e6:	89 e5                	mov    %esp,%ebp
c00034e8:	53                   	push   %ebx
c00034e9:	83 ec 14             	sub    $0x14,%esp
c00034ec:	e8 10 e1 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c00034f1:	81 c3 0f 3b 00 00    	add    $0x3b0f,%ebx
c00034f7:	e8 3d ee ff ff       	call   c0002339 <intr_status>
c00034fc:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00034ff:	83 ec 0c             	sub    $0xc,%esp
c0003502:	ff 75 08             	pushl  0x8(%ebp)
c0003505:	e8 12 01 00 00       	call   c000361c <_list_empty>
c000350a:	83 c4 10             	add    $0x10,%esp
c000350d:	84 c0                	test   %al,%al
c000350f:	74 07                	je     c0003518 <_list_pop_front+0x33>
c0003511:	b8 00 00 00 00       	mov    $0x0,%eax
c0003516:	eb 31                	jmp    c0003549 <_list_pop_front+0x64>
c0003518:	8b 45 08             	mov    0x8(%ebp),%eax
c000351b:	8b 40 04             	mov    0x4(%eax),%eax
c000351e:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003521:	8b 45 08             	mov    0x8(%ebp),%eax
c0003524:	8b 40 04             	mov    0x4(%eax),%eax
c0003527:	8b 50 04             	mov    0x4(%eax),%edx
c000352a:	8b 45 08             	mov    0x8(%ebp),%eax
c000352d:	89 50 04             	mov    %edx,0x4(%eax)
c0003530:	8b 45 08             	mov    0x8(%ebp),%eax
c0003533:	8b 40 04             	mov    0x4(%eax),%eax
c0003536:	8b 55 08             	mov    0x8(%ebp),%edx
c0003539:	89 10                	mov    %edx,(%eax)
c000353b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c000353f:	74 05                	je     c0003546 <_list_pop_front+0x61>
c0003541:	e8 9b ed ff ff       	call   c00022e1 <intopen>
c0003546:	8b 45 f0             	mov    -0x10(%ebp),%eax
c0003549:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000354c:	c9                   	leave  
c000354d:	c3                   	ret    

c000354e <_list_front>:
c000354e:	55                   	push   %ebp
c000354f:	89 e5                	mov    %esp,%ebp
c0003551:	83 ec 08             	sub    $0x8,%esp
c0003554:	e8 a4 e0 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003559:	05 a7 3a 00 00       	add    $0x3aa7,%eax
c000355e:	83 ec 0c             	sub    $0xc,%esp
c0003561:	ff 75 08             	pushl  0x8(%ebp)
c0003564:	e8 b3 00 00 00       	call   c000361c <_list_empty>
c0003569:	83 c4 10             	add    $0x10,%esp
c000356c:	84 c0                	test   %al,%al
c000356e:	74 07                	je     c0003577 <_list_front+0x29>
c0003570:	b8 00 00 00 00       	mov    $0x0,%eax
c0003575:	eb 06                	jmp    c000357d <_list_front+0x2f>
c0003577:	8b 45 08             	mov    0x8(%ebp),%eax
c000357a:	8b 40 04             	mov    0x4(%eax),%eax
c000357d:	c9                   	leave  
c000357e:	c3                   	ret    

c000357f <_list_pop_back>:
c000357f:	55                   	push   %ebp
c0003580:	89 e5                	mov    %esp,%ebp
c0003582:	53                   	push   %ebx
c0003583:	83 ec 14             	sub    $0x14,%esp
c0003586:	e8 76 e0 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c000358b:	81 c3 75 3a 00 00    	add    $0x3a75,%ebx
c0003591:	e8 a3 ed ff ff       	call   c0002339 <intr_status>
c0003596:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003599:	83 ec 0c             	sub    $0xc,%esp
c000359c:	ff 75 08             	pushl  0x8(%ebp)
c000359f:	e8 78 00 00 00       	call   c000361c <_list_empty>
c00035a4:	83 c4 10             	add    $0x10,%esp
c00035a7:	84 c0                	test   %al,%al
c00035a9:	74 07                	je     c00035b2 <_list_pop_back+0x33>
c00035ab:	b8 00 00 00 00       	mov    $0x0,%eax
c00035b0:	eb 34                	jmp    c00035e6 <_list_pop_back+0x67>
c00035b2:	8b 45 08             	mov    0x8(%ebp),%eax
c00035b5:	8b 40 08             	mov    0x8(%eax),%eax
c00035b8:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00035bb:	8b 45 08             	mov    0x8(%ebp),%eax
c00035be:	8b 40 08             	mov    0x8(%eax),%eax
c00035c1:	8b 10                	mov    (%eax),%edx
c00035c3:	8b 45 08             	mov    0x8(%ebp),%eax
c00035c6:	89 50 08             	mov    %edx,0x8(%eax)
c00035c9:	8b 45 08             	mov    0x8(%ebp),%eax
c00035cc:	8b 40 08             	mov    0x8(%eax),%eax
c00035cf:	8b 55 08             	mov    0x8(%ebp),%edx
c00035d2:	83 c2 08             	add    $0x8,%edx
c00035d5:	89 50 04             	mov    %edx,0x4(%eax)
c00035d8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
c00035dc:	74 05                	je     c00035e3 <_list_pop_back+0x64>
c00035de:	e8 fe ec ff ff       	call   c00022e1 <intopen>
c00035e3:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00035e6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00035e9:	c9                   	leave  
c00035ea:	c3                   	ret    

c00035eb <_list_back>:
c00035eb:	55                   	push   %ebp
c00035ec:	89 e5                	mov    %esp,%ebp
c00035ee:	83 ec 08             	sub    $0x8,%esp
c00035f1:	e8 07 e0 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00035f6:	05 0a 3a 00 00       	add    $0x3a0a,%eax
c00035fb:	83 ec 0c             	sub    $0xc,%esp
c00035fe:	ff 75 08             	pushl  0x8(%ebp)
c0003601:	e8 16 00 00 00       	call   c000361c <_list_empty>
c0003606:	83 c4 10             	add    $0x10,%esp
c0003609:	84 c0                	test   %al,%al
c000360b:	74 07                	je     c0003614 <_list_back+0x29>
c000360d:	b8 00 00 00 00       	mov    $0x0,%eax
c0003612:	eb 06                	jmp    c000361a <_list_back+0x2f>
c0003614:	8b 45 08             	mov    0x8(%ebp),%eax
c0003617:	8b 40 08             	mov    0x8(%eax),%eax
c000361a:	c9                   	leave  
c000361b:	c3                   	ret    

c000361c <_list_empty>:
c000361c:	55                   	push   %ebp
c000361d:	89 e5                	mov    %esp,%ebp
c000361f:	e8 d9 df ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003624:	05 dc 39 00 00       	add    $0x39dc,%eax
c0003629:	8b 45 08             	mov    0x8(%ebp),%eax
c000362c:	8b 40 04             	mov    0x4(%eax),%eax
c000362f:	8b 55 08             	mov    0x8(%ebp),%edx
c0003632:	83 c2 08             	add    $0x8,%edx
c0003635:	39 d0                	cmp    %edx,%eax
c0003637:	75 07                	jne    c0003640 <_list_empty+0x24>
c0003639:	b8 01 00 00 00       	mov    $0x1,%eax
c000363e:	eb 05                	jmp    c0003645 <_list_empty+0x29>
c0003640:	b8 00 00 00 00       	mov    $0x0,%eax
c0003645:	5d                   	pop    %ebp
c0003646:	c3                   	ret    

c0003647 <_list_find>:
c0003647:	55                   	push   %ebp
c0003648:	89 e5                	mov    %esp,%ebp
c000364a:	53                   	push   %ebx
c000364b:	83 ec 14             	sub    $0x14,%esp
c000364e:	e8 ae df ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003653:	81 c3 ad 39 00 00    	add    $0x39ad,%ebx
c0003659:	e8 db ec ff ff       	call   c0002339 <intr_status>
c000365e:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0003661:	8b 45 08             	mov    0x8(%ebp),%eax
c0003664:	8b 40 04             	mov    0x4(%eax),%eax
c0003667:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000366a:	eb 0f                	jmp    c000367b <_list_find+0x34>
c000366c:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000366f:	3b 45 0c             	cmp    0xc(%ebp),%eax
c0003672:	75 07                	jne    c000367b <_list_find+0x34>
c0003674:	b8 01 00 00 00       	mov    $0x1,%eax
c0003679:	eb 23                	jmp    c000369e <_list_find+0x57>
c000367b:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000367e:	8d 50 08             	lea    0x8(%eax),%edx
c0003681:	89 55 f4             	mov    %edx,-0xc(%ebp)
c0003684:	8b 55 08             	mov    0x8(%ebp),%edx
c0003687:	83 c2 08             	add    $0x8,%edx
c000368a:	39 d0                	cmp    %edx,%eax
c000368c:	75 de                	jne    c000366c <_list_find+0x25>
c000368e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
c0003692:	74 05                	je     c0003699 <_list_find+0x52>
c0003694:	e8 48 ec ff ff       	call   c00022e1 <intopen>
c0003699:	b8 00 00 00 00       	mov    $0x0,%eax
c000369e:	83 c4 14             	add    $0x14,%esp
c00036a1:	5b                   	pop    %ebx
c00036a2:	5d                   	pop    %ebp
c00036a3:	c3                   	ret    

c00036a4 <outb>:
c00036a4:	55                   	push   %ebp
c00036a5:	89 e5                	mov    %esp,%ebp
c00036a7:	83 ec 08             	sub    $0x8,%esp
c00036aa:	e8 4e df ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00036af:	05 51 39 00 00       	add    $0x3951,%eax
c00036b4:	8b 55 08             	mov    0x8(%ebp),%edx
c00036b7:	8b 45 0c             	mov    0xc(%ebp),%eax
c00036ba:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c00036be:	88 45 f8             	mov    %al,-0x8(%ebp)
c00036c1:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c00036c5:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c00036c9:	ee                   	out    %al,(%dx)
c00036ca:	90                   	nop
c00036cb:	c9                   	leave  
c00036cc:	c3                   	ret    

c00036cd <outsw>:
c00036cd:	55                   	push   %ebp
c00036ce:	89 e5                	mov    %esp,%ebp
c00036d0:	56                   	push   %esi
c00036d1:	53                   	push   %ebx
c00036d2:	83 ec 04             	sub    $0x4,%esp
c00036d5:	e8 23 df ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00036da:	05 26 39 00 00       	add    $0x3926,%eax
c00036df:	8b 45 08             	mov    0x8(%ebp),%eax
c00036e2:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c00036e6:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c00036ea:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c00036ed:	8b 45 10             	mov    0x10(%ebp),%eax
c00036f0:	89 cb                	mov    %ecx,%ebx
c00036f2:	89 de                	mov    %ebx,%esi
c00036f4:	89 c1                	mov    %eax,%ecx
c00036f6:	fc                   	cld    
c00036f7:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c00036fa:	89 c8                	mov    %ecx,%eax
c00036fc:	89 f3                	mov    %esi,%ebx
c00036fe:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003701:	89 45 10             	mov    %eax,0x10(%ebp)
c0003704:	90                   	nop
c0003705:	83 c4 04             	add    $0x4,%esp
c0003708:	5b                   	pop    %ebx
c0003709:	5e                   	pop    %esi
c000370a:	5d                   	pop    %ebp
c000370b:	c3                   	ret    

c000370c <inb>:
c000370c:	55                   	push   %ebp
c000370d:	89 e5                	mov    %esp,%ebp
c000370f:	83 ec 14             	sub    $0x14,%esp
c0003712:	e8 e6 de ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003717:	05 e9 38 00 00       	add    $0x38e9,%eax
c000371c:	8b 45 08             	mov    0x8(%ebp),%eax
c000371f:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0003723:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c0003727:	89 c2                	mov    %eax,%edx
c0003729:	ec                   	in     (%dx),%al
c000372a:	88 45 ff             	mov    %al,-0x1(%ebp)
c000372d:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c0003731:	c9                   	leave  
c0003732:	c3                   	ret    

c0003733 <insw>:
c0003733:	55                   	push   %ebp
c0003734:	89 e5                	mov    %esp,%ebp
c0003736:	57                   	push   %edi
c0003737:	53                   	push   %ebx
c0003738:	83 ec 04             	sub    $0x4,%esp
c000373b:	e8 bd de ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003740:	05 c0 38 00 00       	add    $0x38c0,%eax
c0003745:	8b 45 08             	mov    0x8(%ebp),%eax
c0003748:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c000374c:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0003750:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0003753:	8b 45 10             	mov    0x10(%ebp),%eax
c0003756:	89 cb                	mov    %ecx,%ebx
c0003758:	89 df                	mov    %ebx,%edi
c000375a:	89 c1                	mov    %eax,%ecx
c000375c:	fc                   	cld    
c000375d:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0003760:	89 c8                	mov    %ecx,%eax
c0003762:	89 fb                	mov    %edi,%ebx
c0003764:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003767:	89 45 10             	mov    %eax,0x10(%ebp)
c000376a:	90                   	nop
c000376b:	83 c4 04             	add    $0x4,%esp
c000376e:	5b                   	pop    %ebx
c000376f:	5f                   	pop    %edi
c0003770:	5d                   	pop    %ebp
c0003771:	c3                   	ret    

c0003772 <frequency_set>:
c0003772:	55                   	push   %ebp
c0003773:	89 e5                	mov    %esp,%ebp
c0003775:	57                   	push   %edi
c0003776:	56                   	push   %esi
c0003777:	53                   	push   %ebx
c0003778:	83 ec 14             	sub    $0x14,%esp
c000377b:	e8 7d de ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003780:	05 80 38 00 00       	add    $0x3880,%eax
c0003785:	8b 75 08             	mov    0x8(%ebp),%esi
c0003788:	8b 5d 0c             	mov    0xc(%ebp),%ebx
c000378b:	8b 4d 10             	mov    0x10(%ebp),%ecx
c000378e:	8b 55 14             	mov    0x14(%ebp),%edx
c0003791:	8b 7d 18             	mov    0x18(%ebp),%edi
c0003794:	89 f0                	mov    %esi,%eax
c0003796:	88 45 f0             	mov    %al,-0x10(%ebp)
c0003799:	88 5d ec             	mov    %bl,-0x14(%ebp)
c000379c:	88 4d e8             	mov    %cl,-0x18(%ebp)
c000379f:	88 55 e4             	mov    %dl,-0x1c(%ebp)
c00037a2:	89 f8                	mov    %edi,%eax
c00037a4:	66 89 45 e0          	mov    %ax,-0x20(%ebp)
c00037a8:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
c00037ac:	c1 e0 06             	shl    $0x6,%eax
c00037af:	89 c2                	mov    %eax,%edx
c00037b1:	0f b6 45 e8          	movzbl -0x18(%ebp),%eax
c00037b5:	c1 e0 04             	shl    $0x4,%eax
c00037b8:	09 c2                	or     %eax,%edx
c00037ba:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
c00037be:	01 c0                	add    %eax,%eax
c00037c0:	09 d0                	or     %edx,%eax
c00037c2:	0f b6 c0             	movzbl %al,%eax
c00037c5:	50                   	push   %eax
c00037c6:	6a 43                	push   $0x43
c00037c8:	e8 d7 fe ff ff       	call   c00036a4 <outb>
c00037cd:	83 c4 08             	add    $0x8,%esp
c00037d0:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
c00037d4:	0f b6 d0             	movzbl %al,%edx
c00037d7:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c00037db:	52                   	push   %edx
c00037dc:	50                   	push   %eax
c00037dd:	e8 c2 fe ff ff       	call   c00036a4 <outb>
c00037e2:	83 c4 08             	add    $0x8,%esp
c00037e5:	0f b7 45 e0          	movzwl -0x20(%ebp),%eax
c00037e9:	0f b6 c0             	movzbl %al,%eax
c00037ec:	c1 f8 08             	sar    $0x8,%eax
c00037ef:	0f b6 d0             	movzbl %al,%edx
c00037f2:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c00037f6:	52                   	push   %edx
c00037f7:	50                   	push   %eax
c00037f8:	e8 a7 fe ff ff       	call   c00036a4 <outb>
c00037fd:	83 c4 08             	add    $0x8,%esp
c0003800:	90                   	nop
c0003801:	8d 65 f4             	lea    -0xc(%ebp),%esp
c0003804:	5b                   	pop    %ebx
c0003805:	5e                   	pop    %esi
c0003806:	5f                   	pop    %edi
c0003807:	5d                   	pop    %ebp
c0003808:	c3                   	ret    

c0003809 <timer_init>:
c0003809:	55                   	push   %ebp
c000380a:	89 e5                	mov    %esp,%ebp
c000380c:	53                   	push   %ebx
c000380d:	83 ec 04             	sub    $0x4,%esp
c0003810:	e8 ec dd ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003815:	81 c3 eb 37 00 00    	add    $0x37eb,%ebx
c000381b:	68 4d 17 00 00       	push   $0x174d
c0003820:	6a 02                	push   $0x2
c0003822:	6a 03                	push   $0x3
c0003824:	6a 00                	push   $0x0
c0003826:	6a 40                	push   $0x40
c0003828:	e8 45 ff ff ff       	call   c0003772 <frequency_set>
c000382d:	83 c4 14             	add    $0x14,%esp
c0003830:	83 ec 08             	sub    $0x8,%esp
c0003833:	8d 83 4a c8 ff ff    	lea    -0x37b6(%ebx),%eax
c0003839:	50                   	push   %eax
c000383a:	6a 20                	push   $0x20
c000383c:	e8 2e eb ff ff       	call   c000236f <register_handler>
c0003841:	83 c4 10             	add    $0x10,%esp
c0003844:	90                   	nop
c0003845:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003848:	c9                   	leave  
c0003849:	c3                   	ret    

c000384a <intr_timer_handler>:
c000384a:	55                   	push   %ebp
c000384b:	89 e5                	mov    %esp,%ebp
c000384d:	53                   	push   %ebx
c000384e:	83 ec 14             	sub    $0x14,%esp
c0003851:	e8 ab dd ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003856:	81 c3 aa 37 00 00    	add    $0x37aa,%ebx
c000385c:	e8 b2 f5 ff ff       	call   c0002e13 <running_thread>
c0003861:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0003864:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003867:	c7 40 48 06 07 92 19 	movl   $0x19920706,0x48(%eax)
c000386e:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003871:	8b 40 24             	mov    0x24(%eax),%eax
c0003874:	8d 50 01             	lea    0x1(%eax),%edx
c0003877:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000387a:	89 50 24             	mov    %edx,0x24(%eax)
c000387d:	c7 c0 40 7b 00 c0    	mov    $0xc0007b40,%eax
c0003883:	8b 00                	mov    (%eax),%eax
c0003885:	8d 50 01             	lea    0x1(%eax),%edx
c0003888:	c7 c0 40 7b 00 c0    	mov    $0xc0007b40,%eax
c000388e:	89 10                	mov    %edx,(%eax)
c0003890:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0003893:	8b 40 20             	mov    0x20(%eax),%eax
c0003896:	85 c0                	test   %eax,%eax
c0003898:	75 07                	jne    c00038a1 <intr_timer_handler+0x57>
c000389a:	e8 36 f8 ff ff       	call   c00030d5 <sched>
c000389f:	eb 0f                	jmp    c00038b0 <intr_timer_handler+0x66>
c00038a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00038a4:	8b 40 20             	mov    0x20(%eax),%eax
c00038a7:	8d 50 ff             	lea    -0x1(%eax),%edx
c00038aa:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00038ad:	89 50 20             	mov    %edx,0x20(%eax)
c00038b0:	90                   	nop
c00038b1:	83 c4 14             	add    $0x14,%esp
c00038b4:	5b                   	pop    %ebx
c00038b5:	5d                   	pop    %ebp
c00038b6:	c3                   	ret    

c00038b7 <console_init>:
c00038b7:	55                   	push   %ebp
c00038b8:	89 e5                	mov    %esp,%ebp
c00038ba:	53                   	push   %ebx
c00038bb:	83 ec 04             	sub    $0x4,%esp
c00038be:	e8 3a dd ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00038c3:	05 3d 37 00 00       	add    $0x373d,%eax
c00038c8:	83 ec 0c             	sub    $0xc,%esp
c00038cb:	8d 90 8c 05 00 00    	lea    0x58c(%eax),%edx
c00038d1:	52                   	push   %edx
c00038d2:	89 c3                	mov    %eax,%ebx
c00038d4:	e8 bc f9 ff ff       	call   c0003295 <init_lock>
c00038d9:	83 c4 10             	add    $0x10,%esp
c00038dc:	90                   	nop
c00038dd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00038e0:	c9                   	leave  
c00038e1:	c3                   	ret    

c00038e2 <console_put_char>:
c00038e2:	55                   	push   %ebp
c00038e3:	89 e5                	mov    %esp,%ebp
c00038e5:	53                   	push   %ebx
c00038e6:	83 ec 14             	sub    $0x14,%esp
c00038e9:	e8 13 dd ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c00038ee:	81 c3 12 37 00 00    	add    $0x3712,%ebx
c00038f4:	8b 45 08             	mov    0x8(%ebp),%eax
c00038f7:	88 45 f4             	mov    %al,-0xc(%ebp)
c00038fa:	83 ec 0c             	sub    $0xc,%esp
c00038fd:	8d 83 8c 05 00 00    	lea    0x58c(%ebx),%eax
c0003903:	50                   	push   %eax
c0003904:	e8 c0 f9 ff ff       	call   c00032c9 <acquire_lock>
c0003909:	83 c4 10             	add    $0x10,%esp
c000390c:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
c0003910:	83 ec 0c             	sub    $0xc,%esp
c0003913:	50                   	push   %eax
c0003914:	e8 f7 dc ff ff       	call   c0001610 <put_char>
c0003919:	83 c4 10             	add    $0x10,%esp
c000391c:	83 ec 0c             	sub    $0xc,%esp
c000391f:	8d 83 8c 05 00 00    	lea    0x58c(%ebx),%eax
c0003925:	50                   	push   %eax
c0003926:	e8 0f fa ff ff       	call   c000333a <release_lock>
c000392b:	83 c4 10             	add    $0x10,%esp
c000392e:	90                   	nop
c000392f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003932:	c9                   	leave  
c0003933:	c3                   	ret    

c0003934 <console_put_str>:
c0003934:	55                   	push   %ebp
c0003935:	89 e5                	mov    %esp,%ebp
c0003937:	53                   	push   %ebx
c0003938:	83 ec 04             	sub    $0x4,%esp
c000393b:	e8 c1 dc ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003940:	81 c3 c0 36 00 00    	add    $0x36c0,%ebx
c0003946:	83 ec 0c             	sub    $0xc,%esp
c0003949:	8d 83 8c 05 00 00    	lea    0x58c(%ebx),%eax
c000394f:	50                   	push   %eax
c0003950:	e8 74 f9 ff ff       	call   c00032c9 <acquire_lock>
c0003955:	83 c4 10             	add    $0x10,%esp
c0003958:	83 ec 0c             	sub    $0xc,%esp
c000395b:	ff 75 08             	pushl  0x8(%ebp)
c000395e:	e8 a1 dd ff ff       	call   c0001704 <put_str>
c0003963:	83 c4 10             	add    $0x10,%esp
c0003966:	83 ec 0c             	sub    $0xc,%esp
c0003969:	8d 83 8c 05 00 00    	lea    0x58c(%ebx),%eax
c000396f:	50                   	push   %eax
c0003970:	e8 c5 f9 ff ff       	call   c000333a <release_lock>
c0003975:	83 c4 10             	add    $0x10,%esp
c0003978:	90                   	nop
c0003979:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000397c:	c9                   	leave  
c000397d:	c3                   	ret    

c000397e <console_put_int>:
c000397e:	55                   	push   %ebp
c000397f:	89 e5                	mov    %esp,%ebp
c0003981:	53                   	push   %ebx
c0003982:	83 ec 04             	sub    $0x4,%esp
c0003985:	e8 77 dc ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c000398a:	81 c3 76 36 00 00    	add    $0x3676,%ebx
c0003990:	83 ec 0c             	sub    $0xc,%esp
c0003993:	8d 83 8c 05 00 00    	lea    0x58c(%ebx),%eax
c0003999:	50                   	push   %eax
c000399a:	e8 2a f9 ff ff       	call   c00032c9 <acquire_lock>
c000399f:	83 c4 10             	add    $0x10,%esp
c00039a2:	83 ec 0c             	sub    $0xc,%esp
c00039a5:	ff 75 08             	pushl  0x8(%ebp)
c00039a8:	e8 9a dd ff ff       	call   c0001747 <put_int>
c00039ad:	83 c4 10             	add    $0x10,%esp
c00039b0:	83 ec 0c             	sub    $0xc,%esp
c00039b3:	8d 83 8c 05 00 00    	lea    0x58c(%ebx),%eax
c00039b9:	50                   	push   %eax
c00039ba:	e8 7b f9 ff ff       	call   c000333a <release_lock>
c00039bf:	83 c4 10             	add    $0x10,%esp
c00039c2:	90                   	nop
c00039c3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00039c6:	c9                   	leave  
c00039c7:	c3                   	ret    

c00039c8 <outb>:
c00039c8:	55                   	push   %ebp
c00039c9:	89 e5                	mov    %esp,%ebp
c00039cb:	83 ec 08             	sub    $0x8,%esp
c00039ce:	e8 2a dc ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00039d3:	05 2d 36 00 00       	add    $0x362d,%eax
c00039d8:	8b 55 08             	mov    0x8(%ebp),%edx
c00039db:	8b 45 0c             	mov    0xc(%ebp),%eax
c00039de:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
c00039e2:	88 45 f8             	mov    %al,-0x8(%ebp)
c00039e5:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
c00039e9:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
c00039ed:	ee                   	out    %al,(%dx)
c00039ee:	90                   	nop
c00039ef:	c9                   	leave  
c00039f0:	c3                   	ret    

c00039f1 <outsw>:
c00039f1:	55                   	push   %ebp
c00039f2:	89 e5                	mov    %esp,%ebp
c00039f4:	56                   	push   %esi
c00039f5:	53                   	push   %ebx
c00039f6:	83 ec 04             	sub    $0x4,%esp
c00039f9:	e8 ff db ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00039fe:	05 02 36 00 00       	add    $0x3602,%eax
c0003a03:	8b 45 08             	mov    0x8(%ebp),%eax
c0003a06:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0003a0a:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0003a0e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0003a11:	8b 45 10             	mov    0x10(%ebp),%eax
c0003a14:	89 cb                	mov    %ecx,%ebx
c0003a16:	89 de                	mov    %ebx,%esi
c0003a18:	89 c1                	mov    %eax,%ecx
c0003a1a:	fc                   	cld    
c0003a1b:	66 f3 6f             	rep outsw %ds:(%esi),(%dx)
c0003a1e:	89 c8                	mov    %ecx,%eax
c0003a20:	89 f3                	mov    %esi,%ebx
c0003a22:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003a25:	89 45 10             	mov    %eax,0x10(%ebp)
c0003a28:	90                   	nop
c0003a29:	83 c4 04             	add    $0x4,%esp
c0003a2c:	5b                   	pop    %ebx
c0003a2d:	5e                   	pop    %esi
c0003a2e:	5d                   	pop    %ebp
c0003a2f:	c3                   	ret    

c0003a30 <inb>:
c0003a30:	55                   	push   %ebp
c0003a31:	89 e5                	mov    %esp,%ebp
c0003a33:	83 ec 14             	sub    $0x14,%esp
c0003a36:	e8 c2 db ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003a3b:	05 c5 35 00 00       	add    $0x35c5,%eax
c0003a40:	8b 45 08             	mov    0x8(%ebp),%eax
c0003a43:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0003a47:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
c0003a4b:	89 c2                	mov    %eax,%edx
c0003a4d:	ec                   	in     (%dx),%al
c0003a4e:	88 45 ff             	mov    %al,-0x1(%ebp)
c0003a51:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
c0003a55:	c9                   	leave  
c0003a56:	c3                   	ret    

c0003a57 <insw>:
c0003a57:	55                   	push   %ebp
c0003a58:	89 e5                	mov    %esp,%ebp
c0003a5a:	57                   	push   %edi
c0003a5b:	53                   	push   %ebx
c0003a5c:	83 ec 04             	sub    $0x4,%esp
c0003a5f:	e8 99 db ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003a64:	05 9c 35 00 00       	add    $0x359c,%eax
c0003a69:	8b 45 08             	mov    0x8(%ebp),%eax
c0003a6c:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c0003a70:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
c0003a74:	8b 4d 0c             	mov    0xc(%ebp),%ecx
c0003a77:	8b 45 10             	mov    0x10(%ebp),%eax
c0003a7a:	89 cb                	mov    %ecx,%ebx
c0003a7c:	89 df                	mov    %ebx,%edi
c0003a7e:	89 c1                	mov    %eax,%ecx
c0003a80:	fc                   	cld    
c0003a81:	66 f3 6d             	rep insw (%dx),%es:(%edi)
c0003a84:	89 c8                	mov    %ecx,%eax
c0003a86:	89 fb                	mov    %edi,%ebx
c0003a88:	89 5d 0c             	mov    %ebx,0xc(%ebp)
c0003a8b:	89 45 10             	mov    %eax,0x10(%ebp)
c0003a8e:	90                   	nop
c0003a8f:	83 c4 04             	add    $0x4,%esp
c0003a92:	5b                   	pop    %ebx
c0003a93:	5f                   	pop    %edi
c0003a94:	5d                   	pop    %ebp
c0003a95:	c3                   	ret    

c0003a96 <intr_keyboard_handler>:
c0003a96:	55                   	push   %ebp
c0003a97:	89 e5                	mov    %esp,%ebp
c0003a99:	53                   	push   %ebx
c0003a9a:	83 ec 14             	sub    $0x14,%esp
c0003a9d:	e8 5f db ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003aa2:	81 c3 5e 35 00 00    	add    $0x355e,%ebx
c0003aa8:	0f b6 83 a0 05 00 00 	movzbl 0x5a0(%ebx),%eax
c0003aaf:	88 45 f4             	mov    %al,-0xc(%ebp)
c0003ab2:	0f b6 83 a1 05 00 00 	movzbl 0x5a1(%ebx),%eax
c0003ab9:	88 45 f3             	mov    %al,-0xd(%ebp)
c0003abc:	0f b6 83 a3 05 00 00 	movzbl 0x5a3(%ebx),%eax
c0003ac3:	88 45 f2             	mov    %al,-0xe(%ebp)
c0003ac6:	6a 60                	push   $0x60
c0003ac8:	e8 63 ff ff ff       	call   c0003a30 <inb>
c0003acd:	83 c4 04             	add    $0x4,%esp
c0003ad0:	0f b6 c0             	movzbl %al,%eax
c0003ad3:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
c0003ad7:	66 81 7d f6 e0 00    	cmpw   $0xe0,-0xa(%ebp)
c0003add:	75 0c                	jne    c0003aeb <intr_keyboard_handler+0x55>
c0003adf:	c6 83 a4 05 00 00 01 	movb   $0x1,0x5a4(%ebx)
c0003ae6:	e9 02 02 00 00       	jmp    c0003ced <intr_keyboard_handler+0x257>
c0003aeb:	0f b6 83 a4 05 00 00 	movzbl 0x5a4(%ebx),%eax
c0003af2:	3c 01                	cmp    $0x1,%al
c0003af4:	75 0d                	jne    c0003b03 <intr_keyboard_handler+0x6d>
c0003af6:	66 81 4d f6 00 e0    	orw    $0xe000,-0xa(%ebp)
c0003afc:	c6 83 a4 05 00 00 00 	movb   $0x0,0x5a4(%ebx)
c0003b03:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
c0003b07:	83 e0 80             	and    $0xffffff80,%eax
c0003b0a:	88 45 f1             	mov    %al,-0xf(%ebp)
c0003b0d:	80 7d f1 00          	cmpb   $0x0,-0xf(%ebp)
c0003b11:	74 61                	je     c0003b74 <intr_keyboard_handler+0xde>
c0003b13:	66 81 65 f6 7f ff    	andw   $0xff7f,-0xa(%ebp)
c0003b19:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
c0003b1d:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
c0003b21:	66 83 7d ec 1d       	cmpw   $0x1d,-0x14(%ebp)
c0003b26:	74 08                	je     c0003b30 <intr_keyboard_handler+0x9a>
c0003b28:	66 81 7d ec 1d e0    	cmpw   $0xe01d,-0x14(%ebp)
c0003b2e:	75 09                	jne    c0003b39 <intr_keyboard_handler+0xa3>
c0003b30:	c6 83 a0 05 00 00 00 	movb   $0x0,0x5a0(%ebx)
c0003b37:	eb 36                	jmp    c0003b6f <intr_keyboard_handler+0xd9>
c0003b39:	66 83 7d ec 2a       	cmpw   $0x2a,-0x14(%ebp)
c0003b3e:	74 07                	je     c0003b47 <intr_keyboard_handler+0xb1>
c0003b40:	66 83 7d ec 36       	cmpw   $0x36,-0x14(%ebp)
c0003b45:	75 09                	jne    c0003b50 <intr_keyboard_handler+0xba>
c0003b47:	c6 83 a1 05 00 00 00 	movb   $0x0,0x5a1(%ebx)
c0003b4e:	eb 1f                	jmp    c0003b6f <intr_keyboard_handler+0xd9>
c0003b50:	66 83 7d ec 38       	cmpw   $0x38,-0x14(%ebp)
c0003b55:	74 0c                	je     c0003b63 <intr_keyboard_handler+0xcd>
c0003b57:	66 81 7d ec 38 e0    	cmpw   $0xe038,-0x14(%ebp)
c0003b5d:	0f 85 83 01 00 00    	jne    c0003ce6 <intr_keyboard_handler+0x250>
c0003b63:	c6 83 a2 05 00 00 00 	movb   $0x0,0x5a2(%ebx)
c0003b6a:	e9 77 01 00 00       	jmp    c0003ce6 <intr_keyboard_handler+0x250>
c0003b6f:	e9 72 01 00 00       	jmp    c0003ce6 <intr_keyboard_handler+0x250>
c0003b74:	66 83 7d f6 00       	cmpw   $0x0,-0xa(%ebp)
c0003b79:	74 07                	je     c0003b82 <intr_keyboard_handler+0xec>
c0003b7b:	66 83 7d f6 3a       	cmpw   $0x3a,-0xa(%ebp)
c0003b80:	76 14                	jbe    c0003b96 <intr_keyboard_handler+0x100>
c0003b82:	66 81 7d f6 38 e0    	cmpw   $0xe038,-0xa(%ebp)
c0003b88:	74 0c                	je     c0003b96 <intr_keyboard_handler+0x100>
c0003b8a:	66 81 7d f6 1d e0    	cmpw   $0xe01d,-0xa(%ebp)
c0003b90:	0f 85 3c 01 00 00    	jne    c0003cd2 <intr_keyboard_handler+0x23c>
c0003b96:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)
c0003b9a:	66 83 7d f6 0d       	cmpw   $0xd,-0xa(%ebp)
c0003b9f:	76 3f                	jbe    c0003be0 <intr_keyboard_handler+0x14a>
c0003ba1:	66 83 7d f6 29       	cmpw   $0x29,-0xa(%ebp)
c0003ba6:	74 38                	je     c0003be0 <intr_keyboard_handler+0x14a>
c0003ba8:	66 83 7d f6 1a       	cmpw   $0x1a,-0xa(%ebp)
c0003bad:	74 31                	je     c0003be0 <intr_keyboard_handler+0x14a>
c0003baf:	66 83 7d f6 1b       	cmpw   $0x1b,-0xa(%ebp)
c0003bb4:	74 2a                	je     c0003be0 <intr_keyboard_handler+0x14a>
c0003bb6:	66 83 7d f6 2b       	cmpw   $0x2b,-0xa(%ebp)
c0003bbb:	74 23                	je     c0003be0 <intr_keyboard_handler+0x14a>
c0003bbd:	66 83 7d f6 27       	cmpw   $0x27,-0xa(%ebp)
c0003bc2:	74 1c                	je     c0003be0 <intr_keyboard_handler+0x14a>
c0003bc4:	66 83 7d f6 28       	cmpw   $0x28,-0xa(%ebp)
c0003bc9:	74 15                	je     c0003be0 <intr_keyboard_handler+0x14a>
c0003bcb:	66 83 7d f6 33       	cmpw   $0x33,-0xa(%ebp)
c0003bd0:	74 0e                	je     c0003be0 <intr_keyboard_handler+0x14a>
c0003bd2:	66 83 7d f6 34       	cmpw   $0x34,-0xa(%ebp)
c0003bd7:	74 07                	je     c0003be0 <intr_keyboard_handler+0x14a>
c0003bd9:	66 83 7d f6 35       	cmpw   $0x35,-0xa(%ebp)
c0003bde:	75 0c                	jne    c0003bec <intr_keyboard_handler+0x156>
c0003be0:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
c0003be4:	74 2e                	je     c0003c14 <intr_keyboard_handler+0x17e>
c0003be6:	c6 45 f5 01          	movb   $0x1,-0xb(%ebp)
c0003bea:	eb 28                	jmp    c0003c14 <intr_keyboard_handler+0x17e>
c0003bec:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
c0003bf0:	74 0c                	je     c0003bfe <intr_keyboard_handler+0x168>
c0003bf2:	80 7d f2 00          	cmpb   $0x0,-0xe(%ebp)
c0003bf6:	74 06                	je     c0003bfe <intr_keyboard_handler+0x168>
c0003bf8:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)
c0003bfc:	eb 16                	jmp    c0003c14 <intr_keyboard_handler+0x17e>
c0003bfe:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
c0003c02:	75 06                	jne    c0003c0a <intr_keyboard_handler+0x174>
c0003c04:	80 7d f2 00          	cmpb   $0x0,-0xe(%ebp)
c0003c08:	74 06                	je     c0003c10 <intr_keyboard_handler+0x17a>
c0003c0a:	c6 45 f5 01          	movb   $0x1,-0xb(%ebp)
c0003c0e:	eb 04                	jmp    c0003c14 <intr_keyboard_handler+0x17e>
c0003c10:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)
c0003c14:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
c0003c18:	88 45 f0             	mov    %al,-0x10(%ebp)
c0003c1b:	0f b6 45 f0          	movzbl -0x10(%ebp),%eax
c0003c1f:	0f b6 4d f5          	movzbl -0xb(%ebp),%ecx
c0003c23:	8d 93 00 01 00 00    	lea    0x100(%ebx),%edx
c0003c29:	01 c0                	add    %eax,%eax
c0003c2b:	01 c8                	add    %ecx,%eax
c0003c2d:	01 d0                	add    %edx,%eax
c0003c2f:	0f b6 00             	movzbl (%eax),%eax
c0003c32:	88 45 ef             	mov    %al,-0x11(%ebp)
c0003c35:	80 7d ef 00          	cmpb   $0x0,-0x11(%ebp)
c0003c39:	74 33                	je     c0003c6e <intr_keyboard_handler+0x1d8>
c0003c3b:	83 ec 0c             	sub    $0xc,%esp
c0003c3e:	c7 c0 60 7b 00 c0    	mov    $0xc0007b60,%eax
c0003c44:	50                   	push   %eax
c0003c45:	e8 93 01 00 00       	call   c0003ddd <full_ioqueue>
c0003c4a:	83 c4 10             	add    $0x10,%esp
c0003c4d:	84 c0                	test   %al,%al
c0003c4f:	0f 85 94 00 00 00    	jne    c0003ce9 <intr_keyboard_handler+0x253>
c0003c55:	0f be 45 ef          	movsbl -0x11(%ebp),%eax
c0003c59:	83 ec 08             	sub    $0x8,%esp
c0003c5c:	50                   	push   %eax
c0003c5d:	c7 c0 60 7b 00 c0    	mov    $0xc0007b60,%eax
c0003c63:	50                   	push   %eax
c0003c64:	e8 bf 01 00 00       	call   c0003e28 <ioq_put_char>
c0003c69:	83 c4 10             	add    $0x10,%esp
c0003c6c:	eb 7b                	jmp    c0003ce9 <intr_keyboard_handler+0x253>
c0003c6e:	66 83 7d f6 1d       	cmpw   $0x1d,-0xa(%ebp)
c0003c73:	74 08                	je     c0003c7d <intr_keyboard_handler+0x1e7>
c0003c75:	66 81 7d f6 1d e0    	cmpw   $0xe01d,-0xa(%ebp)
c0003c7b:	75 09                	jne    c0003c86 <intr_keyboard_handler+0x1f0>
c0003c7d:	c6 83 a0 05 00 00 01 	movb   $0x1,0x5a0(%ebx)
c0003c84:	eb 4a                	jmp    c0003cd0 <intr_keyboard_handler+0x23a>
c0003c86:	66 83 7d f6 2a       	cmpw   $0x2a,-0xa(%ebp)
c0003c8b:	74 07                	je     c0003c94 <intr_keyboard_handler+0x1fe>
c0003c8d:	66 83 7d f6 36       	cmpw   $0x36,-0xa(%ebp)
c0003c92:	75 09                	jne    c0003c9d <intr_keyboard_handler+0x207>
c0003c94:	c6 83 a1 05 00 00 01 	movb   $0x1,0x5a1(%ebx)
c0003c9b:	eb 33                	jmp    c0003cd0 <intr_keyboard_handler+0x23a>
c0003c9d:	66 83 7d f6 38       	cmpw   $0x38,-0xa(%ebp)
c0003ca2:	74 08                	je     c0003cac <intr_keyboard_handler+0x216>
c0003ca4:	66 81 7d f6 38 e0    	cmpw   $0xe038,-0xa(%ebp)
c0003caa:	75 09                	jne    c0003cb5 <intr_keyboard_handler+0x21f>
c0003cac:	c6 83 a2 05 00 00 01 	movb   $0x1,0x5a2(%ebx)
c0003cb3:	eb 1b                	jmp    c0003cd0 <intr_keyboard_handler+0x23a>
c0003cb5:	66 83 7d f6 3a       	cmpw   $0x3a,-0xa(%ebp)
c0003cba:	75 30                	jne    c0003cec <intr_keyboard_handler+0x256>
c0003cbc:	0f b6 83 a3 05 00 00 	movzbl 0x5a3(%ebx),%eax
c0003cc3:	84 c0                	test   %al,%al
c0003cc5:	0f 94 c0             	sete   %al
c0003cc8:	88 83 a3 05 00 00    	mov    %al,0x5a3(%ebx)
c0003cce:	eb 1c                	jmp    c0003cec <intr_keyboard_handler+0x256>
c0003cd0:	eb 1a                	jmp    c0003cec <intr_keyboard_handler+0x256>
c0003cd2:	83 ec 0c             	sub    $0xc,%esp
c0003cd5:	8d 83 91 d7 ff ff    	lea    -0x286f(%ebx),%eax
c0003cdb:	50                   	push   %eax
c0003cdc:	e8 23 da ff ff       	call   c0001704 <put_str>
c0003ce1:	83 c4 10             	add    $0x10,%esp
c0003ce4:	eb 07                	jmp    c0003ced <intr_keyboard_handler+0x257>
c0003ce6:	90                   	nop
c0003ce7:	eb 04                	jmp    c0003ced <intr_keyboard_handler+0x257>
c0003ce9:	90                   	nop
c0003cea:	eb 01                	jmp    c0003ced <intr_keyboard_handler+0x257>
c0003cec:	90                   	nop
c0003ced:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003cf0:	c9                   	leave  
c0003cf1:	c3                   	ret    

c0003cf2 <intr_kbd_handler>:
c0003cf2:	55                   	push   %ebp
c0003cf3:	89 e5                	mov    %esp,%ebp
c0003cf5:	53                   	push   %ebx
c0003cf6:	83 ec 04             	sub    $0x4,%esp
c0003cf9:	e8 ff d8 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003cfe:	05 02 33 00 00       	add    $0x3302,%eax
c0003d03:	83 ec 0c             	sub    $0xc,%esp
c0003d06:	6a 6b                	push   $0x6b
c0003d08:	89 c3                	mov    %eax,%ebx
c0003d0a:	e8 01 d9 ff ff       	call   c0001610 <put_char>
c0003d0f:	83 c4 10             	add    $0x10,%esp
c0003d12:	83 ec 0c             	sub    $0xc,%esp
c0003d15:	6a 60                	push   $0x60
c0003d17:	e8 14 fd ff ff       	call   c0003a30 <inb>
c0003d1c:	83 c4 10             	add    $0x10,%esp
c0003d1f:	90                   	nop
c0003d20:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003d23:	c9                   	leave  
c0003d24:	c3                   	ret    

c0003d25 <keyboard_init>:
c0003d25:	55                   	push   %ebp
c0003d26:	89 e5                	mov    %esp,%ebp
c0003d28:	53                   	push   %ebx
c0003d29:	83 ec 04             	sub    $0x4,%esp
c0003d2c:	e8 d0 d8 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003d31:	81 c3 cf 32 00 00    	add    $0x32cf,%ebx
c0003d37:	83 ec 0c             	sub    $0xc,%esp
c0003d3a:	c7 c0 60 7b 00 c0    	mov    $0xc0007b60,%eax
c0003d40:	50                   	push   %eax
c0003d41:	e8 2f 00 00 00       	call   c0003d75 <init_ioqueue>
c0003d46:	83 c4 10             	add    $0x10,%esp
c0003d49:	83 ec 08             	sub    $0x8,%esp
c0003d4c:	8d 83 96 ca ff ff    	lea    -0x356a(%ebx),%eax
c0003d52:	50                   	push   %eax
c0003d53:	6a 21                	push   $0x21
c0003d55:	e8 15 e6 ff ff       	call   c000236f <register_handler>
c0003d5a:	83 c4 10             	add    $0x10,%esp
c0003d5d:	83 ec 0c             	sub    $0xc,%esp
c0003d60:	8d 83 9f d7 ff ff    	lea    -0x2861(%ebx),%eax
c0003d66:	50                   	push   %eax
c0003d67:	e8 98 d9 ff ff       	call   c0001704 <put_str>
c0003d6c:	83 c4 10             	add    $0x10,%esp
c0003d6f:	90                   	nop
c0003d70:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003d73:	c9                   	leave  
c0003d74:	c3                   	ret    

c0003d75 <init_ioqueue>:
c0003d75:	55                   	push   %ebp
c0003d76:	89 e5                	mov    %esp,%ebp
c0003d78:	53                   	push   %ebx
c0003d79:	83 ec 04             	sub    $0x4,%esp
c0003d7c:	e8 7c d8 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003d81:	05 7f 32 00 00       	add    $0x327f,%eax
c0003d86:	8b 55 08             	mov    0x8(%ebp),%edx
c0003d89:	83 ec 0c             	sub    $0xc,%esp
c0003d8c:	52                   	push   %edx
c0003d8d:	89 c3                	mov    %eax,%ebx
c0003d8f:	e8 01 f5 ff ff       	call   c0003295 <init_lock>
c0003d94:	83 c4 10             	add    $0x10,%esp
c0003d97:	8b 45 08             	mov    0x8(%ebp),%eax
c0003d9a:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
c0003da1:	8b 45 08             	mov    0x8(%ebp),%eax
c0003da4:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
c0003dab:	8b 45 08             	mov    0x8(%ebp),%eax
c0003dae:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%eax)
c0003db5:	8b 45 08             	mov    0x8(%ebp),%eax
c0003db8:	c7 40 60 00 00 00 00 	movl   $0x0,0x60(%eax)
c0003dbf:	90                   	nop
c0003dc0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003dc3:	c9                   	leave  
c0003dc4:	c3                   	ret    

c0003dc5 <next_pos>:
c0003dc5:	55                   	push   %ebp
c0003dc6:	89 e5                	mov    %esp,%ebp
c0003dc8:	e8 30 d8 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003dcd:	05 33 32 00 00       	add    $0x3233,%eax
c0003dd2:	8b 45 08             	mov    0x8(%ebp),%eax
c0003dd5:	83 c0 01             	add    $0x1,%eax
c0003dd8:	83 e0 3f             	and    $0x3f,%eax
c0003ddb:	5d                   	pop    %ebp
c0003ddc:	c3                   	ret    

c0003ddd <full_ioqueue>:
c0003ddd:	55                   	push   %ebp
c0003dde:	89 e5                	mov    %esp,%ebp
c0003de0:	e8 18 d8 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003de5:	05 1b 32 00 00       	add    $0x321b,%eax
c0003dea:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ded:	8b 40 60             	mov    0x60(%eax),%eax
c0003df0:	50                   	push   %eax
c0003df1:	e8 cf ff ff ff       	call   c0003dc5 <next_pos>
c0003df6:	83 c4 04             	add    $0x4,%esp
c0003df9:	89 c2                	mov    %eax,%edx
c0003dfb:	8b 45 08             	mov    0x8(%ebp),%eax
c0003dfe:	8b 40 5c             	mov    0x5c(%eax),%eax
c0003e01:	39 c2                	cmp    %eax,%edx
c0003e03:	0f 94 c0             	sete   %al
c0003e06:	c9                   	leave  
c0003e07:	c3                   	ret    

c0003e08 <empty_ioqueue>:
c0003e08:	55                   	push   %ebp
c0003e09:	89 e5                	mov    %esp,%ebp
c0003e0b:	e8 ed d7 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003e10:	05 f0 31 00 00       	add    $0x31f0,%eax
c0003e15:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e18:	8b 50 5c             	mov    0x5c(%eax),%edx
c0003e1b:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e1e:	8b 40 60             	mov    0x60(%eax),%eax
c0003e21:	39 c2                	cmp    %eax,%edx
c0003e23:	0f 94 c0             	sete   %al
c0003e26:	5d                   	pop    %ebp
c0003e27:	c3                   	ret    

c0003e28 <ioq_put_char>:
c0003e28:	55                   	push   %ebp
c0003e29:	89 e5                	mov    %esp,%ebp
c0003e2b:	53                   	push   %ebx
c0003e2c:	83 ec 14             	sub    $0x14,%esp
c0003e2f:	e8 cd d7 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003e34:	81 c3 cc 31 00 00    	add    $0x31cc,%ebx
c0003e3a:	8b 45 0c             	mov    0xc(%ebp),%eax
c0003e3d:	88 45 f4             	mov    %al,-0xc(%ebp)
c0003e40:	e8 f4 e4 ff ff       	call   c0002339 <intr_status>
c0003e45:	85 c0                	test   %eax,%eax
c0003e47:	74 5e                	je     c0003ea7 <ioq_put_char+0x7f>
c0003e49:	e8 bf e4 ff ff       	call   c000230d <intclose>
c0003e4e:	83 ec 0c             	sub    $0xc,%esp
c0003e51:	6a 0a                	push   $0xa
c0003e53:	e8 b8 d7 ff ff       	call   c0001610 <put_char>
c0003e58:	83 c4 10             	add    $0x10,%esp
c0003e5b:	83 ec 0c             	sub    $0xc,%esp
c0003e5e:	8d 83 b0 d7 ff ff    	lea    -0x2850(%ebx),%eax
c0003e64:	50                   	push   %eax
c0003e65:	e8 9a d8 ff ff       	call   c0001704 <put_str>
c0003e6a:	83 c4 10             	add    $0x10,%esp
c0003e6d:	eb fe                	jmp    c0003e6d <ioq_put_char+0x45>
c0003e6f:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e72:	83 ec 0c             	sub    $0xc,%esp
c0003e75:	50                   	push   %eax
c0003e76:	e8 4e f4 ff ff       	call   c00032c9 <acquire_lock>
c0003e7b:	83 c4 10             	add    $0x10,%esp
c0003e7e:	e8 90 ef ff ff       	call   c0002e13 <running_thread>
c0003e83:	89 c2                	mov    %eax,%edx
c0003e85:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e88:	89 50 14             	mov    %edx,0x14(%eax)
c0003e8b:	83 ec 0c             	sub    $0xc,%esp
c0003e8e:	6a 02                	push   $0x2
c0003e90:	e8 4f f3 ff ff       	call   c00031e4 <thread_block>
c0003e95:	83 c4 10             	add    $0x10,%esp
c0003e98:	8b 45 08             	mov    0x8(%ebp),%eax
c0003e9b:	83 ec 0c             	sub    $0xc,%esp
c0003e9e:	50                   	push   %eax
c0003e9f:	e8 96 f4 ff ff       	call   c000333a <release_lock>
c0003ea4:	83 c4 10             	add    $0x10,%esp
c0003ea7:	83 ec 0c             	sub    $0xc,%esp
c0003eaa:	ff 75 08             	pushl  0x8(%ebp)
c0003ead:	e8 2b ff ff ff       	call   c0003ddd <full_ioqueue>
c0003eb2:	83 c4 10             	add    $0x10,%esp
c0003eb5:	84 c0                	test   %al,%al
c0003eb7:	75 b6                	jne    c0003e6f <ioq_put_char+0x47>
c0003eb9:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ebc:	8b 40 18             	mov    0x18(%eax),%eax
c0003ebf:	85 c0                	test   %eax,%eax
c0003ec1:	74 1c                	je     c0003edf <ioq_put_char+0xb7>
c0003ec3:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ec6:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
c0003ecd:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ed0:	8b 40 18             	mov    0x18(%eax),%eax
c0003ed3:	83 ec 0c             	sub    $0xc,%esp
c0003ed6:	50                   	push   %eax
c0003ed7:	e8 4f f3 ff ff       	call   c000322b <thread_unblock>
c0003edc:	83 c4 10             	add    $0x10,%esp
c0003edf:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ee2:	8b 40 60             	mov    0x60(%eax),%eax
c0003ee5:	8b 55 08             	mov    0x8(%ebp),%edx
c0003ee8:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx
c0003eec:	88 4c 02 1c          	mov    %cl,0x1c(%edx,%eax,1)
c0003ef0:	8b 45 08             	mov    0x8(%ebp),%eax
c0003ef3:	8b 40 60             	mov    0x60(%eax),%eax
c0003ef6:	83 ec 0c             	sub    $0xc,%esp
c0003ef9:	50                   	push   %eax
c0003efa:	e8 c6 fe ff ff       	call   c0003dc5 <next_pos>
c0003eff:	83 c4 10             	add    $0x10,%esp
c0003f02:	89 c2                	mov    %eax,%edx
c0003f04:	8b 45 08             	mov    0x8(%ebp),%eax
c0003f07:	89 50 60             	mov    %edx,0x60(%eax)
c0003f0a:	90                   	nop
c0003f0b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003f0e:	c9                   	leave  
c0003f0f:	c3                   	ret    

c0003f10 <ioq_get_char>:
c0003f10:	55                   	push   %ebp
c0003f11:	89 e5                	mov    %esp,%ebp
c0003f13:	53                   	push   %ebx
c0003f14:	83 ec 14             	sub    $0x14,%esp
c0003f17:	e8 e5 d6 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0003f1c:	81 c3 e4 30 00 00    	add    $0x30e4,%ebx
c0003f22:	e8 12 e4 ff ff       	call   c0002339 <intr_status>
c0003f27:	85 c0                	test   %eax,%eax
c0003f29:	74 5e                	je     c0003f89 <ioq_get_char+0x79>
c0003f2b:	e8 dd e3 ff ff       	call   c000230d <intclose>
c0003f30:	83 ec 0c             	sub    $0xc,%esp
c0003f33:	6a 0a                	push   $0xa
c0003f35:	e8 d6 d6 ff ff       	call   c0001610 <put_char>
c0003f3a:	83 c4 10             	add    $0x10,%esp
c0003f3d:	83 ec 0c             	sub    $0xc,%esp
c0003f40:	8d 83 b0 d7 ff ff    	lea    -0x2850(%ebx),%eax
c0003f46:	50                   	push   %eax
c0003f47:	e8 b8 d7 ff ff       	call   c0001704 <put_str>
c0003f4c:	83 c4 10             	add    $0x10,%esp
c0003f4f:	eb fe                	jmp    c0003f4f <ioq_get_char+0x3f>
c0003f51:	8b 45 08             	mov    0x8(%ebp),%eax
c0003f54:	83 ec 0c             	sub    $0xc,%esp
c0003f57:	50                   	push   %eax
c0003f58:	e8 6c f3 ff ff       	call   c00032c9 <acquire_lock>
c0003f5d:	83 c4 10             	add    $0x10,%esp
c0003f60:	e8 ae ee ff ff       	call   c0002e13 <running_thread>
c0003f65:	89 c2                	mov    %eax,%edx
c0003f67:	8b 45 08             	mov    0x8(%ebp),%eax
c0003f6a:	89 50 18             	mov    %edx,0x18(%eax)
c0003f6d:	83 ec 0c             	sub    $0xc,%esp
c0003f70:	6a 02                	push   $0x2
c0003f72:	e8 6d f2 ff ff       	call   c00031e4 <thread_block>
c0003f77:	83 c4 10             	add    $0x10,%esp
c0003f7a:	8b 45 08             	mov    0x8(%ebp),%eax
c0003f7d:	83 ec 0c             	sub    $0xc,%esp
c0003f80:	50                   	push   %eax
c0003f81:	e8 b4 f3 ff ff       	call   c000333a <release_lock>
c0003f86:	83 c4 10             	add    $0x10,%esp
c0003f89:	83 ec 0c             	sub    $0xc,%esp
c0003f8c:	ff 75 08             	pushl  0x8(%ebp)
c0003f8f:	e8 74 fe ff ff       	call   c0003e08 <empty_ioqueue>
c0003f94:	83 c4 10             	add    $0x10,%esp
c0003f97:	84 c0                	test   %al,%al
c0003f99:	75 b6                	jne    c0003f51 <ioq_get_char+0x41>
c0003f9b:	8b 45 08             	mov    0x8(%ebp),%eax
c0003f9e:	8b 40 14             	mov    0x14(%eax),%eax
c0003fa1:	85 c0                	test   %eax,%eax
c0003fa3:	74 1c                	je     c0003fc1 <ioq_get_char+0xb1>
c0003fa5:	8b 45 08             	mov    0x8(%ebp),%eax
c0003fa8:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
c0003faf:	8b 45 08             	mov    0x8(%ebp),%eax
c0003fb2:	8b 40 14             	mov    0x14(%eax),%eax
c0003fb5:	83 ec 0c             	sub    $0xc,%esp
c0003fb8:	50                   	push   %eax
c0003fb9:	e8 6d f2 ff ff       	call   c000322b <thread_unblock>
c0003fbe:	83 c4 10             	add    $0x10,%esp
c0003fc1:	8b 45 08             	mov    0x8(%ebp),%eax
c0003fc4:	8b 40 5c             	mov    0x5c(%eax),%eax
c0003fc7:	8b 55 08             	mov    0x8(%ebp),%edx
c0003fca:	0f b6 44 02 1c       	movzbl 0x1c(%edx,%eax,1),%eax
c0003fcf:	88 45 f7             	mov    %al,-0x9(%ebp)
c0003fd2:	8b 45 08             	mov    0x8(%ebp),%eax
c0003fd5:	8b 40 5c             	mov    0x5c(%eax),%eax
c0003fd8:	83 ec 0c             	sub    $0xc,%esp
c0003fdb:	50                   	push   %eax
c0003fdc:	e8 e4 fd ff ff       	call   c0003dc5 <next_pos>
c0003fe1:	83 c4 10             	add    $0x10,%esp
c0003fe4:	89 c2                	mov    %eax,%edx
c0003fe6:	8b 45 08             	mov    0x8(%ebp),%eax
c0003fe9:	89 50 5c             	mov    %edx,0x5c(%eax)
c0003fec:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
c0003ff0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0003ff3:	c9                   	leave  
c0003ff4:	c3                   	ret    

c0003ff5 <update_tss_esp>:
c0003ff5:	55                   	push   %ebp
c0003ff6:	89 e5                	mov    %esp,%ebp
c0003ff8:	e8 00 d6 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0003ffd:	05 03 30 00 00       	add    $0x3003,%eax
c0004002:	8b 55 08             	mov    0x8(%ebp),%edx
c0004005:	81 c2 00 10 00 00    	add    $0x1000,%edx
c000400b:	89 90 c4 05 00 00    	mov    %edx,0x5c4(%eax)
c0004011:	90                   	nop
c0004012:	5d                   	pop    %ebp
c0004013:	c3                   	ret    

c0004014 <make_gdt_desc>:
c0004014:	55                   	push   %ebp
c0004015:	89 e5                	mov    %esp,%ebp
c0004017:	83 ec 18             	sub    $0x18,%esp
c000401a:	e8 de d5 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c000401f:	05 e1 2f 00 00       	add    $0x2fe1,%eax
c0004024:	8b 55 14             	mov    0x14(%ebp),%edx
c0004027:	8b 45 18             	mov    0x18(%ebp),%eax
c000402a:	88 55 ec             	mov    %dl,-0x14(%ebp)
c000402d:	88 45 e8             	mov    %al,-0x18(%ebp)
c0004030:	8b 45 0c             	mov    0xc(%ebp),%eax
c0004033:	89 45 fc             	mov    %eax,-0x4(%ebp)
c0004036:	8b 45 10             	mov    0x10(%ebp),%eax
c0004039:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
c000403d:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0004040:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
c0004044:	8b 45 fc             	mov    -0x4(%ebp),%eax
c0004047:	c1 e8 10             	shr    $0x10,%eax
c000404a:	88 45 f8             	mov    %al,-0x8(%ebp)
c000404d:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
c0004051:	88 45 f9             	mov    %al,-0x7(%ebp)
c0004054:	8b 45 10             	mov    0x10(%ebp),%eax
c0004057:	c1 e8 10             	shr    $0x10,%eax
c000405a:	83 e0 0f             	and    $0xf,%eax
c000405d:	89 c2                	mov    %eax,%edx
c000405f:	0f b6 45 e8          	movzbl -0x18(%ebp),%eax
c0004063:	01 d0                	add    %edx,%eax
c0004065:	88 45 fa             	mov    %al,-0x6(%ebp)
c0004068:	8b 45 fc             	mov    -0x4(%ebp),%eax
c000406b:	c1 e8 18             	shr    $0x18,%eax
c000406e:	88 45 fb             	mov    %al,-0x5(%ebp)
c0004071:	8b 4d 08             	mov    0x8(%ebp),%ecx
c0004074:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004077:	8b 55 f8             	mov    -0x8(%ebp),%edx
c000407a:	89 01                	mov    %eax,(%ecx)
c000407c:	89 51 04             	mov    %edx,0x4(%ecx)
c000407f:	8b 45 08             	mov    0x8(%ebp),%eax
c0004082:	c9                   	leave  
c0004083:	c2 04 00             	ret    $0x4

c0004086 <tss_init>:
c0004086:	55                   	push   %ebp
c0004087:	89 e5                	mov    %esp,%ebp
c0004089:	56                   	push   %esi
c000408a:	53                   	push   %ebx
c000408b:	83 ec 20             	sub    $0x20,%esp
c000408e:	e8 6e d5 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0004093:	81 c3 6d 2f 00 00    	add    $0x2f6d,%ebx
c0004099:	c7 45 f4 6c 00 00 00 	movl   $0x6c,-0xc(%ebp)
c00040a0:	83 ec 04             	sub    $0x4,%esp
c00040a3:	ff 75 f4             	pushl  -0xc(%ebp)
c00040a6:	6a 00                	push   $0x0
c00040a8:	8d 83 c0 05 00 00    	lea    0x5c0(%ebx),%eax
c00040ae:	50                   	push   %eax
c00040af:	e8 d2 ea ff ff       	call   c0002b86 <memset>
c00040b4:	83 c4 10             	add    $0x10,%esp
c00040b7:	c7 83 c8 05 00 00 10 	movl   $0x10,0x5c8(%ebx)
c00040be:	00 00 00 
c00040c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00040c4:	89 83 28 06 00 00    	mov    %eax,0x628(%ebx)
c00040ca:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00040cd:	8d 50 ff             	lea    -0x1(%eax),%edx
c00040d0:	be 23 09 00 c0       	mov    $0xc0000923,%esi
c00040d5:	8d 45 e0             	lea    -0x20(%ebp),%eax
c00040d8:	83 ec 0c             	sub    $0xc,%esp
c00040db:	68 80 00 00 00       	push   $0x80
c00040e0:	68 89 00 00 00       	push   $0x89
c00040e5:	52                   	push   %edx
c00040e6:	8d 93 c0 05 00 00    	lea    0x5c0(%ebx),%edx
c00040ec:	52                   	push   %edx
c00040ed:	50                   	push   %eax
c00040ee:	e8 21 ff ff ff       	call   c0004014 <make_gdt_desc>
c00040f3:	83 c4 1c             	add    $0x1c,%esp
c00040f6:	8b 45 e0             	mov    -0x20(%ebp),%eax
c00040f9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
c00040fc:	89 06                	mov    %eax,(%esi)
c00040fe:	89 56 04             	mov    %edx,0x4(%esi)
c0004101:	bb 2b 09 00 c0       	mov    $0xc000092b,%ebx
c0004106:	8d 45 e0             	lea    -0x20(%ebp),%eax
c0004109:	83 ec 0c             	sub    $0xc,%esp
c000410c:	68 c0 00 00 00       	push   $0xc0
c0004111:	68 f8 00 00 00       	push   $0xf8
c0004116:	68 ff ff 0f 00       	push   $0xfffff
c000411b:	6a 00                	push   $0x0
c000411d:	50                   	push   %eax
c000411e:	e8 f1 fe ff ff       	call   c0004014 <make_gdt_desc>
c0004123:	83 c4 1c             	add    $0x1c,%esp
c0004126:	8b 45 e0             	mov    -0x20(%ebp),%eax
c0004129:	8b 55 e4             	mov    -0x1c(%ebp),%edx
c000412c:	89 03                	mov    %eax,(%ebx)
c000412e:	89 53 04             	mov    %edx,0x4(%ebx)
c0004131:	bb 33 09 00 c0       	mov    $0xc0000933,%ebx
c0004136:	8d 45 e0             	lea    -0x20(%ebp),%eax
c0004139:	83 ec 0c             	sub    $0xc,%esp
c000413c:	68 c0 00 00 00       	push   $0xc0
c0004141:	68 f2 00 00 00       	push   $0xf2
c0004146:	68 ff ff 0f 00       	push   $0xfffff
c000414b:	6a 00                	push   $0x0
c000414d:	50                   	push   %eax
c000414e:	e8 c1 fe ff ff       	call   c0004014 <make_gdt_desc>
c0004153:	83 c4 1c             	add    $0x1c,%esp
c0004156:	8b 45 e0             	mov    -0x20(%ebp),%eax
c0004159:	8b 55 e4             	mov    -0x1c(%ebp),%edx
c000415c:	89 03                	mov    %eax,(%ebx)
c000415e:	89 53 04             	mov    %edx,0x4(%ebx)
c0004161:	c7 45 e8 37 00 03 09 	movl   $0x9030037,-0x18(%ebp)
c0004168:	c7 45 ec 00 c0 00 00 	movl   $0xc000,-0x14(%ebp)
c000416f:	0f 01 55 e8          	lgdtl  -0x18(%ebp)
c0004173:	b8 20 00 00 00       	mov    $0x20,%eax
c0004178:	0f 00 d8             	ltr    %ax
c000417b:	90                   	nop
c000417c:	8d 65 f8             	lea    -0x8(%ebp),%esp
c000417f:	5b                   	pop    %ebx
c0004180:	5e                   	pop    %esi
c0004181:	5d                   	pop    %ebp
c0004182:	c3                   	ret    

c0004183 <start_process>:
c0004183:	55                   	push   %ebp
c0004184:	89 e5                	mov    %esp,%ebp
c0004186:	53                   	push   %ebx
c0004187:	83 ec 14             	sub    $0x14,%esp
c000418a:	e8 72 d4 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c000418f:	81 c3 71 2e 00 00    	add    $0x2e71,%ebx
c0004195:	8b 45 08             	mov    0x8(%ebp),%eax
c0004198:	89 45 f4             	mov    %eax,-0xc(%ebp)
c000419b:	e8 73 ec ff ff       	call   c0002e13 <running_thread>
c00041a0:	89 45 f0             	mov    %eax,-0x10(%ebp)
c00041a3:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00041a6:	8b 00                	mov    (%eax),%eax
c00041a8:	8d 90 80 00 00 00    	lea    0x80(%eax),%edx
c00041ae:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00041b1:	89 10                	mov    %edx,(%eax)
c00041b3:	8b 45 f0             	mov    -0x10(%ebp),%eax
c00041b6:	8b 00                	mov    (%eax),%eax
c00041b8:	89 45 ec             	mov    %eax,-0x14(%ebp)
c00041bb:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041be:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)
c00041c5:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041c8:	8b 50 20             	mov    0x20(%eax),%edx
c00041cb:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041ce:	89 50 1c             	mov    %edx,0x1c(%eax)
c00041d1:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041d4:	8b 50 1c             	mov    0x1c(%eax),%edx
c00041d7:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041da:	89 50 14             	mov    %edx,0x14(%eax)
c00041dd:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041e0:	8b 50 14             	mov    0x14(%eax),%edx
c00041e3:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041e6:	89 50 10             	mov    %edx,0x10(%eax)
c00041e9:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041ec:	8b 50 10             	mov    0x10(%eax),%edx
c00041ef:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041f2:	89 50 0c             	mov    %edx,0xc(%eax)
c00041f5:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041f8:	8b 50 0c             	mov    0xc(%eax),%edx
c00041fb:	8b 45 ec             	mov    -0x14(%ebp),%eax
c00041fe:	89 50 08             	mov    %edx,0x8(%eax)
c0004201:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004204:	8b 50 08             	mov    0x8(%eax),%edx
c0004207:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000420a:	89 50 04             	mov    %edx,0x4(%eax)
c000420d:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004210:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
c0004217:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000421a:	c7 40 28 33 00 00 00 	movl   $0x33,0x28(%eax)
c0004221:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004224:	8b 50 28             	mov    0x28(%eax),%edx
c0004227:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000422a:	89 50 2c             	mov    %edx,0x2c(%eax)
c000422d:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004230:	8b 50 2c             	mov    0x2c(%eax),%edx
c0004233:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004236:	89 50 30             	mov    %edx,0x30(%eax)
c0004239:	8b 55 f4             	mov    -0xc(%ebp),%edx
c000423c:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000423f:	89 50 38             	mov    %edx,0x38(%eax)
c0004242:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004245:	c7 40 3c 2b 00 00 00 	movl   $0x2b,0x3c(%eax)
c000424c:	8b 45 ec             	mov    -0x14(%ebp),%eax
c000424f:	c7 40 40 02 02 00 00 	movl   $0x202,0x40(%eax)
c0004256:	83 ec 08             	sub    $0x8,%esp
c0004259:	68 00 f0 ff bf       	push   $0xbffff000
c000425e:	6a 01                	push   $0x1
c0004260:	e8 f4 e7 ff ff       	call   c0002a59 <get_a_page>
c0004265:	83 c4 10             	add    $0x10,%esp
c0004268:	05 00 10 00 00       	add    $0x1000,%eax
c000426d:	89 c2                	mov    %eax,%edx
c000426f:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004272:	89 50 44             	mov    %edx,0x44(%eax)
c0004275:	8b 45 ec             	mov    -0x14(%ebp),%eax
c0004278:	c7 40 48 33 00 00 00 	movl   $0x33,0x48(%eax)
c000427f:	8b 65 ec             	mov    -0x14(%ebp),%esp
c0004282:	e9 99 2d 00 00       	jmp    c0007020 <intr_exit>
c0004287:	90                   	nop
c0004288:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000428b:	c9                   	leave  
c000428c:	c3                   	ret    

c000428d <page_dir_activate>:
c000428d:	55                   	push   %ebp
c000428e:	89 e5                	mov    %esp,%ebp
c0004290:	53                   	push   %ebx
c0004291:	83 ec 14             	sub    $0x14,%esp
c0004294:	e8 64 d3 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0004299:	05 67 2d 00 00       	add    $0x2d67,%eax
c000429e:	c7 45 f4 00 00 10 00 	movl   $0x100000,-0xc(%ebp)
c00042a5:	8b 55 08             	mov    0x8(%ebp),%edx
c00042a8:	8b 52 38             	mov    0x38(%edx),%edx
c00042ab:	85 d2                	test   %edx,%edx
c00042ad:	74 17                	je     c00042c6 <page_dir_activate+0x39>
c00042af:	8b 55 08             	mov    0x8(%ebp),%edx
c00042b2:	8b 52 38             	mov    0x38(%edx),%edx
c00042b5:	83 ec 0c             	sub    $0xc,%esp
c00042b8:	52                   	push   %edx
c00042b9:	89 c3                	mov    %eax,%ebx
c00042bb:	e8 90 e8 ff ff       	call   c0002b50 <addr_v2p>
c00042c0:	83 c4 10             	add    $0x10,%esp
c00042c3:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00042c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
c00042c9:	0f 22 d8             	mov    %eax,%cr3
c00042cc:	90                   	nop
c00042cd:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00042d0:	c9                   	leave  
c00042d1:	c3                   	ret    

c00042d2 <process_activate>:
c00042d2:	55                   	push   %ebp
c00042d3:	89 e5                	mov    %esp,%ebp
c00042d5:	53                   	push   %ebx
c00042d6:	83 ec 04             	sub    $0x4,%esp
c00042d9:	e8 23 d3 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c00042de:	81 c3 22 2d 00 00    	add    $0x2d22,%ebx
c00042e4:	83 ec 0c             	sub    $0xc,%esp
c00042e7:	ff 75 08             	pushl  0x8(%ebp)
c00042ea:	e8 9e ff ff ff       	call   c000428d <page_dir_activate>
c00042ef:	83 c4 10             	add    $0x10,%esp
c00042f2:	8b 45 08             	mov    0x8(%ebp),%eax
c00042f5:	8b 40 38             	mov    0x38(%eax),%eax
c00042f8:	85 c0                	test   %eax,%eax
c00042fa:	74 0e                	je     c000430a <process_activate+0x38>
c00042fc:	83 ec 0c             	sub    $0xc,%esp
c00042ff:	ff 75 08             	pushl  0x8(%ebp)
c0004302:	e8 ee fc ff ff       	call   c0003ff5 <update_tss_esp>
c0004307:	83 c4 10             	add    $0x10,%esp
c000430a:	90                   	nop
c000430b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000430e:	c9                   	leave  
c000430f:	c3                   	ret    

c0004310 <create_page_dir>:
c0004310:	55                   	push   %ebp
c0004311:	89 e5                	mov    %esp,%ebp
c0004313:	53                   	push   %ebx
c0004314:	83 ec 14             	sub    $0x14,%esp
c0004317:	e8 e5 d2 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c000431c:	81 c3 e4 2c 00 00    	add    $0x2ce4,%ebx
c0004322:	83 ec 0c             	sub    $0xc,%esp
c0004325:	6a 01                	push   $0x1
c0004327:	e8 45 e6 ff ff       	call   c0002971 <get_kernel_pages>
c000432c:	83 c4 10             	add    $0x10,%esp
c000432f:	89 45 f4             	mov    %eax,-0xc(%ebp)
c0004332:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004335:	05 00 0c 00 00       	add    $0xc00,%eax
c000433a:	83 ec 04             	sub    $0x4,%esp
c000433d:	68 00 04 00 00       	push   $0x400
c0004342:	68 00 fc ff ff       	push   $0xfffffc00
c0004347:	50                   	push   %eax
c0004348:	e8 a5 e8 ff ff       	call   c0002bf2 <memcpy>
c000434d:	83 c4 10             	add    $0x10,%esp
c0004350:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004353:	83 ec 0c             	sub    $0xc,%esp
c0004356:	50                   	push   %eax
c0004357:	e8 f4 e7 ff ff       	call   c0002b50 <addr_v2p>
c000435c:	83 c4 10             	add    $0x10,%esp
c000435f:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0004362:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004365:	05 fc 0f 00 00       	add    $0xffc,%eax
c000436a:	8b 55 f0             	mov    -0x10(%ebp),%edx
c000436d:	83 ca 07             	or     $0x7,%edx
c0004370:	89 10                	mov    %edx,(%eax)
c0004372:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004375:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c0004378:	c9                   	leave  
c0004379:	c3                   	ret    

c000437a <create_user_vaddr_bitmap>:
c000437a:	55                   	push   %ebp
c000437b:	89 e5                	mov    %esp,%ebp
c000437d:	53                   	push   %ebx
c000437e:	83 ec 14             	sub    $0x14,%esp
c0004381:	e8 7b d2 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c0004386:	81 c3 7a 2c 00 00    	add    $0x2c7a,%ebx
c000438c:	8b 45 08             	mov    0x8(%ebp),%eax
c000438f:	c7 40 44 00 80 04 08 	movl   $0x8048000,0x44(%eax)
c0004396:	c7 45 f4 17 00 00 00 	movl   $0x17,-0xc(%ebp)
c000439d:	83 ec 0c             	sub    $0xc,%esp
c00043a0:	ff 75 f4             	pushl  -0xc(%ebp)
c00043a3:	e8 c9 e5 ff ff       	call   c0002971 <get_kernel_pages>
c00043a8:	83 c4 10             	add    $0x10,%esp
c00043ab:	89 c2                	mov    %eax,%edx
c00043ad:	8b 45 08             	mov    0x8(%ebp),%eax
c00043b0:	89 50 40             	mov    %edx,0x40(%eax)
c00043b3:	8b 45 08             	mov    0x8(%ebp),%eax
c00043b6:	c7 40 3c f7 6f 01 00 	movl   $0x16ff7,0x3c(%eax)
c00043bd:	8b 45 08             	mov    0x8(%ebp),%eax
c00043c0:	83 c0 3c             	add    $0x3c,%eax
c00043c3:	83 ec 0c             	sub    $0xc,%esp
c00043c6:	50                   	push   %eax
c00043c7:	e8 58 e0 ff ff       	call   c0002424 <bitmap_init>
c00043cc:	83 c4 10             	add    $0x10,%esp
c00043cf:	90                   	nop
c00043d0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c00043d3:	c9                   	leave  
c00043d4:	c3                   	ret    

c00043d5 <process_execute>:
c00043d5:	55                   	push   %ebp
c00043d6:	89 e5                	mov    %esp,%ebp
c00043d8:	53                   	push   %ebx
c00043d9:	83 ec 14             	sub    $0x14,%esp
c00043dc:	e8 20 d2 ff ff       	call   c0001601 <__x86.get_pc_thunk.bx>
c00043e1:	81 c3 1f 2c 00 00    	add    $0x2c1f,%ebx
c00043e7:	83 ec 0c             	sub    $0xc,%esp
c00043ea:	6a 01                	push   $0x1
c00043ec:	e8 80 e5 ff ff       	call   c0002971 <get_kernel_pages>
c00043f1:	83 c4 10             	add    $0x10,%esp
c00043f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
c00043f7:	83 ec 04             	sub    $0x4,%esp
c00043fa:	6a 14                	push   $0x14
c00043fc:	ff 75 0c             	pushl  0xc(%ebp)
c00043ff:	ff 75 f4             	pushl  -0xc(%ebp)
c0004402:	e8 db ea ff ff       	call   c0002ee2 <init_thread>
c0004407:	83 c4 10             	add    $0x10,%esp
c000440a:	83 ec 0c             	sub    $0xc,%esp
c000440d:	ff 75 f4             	pushl  -0xc(%ebp)
c0004410:	e8 65 ff ff ff       	call   c000437a <create_user_vaddr_bitmap>
c0004415:	83 c4 10             	add    $0x10,%esp
c0004418:	83 ec 04             	sub    $0x4,%esp
c000441b:	ff 75 08             	pushl  0x8(%ebp)
c000441e:	8d 83 83 d1 ff ff    	lea    -0x2e7d(%ebx),%eax
c0004424:	50                   	push   %eax
c0004425:	ff 75 f4             	pushl  -0xc(%ebp)
c0004428:	e8 31 ea ff ff       	call   c0002e5e <thread_create>
c000442d:	83 c4 10             	add    $0x10,%esp
c0004430:	e8 db fe ff ff       	call   c0004310 <create_page_dir>
c0004435:	89 c2                	mov    %eax,%edx
c0004437:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000443a:	89 50 38             	mov    %edx,0x38(%eax)
c000443d:	e8 f7 de ff ff       	call   c0002339 <intr_status>
c0004442:	89 45 f0             	mov    %eax,-0x10(%ebp)
c0004445:	e8 c3 de ff ff       	call   c000230d <intclose>
c000444a:	8b 45 f4             	mov    -0xc(%ebp),%eax
c000444d:	83 c0 28             	add    $0x28,%eax
c0004450:	83 ec 08             	sub    $0x8,%esp
c0004453:	50                   	push   %eax
c0004454:	c7 c0 04 7b 00 c0    	mov    $0xc0007b04,%eax
c000445a:	50                   	push   %eax
c000445b:	e8 2d f0 ff ff       	call   c000348d <_list_add_back>
c0004460:	83 c4 10             	add    $0x10,%esp
c0004463:	8b 45 f4             	mov    -0xc(%ebp),%eax
c0004466:	83 c0 30             	add    $0x30,%eax
c0004469:	83 ec 08             	sub    $0x8,%esp
c000446c:	50                   	push   %eax
c000446d:	c7 c0 14 7b 00 c0    	mov    $0xc0007b14,%eax
c0004473:	50                   	push   %eax
c0004474:	e8 14 f0 ff ff       	call   c000348d <_list_add_back>
c0004479:	83 c4 10             	add    $0x10,%esp
c000447c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
c0004480:	74 05                	je     c0004487 <process_execute+0xb2>
c0004482:	e8 5a de ff ff       	call   c00022e1 <intopen>
c0004487:	90                   	nop
c0004488:	8b 5d fc             	mov    -0x4(%ebp),%ebx
c000448b:	c9                   	leave  
c000448c:	c3                   	ret    

c000448d <sys_getpid>:
c000448d:	55                   	push   %ebp
c000448e:	89 e5                	mov    %esp,%ebp
c0004490:	53                   	push   %ebx
c0004491:	83 ec 04             	sub    $0x4,%esp
c0004494:	e8 64 d1 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c0004499:	05 67 2b 00 00       	add    $0x2b67,%eax
c000449e:	89 c3                	mov    %eax,%ebx
c00044a0:	e8 6e e9 ff ff       	call   c0002e13 <running_thread>
c00044a5:	0f b7 40 04          	movzwl 0x4(%eax),%eax
c00044a9:	98                   	cwtl   
c00044aa:	83 c4 04             	add    $0x4,%esp
c00044ad:	5b                   	pop    %ebx
c00044ae:	5d                   	pop    %ebp
c00044af:	c3                   	ret    

c00044b0 <syscall_init>:
c00044b0:	55                   	push   %ebp
c00044b1:	89 e5                	mov    %esp,%ebp
c00044b3:	e8 45 d1 ff ff       	call   c00015fd <__x86.get_pc_thunk.ax>
c00044b8:	05 48 2b 00 00       	add    $0x2b48,%eax
c00044bd:	c7 c2 e0 7b 00 c0    	mov    $0xc0007be0,%edx
c00044c3:	8d 80 8d d4 ff ff    	lea    -0x2b73(%eax),%eax
c00044c9:	89 02                	mov    %eax,(%edx)
c00044cb:	90                   	nop
c00044cc:	5d                   	pop    %ebp
c00044cd:	c3                   	ret    
